

Microchip Technology PIC PRO Macro Assembler V1.43 build -156212558 
                                                                                               Mon Sep 04 01:59:53 2017

Microchip Technology Omniscient Code Generator v1.43 (PRO mode) build 201707250354
     1                           	processor	16F1936
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	text10,local,class=CODE,merge=1,delta=2
    12                           	psect	pa_nodes0,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 1.43
    16                           ; Generated 25/07/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F1936 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001E                     	;# 
    78  001F                     	;# 
    79  008C                     	;# 
    80  008D                     	;# 
    81  008E                     	;# 
    82  0090                     	;# 
    83  0091                     	;# 
    84  0092                     	;# 
    85  0093                     	;# 
    86  0095                     	;# 
    87  0096                     	;# 
    88  0097                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009A                     	;# 
    92  009B                     	;# 
    93  009B                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  010C                     	;# 
    98  010D                     	;# 
    99  010E                     	;# 
   100  0110                     	;# 
   101  0111                     	;# 
   102  0112                     	;# 
   103  0113                     	;# 
   104  0114                     	;# 
   105  0115                     	;# 
   106  0116                     	;# 
   107  0117                     	;# 
   108  0118                     	;# 
   109  0119                     	;# 
   110  011A                     	;# 
   111  011B                     	;# 
   112  011D                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  0191                     	;# 
   116  0191                     	;# 
   117  0192                     	;# 
   118  0193                     	;# 
   119  0193                     	;# 
   120  0193                     	;# 
   121  0194                     	;# 
   122  0195                     	;# 
   123  0196                     	;# 
   124  0199                     	;# 
   125  019A                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019B                     	;# 
   130  019C                     	;# 
   131  019C                     	;# 
   132  019D                     	;# 
   133  019E                     	;# 
   134  019F                     	;# 
   135  020D                     	;# 
   136  0210                     	;# 
   137  0211                     	;# 
   138  0212                     	;# 
   139  0213                     	;# 
   140  0214                     	;# 
   141  0215                     	;# 
   142  0215                     	;# 
   143  0216                     	;# 
   144  0217                     	;# 
   145  0291                     	;# 
   146  0291                     	;# 
   147  0292                     	;# 
   148  0293                     	;# 
   149  0294                     	;# 
   150  0295                     	;# 
   151  0295                     	;# 
   152  0296                     	;# 
   153  0298                     	;# 
   154  0298                     	;# 
   155  0299                     	;# 
   156  029A                     	;# 
   157  029B                     	;# 
   158  029C                     	;# 
   159  029C                     	;# 
   160  029D                     	;# 
   161  029E                     	;# 
   162  029F                     	;# 
   163  0311                     	;# 
   164  0311                     	;# 
   165  0312                     	;# 
   166  0313                     	;# 
   167  0314                     	;# 
   168  0315                     	;# 
   169  0315                     	;# 
   170  0316                     	;# 
   171  0318                     	;# 
   172  0318                     	;# 
   173  0319                     	;# 
   174  031A                     	;# 
   175  031C                     	;# 
   176  031C                     	;# 
   177  031D                     	;# 
   178  031E                     	;# 
   179  0394                     	;# 
   180  0395                     	;# 
   181  0396                     	;# 
   182  0415                     	;# 
   183  0416                     	;# 
   184  0417                     	;# 
   185  041C                     	;# 
   186  041D                     	;# 
   187  041E                     	;# 
   188  0791                     	;# 
   189  0792                     	;# 
   190  0793                     	;# 
   191  0794                     	;# 
   192  0795                     	;# 
   193  0798                     	;# 
   194  0799                     	;# 
   195  07A0                     	;# 
   196  07A1                     	;# 
   197  07A3                     	;# 
   198  07A4                     	;# 
   199  07A6                     	;# 
   200  07A7                     	;# 
   201  07A9                     	;# 
   202  07AA                     	;# 
   203  0FE4                     	;# 
   204  0FE5                     	;# 
   205  0FE6                     	;# 
   206  0FE7                     	;# 
   207  0FE8                     	;# 
   208  0FE9                     	;# 
   209  0FEA                     	;# 
   210  0FEB                     	;# 
   211  0FED                     	;# 
   212  0FEE                     	;# 
   213  0FEF                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  008E                     	;# 
   247  0090                     	;# 
   248  0091                     	;# 
   249  0092                     	;# 
   250  0093                     	;# 
   251  0095                     	;# 
   252  0096                     	;# 
   253  0097                     	;# 
   254  0098                     	;# 
   255  0099                     	;# 
   256  009A                     	;# 
   257  009B                     	;# 
   258  009B                     	;# 
   259  009C                     	;# 
   260  009D                     	;# 
   261  009E                     	;# 
   262  010C                     	;# 
   263  010D                     	;# 
   264  010E                     	;# 
   265  0110                     	;# 
   266  0111                     	;# 
   267  0112                     	;# 
   268  0113                     	;# 
   269  0114                     	;# 
   270  0115                     	;# 
   271  0116                     	;# 
   272  0117                     	;# 
   273  0118                     	;# 
   274  0119                     	;# 
   275  011A                     	;# 
   276  011B                     	;# 
   277  011D                     	;# 
   278  018C                     	;# 
   279  018D                     	;# 
   280  0191                     	;# 
   281  0191                     	;# 
   282  0192                     	;# 
   283  0193                     	;# 
   284  0193                     	;# 
   285  0193                     	;# 
   286  0194                     	;# 
   287  0195                     	;# 
   288  0196                     	;# 
   289  0199                     	;# 
   290  019A                     	;# 
   291  019B                     	;# 
   292  019B                     	;# 
   293  019B                     	;# 
   294  019B                     	;# 
   295  019C                     	;# 
   296  019C                     	;# 
   297  019D                     	;# 
   298  019E                     	;# 
   299  019F                     	;# 
   300  020D                     	;# 
   301  0210                     	;# 
   302  0211                     	;# 
   303  0212                     	;# 
   304  0213                     	;# 
   305  0214                     	;# 
   306  0215                     	;# 
   307  0215                     	;# 
   308  0216                     	;# 
   309  0217                     	;# 
   310  0291                     	;# 
   311  0291                     	;# 
   312  0292                     	;# 
   313  0293                     	;# 
   314  0294                     	;# 
   315  0295                     	;# 
   316  0295                     	;# 
   317  0296                     	;# 
   318  0298                     	;# 
   319  0298                     	;# 
   320  0299                     	;# 
   321  029A                     	;# 
   322  029B                     	;# 
   323  029C                     	;# 
   324  029C                     	;# 
   325  029D                     	;# 
   326  029E                     	;# 
   327  029F                     	;# 
   328  0311                     	;# 
   329  0311                     	;# 
   330  0312                     	;# 
   331  0313                     	;# 
   332  0314                     	;# 
   333  0315                     	;# 
   334  0315                     	;# 
   335  0316                     	;# 
   336  0318                     	;# 
   337  0318                     	;# 
   338  0319                     	;# 
   339  031A                     	;# 
   340  031C                     	;# 
   341  031C                     	;# 
   342  031D                     	;# 
   343  031E                     	;# 
   344  0394                     	;# 
   345  0395                     	;# 
   346  0396                     	;# 
   347  0415                     	;# 
   348  0416                     	;# 
   349  0417                     	;# 
   350  041C                     	;# 
   351  041D                     	;# 
   352  041E                     	;# 
   353  0791                     	;# 
   354  0792                     	;# 
   355  0793                     	;# 
   356  0794                     	;# 
   357  0795                     	;# 
   358  0798                     	;# 
   359  0799                     	;# 
   360  07A0                     	;# 
   361  07A1                     	;# 
   362  07A3                     	;# 
   363  07A4                     	;# 
   364  07A6                     	;# 
   365  07A7                     	;# 
   366  07A9                     	;# 
   367  07AA                     	;# 
   368  0FE4                     	;# 
   369  0FE5                     	;# 
   370  0FE6                     	;# 
   371  0FE7                     	;# 
   372  0FE8                     	;# 
   373  0FE9                     	;# 
   374  0FEA                     	;# 
   375  0FEB                     	;# 
   376  0FED                     	;# 
   377  0FEE                     	;# 
   378  0FEF                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001E                     	;# 
   408  001F                     	;# 
   409  008C                     	;# 
   410  008D                     	;# 
   411  008E                     	;# 
   412  0090                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0095                     	;# 
   417  0096                     	;# 
   418  0097                     	;# 
   419  0098                     	;# 
   420  0099                     	;# 
   421  009A                     	;# 
   422  009B                     	;# 
   423  009B                     	;# 
   424  009C                     	;# 
   425  009D                     	;# 
   426  009E                     	;# 
   427  010C                     	;# 
   428  010D                     	;# 
   429  010E                     	;# 
   430  0110                     	;# 
   431  0111                     	;# 
   432  0112                     	;# 
   433  0113                     	;# 
   434  0114                     	;# 
   435  0115                     	;# 
   436  0116                     	;# 
   437  0117                     	;# 
   438  0118                     	;# 
   439  0119                     	;# 
   440  011A                     	;# 
   441  011B                     	;# 
   442  011D                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  0191                     	;# 
   446  0191                     	;# 
   447  0192                     	;# 
   448  0193                     	;# 
   449  0193                     	;# 
   450  0193                     	;# 
   451  0194                     	;# 
   452  0195                     	;# 
   453  0196                     	;# 
   454  0199                     	;# 
   455  019A                     	;# 
   456  019B                     	;# 
   457  019B                     	;# 
   458  019B                     	;# 
   459  019B                     	;# 
   460  019C                     	;# 
   461  019C                     	;# 
   462  019D                     	;# 
   463  019E                     	;# 
   464  019F                     	;# 
   465  020D                     	;# 
   466  0210                     	;# 
   467  0211                     	;# 
   468  0212                     	;# 
   469  0213                     	;# 
   470  0214                     	;# 
   471  0215                     	;# 
   472  0215                     	;# 
   473  0216                     	;# 
   474  0217                     	;# 
   475  0291                     	;# 
   476  0291                     	;# 
   477  0292                     	;# 
   478  0293                     	;# 
   479  0294                     	;# 
   480  0295                     	;# 
   481  0295                     	;# 
   482  0296                     	;# 
   483  0298                     	;# 
   484  0298                     	;# 
   485  0299                     	;# 
   486  029A                     	;# 
   487  029B                     	;# 
   488  029C                     	;# 
   489  029C                     	;# 
   490  029D                     	;# 
   491  029E                     	;# 
   492  029F                     	;# 
   493  0311                     	;# 
   494  0311                     	;# 
   495  0312                     	;# 
   496  0313                     	;# 
   497  0314                     	;# 
   498  0315                     	;# 
   499  0315                     	;# 
   500  0316                     	;# 
   501  0318                     	;# 
   502  0318                     	;# 
   503  0319                     	;# 
   504  031A                     	;# 
   505  031C                     	;# 
   506  031C                     	;# 
   507  031D                     	;# 
   508  031E                     	;# 
   509  0394                     	;# 
   510  0395                     	;# 
   511  0396                     	;# 
   512  0415                     	;# 
   513  0416                     	;# 
   514  0417                     	;# 
   515  041C                     	;# 
   516  041D                     	;# 
   517  041E                     	;# 
   518  0791                     	;# 
   519  0792                     	;# 
   520  0793                     	;# 
   521  0794                     	;# 
   522  0795                     	;# 
   523  0798                     	;# 
   524  0799                     	;# 
   525  07A0                     	;# 
   526  07A1                     	;# 
   527  07A3                     	;# 
   528  07A4                     	;# 
   529  07A6                     	;# 
   530  07A7                     	;# 
   531  07A9                     	;# 
   532  07AA                     	;# 
   533  0FE4                     	;# 
   534  0FE5                     	;# 
   535  0FE6                     	;# 
   536  0FE7                     	;# 
   537  0FE8                     	;# 
   538  0FE9                     	;# 
   539  0FEA                     	;# 
   540  0FEB                     	;# 
   541  0FED                     	;# 
   542  0FEE                     	;# 
   543  0FEF                     	;# 
   544  0000                     	;# 
   545  0001                     	;# 
   546  0002                     	;# 
   547  0003                     	;# 
   548  0004                     	;# 
   549  0005                     	;# 
   550  0006                     	;# 
   551  0007                     	;# 
   552  0008                     	;# 
   553  0009                     	;# 
   554  000A                     	;# 
   555  000B                     	;# 
   556  000C                     	;# 
   557  000D                     	;# 
   558  000E                     	;# 
   559  0010                     	;# 
   560  0011                     	;# 
   561  0012                     	;# 
   562  0013                     	;# 
   563  0015                     	;# 
   564  0016                     	;# 
   565  0016                     	;# 
   566  0017                     	;# 
   567  0018                     	;# 
   568  0019                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001C                     	;# 
   572  001E                     	;# 
   573  001F                     	;# 
   574  008C                     	;# 
   575  008D                     	;# 
   576  008E                     	;# 
   577  0090                     	;# 
   578  0091                     	;# 
   579  0092                     	;# 
   580  0093                     	;# 
   581  0095                     	;# 
   582  0096                     	;# 
   583  0097                     	;# 
   584  0098                     	;# 
   585  0099                     	;# 
   586  009A                     	;# 
   587  009B                     	;# 
   588  009B                     	;# 
   589  009C                     	;# 
   590  009D                     	;# 
   591  009E                     	;# 
   592  010C                     	;# 
   593  010D                     	;# 
   594  010E                     	;# 
   595  0110                     	;# 
   596  0111                     	;# 
   597  0112                     	;# 
   598  0113                     	;# 
   599  0114                     	;# 
   600  0115                     	;# 
   601  0116                     	;# 
   602  0117                     	;# 
   603  0118                     	;# 
   604  0119                     	;# 
   605  011A                     	;# 
   606  011B                     	;# 
   607  011D                     	;# 
   608  018C                     	;# 
   609  018D                     	;# 
   610  0191                     	;# 
   611  0191                     	;# 
   612  0192                     	;# 
   613  0193                     	;# 
   614  0193                     	;# 
   615  0193                     	;# 
   616  0194                     	;# 
   617  0195                     	;# 
   618  0196                     	;# 
   619  0199                     	;# 
   620  019A                     	;# 
   621  019B                     	;# 
   622  019B                     	;# 
   623  019B                     	;# 
   624  019B                     	;# 
   625  019C                     	;# 
   626  019C                     	;# 
   627  019D                     	;# 
   628  019E                     	;# 
   629  019F                     	;# 
   630  020D                     	;# 
   631  0210                     	;# 
   632  0211                     	;# 
   633  0212                     	;# 
   634  0213                     	;# 
   635  0214                     	;# 
   636  0215                     	;# 
   637  0215                     	;# 
   638  0216                     	;# 
   639  0217                     	;# 
   640  0291                     	;# 
   641  0291                     	;# 
   642  0292                     	;# 
   643  0293                     	;# 
   644  0294                     	;# 
   645  0295                     	;# 
   646  0295                     	;# 
   647  0296                     	;# 
   648  0298                     	;# 
   649  0298                     	;# 
   650  0299                     	;# 
   651  029A                     	;# 
   652  029B                     	;# 
   653  029C                     	;# 
   654  029C                     	;# 
   655  029D                     	;# 
   656  029E                     	;# 
   657  029F                     	;# 
   658  0311                     	;# 
   659  0311                     	;# 
   660  0312                     	;# 
   661  0313                     	;# 
   662  0314                     	;# 
   663  0315                     	;# 
   664  0315                     	;# 
   665  0316                     	;# 
   666  0318                     	;# 
   667  0318                     	;# 
   668  0319                     	;# 
   669  031A                     	;# 
   670  031C                     	;# 
   671  031C                     	;# 
   672  031D                     	;# 
   673  031E                     	;# 
   674  0394                     	;# 
   675  0395                     	;# 
   676  0396                     	;# 
   677  0415                     	;# 
   678  0416                     	;# 
   679  0417                     	;# 
   680  041C                     	;# 
   681  041D                     	;# 
   682  041E                     	;# 
   683  0791                     	;# 
   684  0792                     	;# 
   685  0793                     	;# 
   686  0794                     	;# 
   687  0795                     	;# 
   688  0798                     	;# 
   689  0799                     	;# 
   690  07A0                     	;# 
   691  07A1                     	;# 
   692  07A3                     	;# 
   693  07A4                     	;# 
   694  07A6                     	;# 
   695  07A7                     	;# 
   696  07A9                     	;# 
   697  07AA                     	;# 
   698  0FE4                     	;# 
   699  0FE5                     	;# 
   700  0FE6                     	;# 
   701  0FE7                     	;# 
   702  0FE8                     	;# 
   703  0FE9                     	;# 
   704  0FEA                     	;# 
   705  0FEB                     	;# 
   706  0FED                     	;# 
   707  0FEE                     	;# 
   708  0FEF                     	;# 
   709  0000                     	;# 
   710  0001                     	;# 
   711  0002                     	;# 
   712  0003                     	;# 
   713  0004                     	;# 
   714  0005                     	;# 
   715  0006                     	;# 
   716  0007                     	;# 
   717  0008                     	;# 
   718  0009                     	;# 
   719  000A                     	;# 
   720  000B                     	;# 
   721  000C                     	;# 
   722  000D                     	;# 
   723  000E                     	;# 
   724  0010                     	;# 
   725  0011                     	;# 
   726  0012                     	;# 
   727  0013                     	;# 
   728  0015                     	;# 
   729  0016                     	;# 
   730  0016                     	;# 
   731  0017                     	;# 
   732  0018                     	;# 
   733  0019                     	;# 
   734  001A                     	;# 
   735  001B                     	;# 
   736  001C                     	;# 
   737  001E                     	;# 
   738  001F                     	;# 
   739  008C                     	;# 
   740  008D                     	;# 
   741  008E                     	;# 
   742  0090                     	;# 
   743  0091                     	;# 
   744  0092                     	;# 
   745  0093                     	;# 
   746  0095                     	;# 
   747  0096                     	;# 
   748  0097                     	;# 
   749  0098                     	;# 
   750  0099                     	;# 
   751  009A                     	;# 
   752  009B                     	;# 
   753  009B                     	;# 
   754  009C                     	;# 
   755  009D                     	;# 
   756  009E                     	;# 
   757  010C                     	;# 
   758  010D                     	;# 
   759  010E                     	;# 
   760  0110                     	;# 
   761  0111                     	;# 
   762  0112                     	;# 
   763  0113                     	;# 
   764  0114                     	;# 
   765  0115                     	;# 
   766  0116                     	;# 
   767  0117                     	;# 
   768  0118                     	;# 
   769  0119                     	;# 
   770  011A                     	;# 
   771  011B                     	;# 
   772  011D                     	;# 
   773  018C                     	;# 
   774  018D                     	;# 
   775  0191                     	;# 
   776  0191                     	;# 
   777  0192                     	;# 
   778  0193                     	;# 
   779  0193                     	;# 
   780  0193                     	;# 
   781  0194                     	;# 
   782  0195                     	;# 
   783  0196                     	;# 
   784  0199                     	;# 
   785  019A                     	;# 
   786  019B                     	;# 
   787  019B                     	;# 
   788  019B                     	;# 
   789  019B                     	;# 
   790  019C                     	;# 
   791  019C                     	;# 
   792  019D                     	;# 
   793  019E                     	;# 
   794  019F                     	;# 
   795  020D                     	;# 
   796  0210                     	;# 
   797  0211                     	;# 
   798  0212                     	;# 
   799  0213                     	;# 
   800  0214                     	;# 
   801  0215                     	;# 
   802  0215                     	;# 
   803  0216                     	;# 
   804  0217                     	;# 
   805  0291                     	;# 
   806  0291                     	;# 
   807  0292                     	;# 
   808  0293                     	;# 
   809  0294                     	;# 
   810  0295                     	;# 
   811  0295                     	;# 
   812  0296                     	;# 
   813  0298                     	;# 
   814  0298                     	;# 
   815  0299                     	;# 
   816  029A                     	;# 
   817  029B                     	;# 
   818  029C                     	;# 
   819  029C                     	;# 
   820  029D                     	;# 
   821  029E                     	;# 
   822  029F                     	;# 
   823  0311                     	;# 
   824  0311                     	;# 
   825  0312                     	;# 
   826  0313                     	;# 
   827  0314                     	;# 
   828  0315                     	;# 
   829  0315                     	;# 
   830  0316                     	;# 
   831  0318                     	;# 
   832  0318                     	;# 
   833  0319                     	;# 
   834  031A                     	;# 
   835  031C                     	;# 
   836  031C                     	;# 
   837  031D                     	;# 
   838  031E                     	;# 
   839  0394                     	;# 
   840  0395                     	;# 
   841  0396                     	;# 
   842  0415                     	;# 
   843  0416                     	;# 
   844  0417                     	;# 
   845  041C                     	;# 
   846  041D                     	;# 
   847  041E                     	;# 
   848  0791                     	;# 
   849  0792                     	;# 
   850  0793                     	;# 
   851  0794                     	;# 
   852  0795                     	;# 
   853  0798                     	;# 
   854  0799                     	;# 
   855  07A0                     	;# 
   856  07A1                     	;# 
   857  07A3                     	;# 
   858  07A4                     	;# 
   859  07A6                     	;# 
   860  07A7                     	;# 
   861  07A9                     	;# 
   862  07AA                     	;# 
   863  0FE4                     	;# 
   864  0FE5                     	;# 
   865  0FE6                     	;# 
   866  0FE7                     	;# 
   867  0FE8                     	;# 
   868  0FE9                     	;# 
   869  0FEA                     	;# 
   870  0FEB                     	;# 
   871  0FED                     	;# 
   872  0FEE                     	;# 
   873  0FEF                     	;# 
   874  000B                     _INTCONbits	set	11
   875  0018                     _T1CONbits	set	24
   876  0011                     _PIR1bits	set	17
   877  0016                     _TMR1L	set	22
   878  0017                     _TMR1H	set	23
   879  0019                     _T1GCON	set	25
   880  0018                     _T1CON	set	24
   881  0095                     _OPTION_REGbits	set	149
   882  008E                     _TRISC	set	142
   883  008D                     _TRISB	set	141
   884  008C                     _TRISA	set	140
   885  0090                     _TRISE	set	144
   886  0097                     _WDTCON	set	151
   887  0098                     _OSCTUNE	set	152
   888  0099                     _OSCCON	set	153
   889  0091                     _PIE1bits	set	145
   890  04D6                     _PLLR	set	1238
   891  011D                     _APFCON	set	285
   892  010E                     _LATC	set	270
   893  010D                     _LATB	set	269
   894  010C                     _LATA	set	268
   895  0110                     _LATE	set	272
   896  010E                     _LATCbits	set	270
   897  018C                     _ANSELA	set	396
   898  018D                     _ANSELB	set	397
   899  020D                     _WPUB	set	525
   900  0210                     _WPUE	set	528
   901                           
   902                           ; #config settings
   903  0000                     
   904                           	psect	cinit
   905  0014                     start_initialization:	
   906  0014                     __initialization:	
   907  0014  3020               	movlw	low __pbssBANK0
   908                           
   909                           ; Clear objects allocated to COMMON
   910  0015  01FC               	clrf	__pbssCOMMON& (0+127)
   911  0016  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   912                           
   913                           ; Clear objects allocated to BANK0
   914  0017  0084               	movwf	4
   915  0018  3000               	movlw	high __pbssBANK0
   916  0019  0085               	movwf	5
   917  001A  3024               	movlw	36
   918  001B  3181  21C8  3180   	fcall	clear_ram0
   919  001E                     end_of_initialization:	
   920                           ;End of C runtime variable initialization code
   921                           
   922  001E                     __end_of__initialization:	
   923  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   924  001F  0020               	movlb	0
   925  0020  2821               	ljmp	_main	;jump to C main() function
   926  0021                     __pmaintext:	
   927 ;;
   928 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   929 ;;
   930 ;; *************** function _main *****************
   931 ;; Defined at:
   932 ;;		line 33 in file "main.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;		None
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   941 ;; Tracked objects:
   942 ;;		On entry : B1F/0
   943 ;;		On exit  : 1F/2
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   946 ;;      Params:         0       0       0       0       0       0       0       0
   947 ;;      Locals:         0       0       0       0       0       0       0       0
   948 ;;      Temps:          0       0       0       0       0       0       0       0
   949 ;;      Totals:         0       0       0       0       0       0       0       0
   950 ;;Total ram usage:        0 bytes
   951 ;; Hardware stack levels required when called:    4
   952 ;; This function calls:
   953 ;;		_SYSTEM_Initialize
   954 ;;		_Tick_Is_Over
   955 ;; This function is called by:
   956 ;;		Startup code after reset
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           
   961                           ;psect for function _main
   962  0021                     _main:	
   963                           
   964                           ;main.c: 35: SYSTEM_Initialize();
   965                           
   966                           ;incstack = 0
   967                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   968  0021  2126  3180         	fcall	_SYSTEM_Initialize
   969                           
   970                           ;main.c: 36: (INTCONbits.GIE = 1);
   971  0023  178B               	bsf	11,7	;volatile
   972                           
   973                           ;main.c: 37: (INTCONbits.PEIE = 1);
   974  0024  170B               	bsf	11,6	;volatile
   975                           
   976                           ;main.c: 39: Tick.led1.timeout=1;
   977  0025  01A0               	clrf	_Tick
   978  0026  0AA0               	incf	_Tick,f
   979                           
   980                           ;main.c: 40: Tick.led2.timeout=1;
   981  0027  01A9               	clrf	_Tick+9
   982  0028  0AA9               	incf	_Tick+9,f
   983                           
   984                           ;main.c: 41: Tick.led3.timeout=1;
   985  0029  01B2               	clrf	_Tick+18
   986  002A  0AB2               	incf	_Tick+18,f
   987                           
   988                           ;main.c: 42: Tick.led4.timeout=1;
   989  002B  01BB               	clrf	_Tick+27
   990  002C  0ABB               	incf	_Tick+27,f
   991  002D                     l795:	
   992                           
   993                           ;main.c: 45: {
   994                           ;main.c: 46: if(Tick_Is_Over(&Tick.led1, 100)) do { LATCbits.LATC0 = ~LATCbits.LATC0; } 
      +                          while(0);
   995  002D  3064               	movlw	100
   996  002E  0020               	movlb	0	; select bank0
   997  002F  00C4               	movwf	Tick_Is_Over@ms
   998  0030  3020               	movlw	(low (_Tick| 0))& (0+255)
   999  0031  01C5               	clrf	Tick_Is_Over@ms+1
  1000  0032  01C6               	clrf	Tick_Is_Over@ms+2
  1001  0033  01C7               	clrf	Tick_Is_Over@ms+3
  1002  0034  206D  3180         	fcall	_Tick_Is_Over
  1003  0036  3A00               	xorlw	0
  1004  0037  1903               	skipnz
  1005  0038  283C               	goto	l799
  1006  0039  3001               	movlw	1
  1007  003A  0022               	movlb	2	; select bank2
  1008  003B  068E               	xorwf	14,f	;volatile
  1009  003C                     l799:	
  1010                           
  1011                           ;main.c: 47: if(Tick_Is_Over(&Tick.led2, 500)) do { LATCbits.LATC1 = ~LATCbits.LATC1; } 
      +                          while(0);
  1012  003C  0020               	movlb	0	; select bank0
  1013  003D  3001               	movlw	1
  1014  003E  01C7               	clrf	Tick_Is_Over@ms+3
  1015  003F  01C6               	clrf	Tick_Is_Over@ms+2
  1016  0040  00C5               	movwf	Tick_Is_Over@ms+1
  1017  0041  30F4               	movlw	244
  1018  0042  00C4               	movwf	Tick_Is_Over@ms
  1019  0043  3029               	movlw	(low ((_Tick| 0+9)))& (0+255)
  1020  0044  206D  3180         	fcall	_Tick_Is_Over
  1021  0046  3A00               	xorlw	0
  1022  0047  1903               	skipnz
  1023  0048  284C               	goto	l803
  1024  0049  3002               	movlw	2
  1025  004A  0022               	movlb	2	; select bank2
  1026  004B  068E               	xorwf	14,f	;volatile
  1027  004C                     l803:	
  1028                           
  1029                           ;main.c: 48: if(Tick_Is_Over(&Tick.led3, 1000)) do { LATCbits.LATC2 = ~LATCbits.LATC2; }
      +                           while(0);
  1030  004C  0020               	movlb	0	; select bank0
  1031  004D  3003               	movlw	3
  1032  004E  01C7               	clrf	Tick_Is_Over@ms+3
  1033  004F  01C6               	clrf	Tick_Is_Over@ms+2
  1034  0050  00C5               	movwf	Tick_Is_Over@ms+1
  1035  0051  30E8               	movlw	232
  1036  0052  00C4               	movwf	Tick_Is_Over@ms
  1037  0053  3032               	movlw	(low ((_Tick| 0+18)))& (0+255)
  1038  0054  206D  3180         	fcall	_Tick_Is_Over
  1039  0056  3A00               	xorlw	0
  1040  0057  1903               	skipnz
  1041  0058  285C               	goto	l807
  1042  0059  3004               	movlw	4
  1043  005A  0022               	movlb	2	; select bank2
  1044  005B  068E               	xorwf	14,f	;volatile
  1045  005C                     l807:	
  1046                           
  1047                           ;main.c: 49: if(Tick_Is_Over(&Tick.led4, 5000)) do { LATCbits.LATC3 = ~LATCbits.LATC3; }
      +                           while(0);
  1048  005C  0020               	movlb	0	; select bank0
  1049  005D  3013               	movlw	19
  1050  005E  01C7               	clrf	Tick_Is_Over@ms+3
  1051  005F  01C6               	clrf	Tick_Is_Over@ms+2
  1052  0060  00C5               	movwf	Tick_Is_Over@ms+1
  1053  0061  3088               	movlw	136
  1054  0062  00C4               	movwf	Tick_Is_Over@ms
  1055  0063  303B               	movlw	(low ((_Tick| 0+27)))& (0+255)
  1056  0064  206D  3180         	fcall	_Tick_Is_Over
  1057  0066  3A00               	xorlw	0
  1058  0067  1903               	skipnz
  1059  0068  282D               	goto	l795
  1060  0069  3008               	movlw	8
  1061  006A  0022               	movlb	2	; select bank2
  1062  006B  068E               	xorwf	14,f	;volatile
  1063  006C  282D               	goto	l795
  1064  006D                     __end_of_main:	
  1065  006D                     __ptext1:	
  1066 ;; *************** function _Tick_Is_Over *****************
  1067 ;; Defined at:
  1068 ;;		line 12 in file "main.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;  tick            1    wreg     PTR struct .
  1071 ;;		 -> Tick(36), 
  1072 ;;  ms              4    0[BANK0 ] unsigned long 
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;  tick            1   17[BANK0 ] PTR struct .
  1075 ;;		 -> Tick(36), 
  1076 ;;  pre             4   13[BANK0 ] unsigned long 
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      unsigned char 
  1079 ;; Registers used:
  1080 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : 1F/0
  1083 ;;		On exit  : 1F/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1086 ;;      Params:         0       4       0       0       0       0       0       0
  1087 ;;      Locals:         0       6       0       0       0       0       0       0
  1088 ;;      Temps:          0       8       0       0       0       0       0       0
  1089 ;;      Totals:         0      18       0       0       0       0       0       0
  1090 ;;Total ram usage:       18 bytes
  1091 ;; Hardware stack levels used:    1
  1092 ;; Hardware stack levels required when called:    3
  1093 ;; This function calls:
  1094 ;;		_TMR1_ReadTimer
  1095 ;;		___lmul
  1096 ;; This function is called by:
  1097 ;;		_main
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           
  1102                           ;psect for function _Tick_Is_Over
  1103  006D                     _Tick_Is_Over:	
  1104                           
  1105                           ;incstack = 0
  1106                           ; Regs used in _Tick_Is_Over: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1107                           ;Tick_Is_Over@tick stored from wreg
  1108  006D  00D5               	movwf	Tick_Is_Over@tick
  1109                           
  1110                           ;main.c: 14: uint32_t pre=TMR1_ReadTimer();
  1111  006E  214F  3180         	fcall	_TMR1_ReadTimer
  1112  0070  0873               	movf	?_TMR1_ReadTimer+3,w
  1113  0071  00D4               	movwf	Tick_Is_Over@pre+3
  1114  0072  0872               	movf	?_TMR1_ReadTimer+2,w
  1115  0073  00D3               	movwf	Tick_Is_Over@pre+2
  1116  0074  0871               	movf	?_TMR1_ReadTimer+1,w
  1117  0075  00D2               	movwf	Tick_Is_Over@pre+1
  1118  0076  0870               	movf	?_TMR1_ReadTimer,w
  1119  0077  00D1               	movwf	Tick_Is_Over@pre
  1120                           
  1121                           ;main.c: 15: if(tick->timeout)
  1122  0078  0855               	movf	Tick_Is_Over@tick,w
  1123  0079  0086               	movwf	6
  1124  007A  0187               	clrf	7
  1125  007B  0801               	movf	1,w
  1126  007C  1903               	btfsc	3,2
  1127  007D  28B0               	goto	l765
  1128                           
  1129                           ;main.c: 16: {
  1130                           ;main.c: 17: tick->start=pre;
  1131  007E  0A55               	incf	Tick_Is_Over@tick,w
  1132  007F  0086               	movwf	6
  1133  0080  0851               	movf	Tick_Is_Over@pre,w
  1134  0081  3FC0               	movwi [0]fsr1
  1135  0082  0852               	movf	Tick_Is_Over@pre+1,w
  1136  0083  3FC1               	movwi [1]fsr1
  1137  0084  0853               	movf	Tick_Is_Over@pre+2,w
  1138  0085  3FC2               	movwi [2]fsr1
  1139  0086  0854               	movf	Tick_Is_Over@pre+3,w
  1140  0087  3FC3               	movwi [3]fsr1
  1141                           
  1142                           ;main.c: 18: tick->stop=tick->start+8000*ms;
  1143  0088  0A55               	incf	Tick_Is_Over@tick,w
  1144  0089  0086               	movwf	6
  1145  008A  21A2  3180         	fcall	PL2	;call to abstracted procedure
  1146  008C  0847               	movf	Tick_Is_Over@ms+3,w
  1147  008D  00F3               	movwf	___lmul@multiplier+3
  1148  008E  0846               	movf	Tick_Is_Over@ms+2,w
  1149  008F  00F2               	movwf	___lmul@multiplier+2
  1150  0090  0845               	movf	Tick_Is_Over@ms+1,w
  1151  0091  00F1               	movwf	___lmul@multiplier+1
  1152  0092  0844               	movf	Tick_Is_Over@ms,w
  1153  0093  00F0               	movwf	___lmul@multiplier
  1154  0094  301F               	movlw	31
  1155  0095  01F7               	clrf	___lmul@multiplicand+3
  1156  0096  01F6               	clrf	___lmul@multiplicand+2
  1157  0097  00F5               	movwf	___lmul@multiplicand+1
  1158  0098  3040               	movlw	64
  1159  0099  00F4               	movwf	___lmul@multiplicand
  1160  009A  216D  3180         	fcall	___lmul
  1161  009C  0870               	movf	?___lmul,w
  1162  009D  07C8               	addwf	??_Tick_Is_Over,f
  1163  009E  0871               	movf	?___lmul+1,w
  1164  009F  3DC9               	addwfc	??_Tick_Is_Over+1,f
  1165  00A0  0872               	movf	?___lmul+2,w
  1166  00A1  3DCA               	addwfc	??_Tick_Is_Over+2,f
  1167  00A2  0873               	movf	?___lmul+3,w
  1168  00A3  3DCB               	addwfc	??_Tick_Is_Over+3,f
  1169  00A4  0855               	movf	Tick_Is_Over@tick,w
  1170  00A5  3E05               	addlw	5
  1171  00A6  0086               	movwf	6
  1172  00A7  0187               	clrf	7
  1173  00A8  0848               	movf	??_Tick_Is_Over,w
  1174  00A9  3FC0               	movwi [0]fsr1
  1175  00AA  0849               	movf	??_Tick_Is_Over+1,w
  1176  00AB  3FC1               	movwi [1]fsr1
  1177  00AC  084A               	movf	??_Tick_Is_Over+2,w
  1178  00AD  3FC2               	movwi [2]fsr1
  1179  00AE  084B               	movf	??_Tick_Is_Over+3,w
  1180  00AF  3FC3               	movwi [3]fsr1
  1181  00B0                     l765:	
  1182                           
  1183                           ;main.c: 19: }
  1184                           ;main.c: 20: if(tick->stop>tick->start) tick->timeout=(tick->stop<pre);
  1185  00B0  21AB  3180         	fcall	PL4	;call to abstracted procedure
  1186  00B2  21A2  3180         	fcall	PL2	;call to abstracted procedure
  1187  00B4  0A55               	incf	Tick_Is_Over@tick,w
  1188  00B5  0086               	movwf	6
  1189  00B6  3F40               	moviw [0]fsr1
  1190  00B7  00CC               	movwf	??_Tick_Is_Over+4
  1191  00B8  3F41               	moviw [1]fsr1
  1192  00B9  00CD               	movwf	??_Tick_Is_Over+5
  1193  00BA  3F42               	moviw [2]fsr1
  1194  00BB  00CE               	movwf	??_Tick_Is_Over+6
  1195  00BC  3F43               	moviw [3]fsr1
  1196  00BD  00CF               	movwf	??_Tick_Is_Over+7
  1197  00BE  084B               	movf	??_Tick_Is_Over+3,w
  1198  00BF  024F               	subwf	??_Tick_Is_Over+7,w
  1199  00C0  1D03               	skipz
  1200  00C1  28CC               	goto	u235
  1201  00C2  084A               	movf	??_Tick_Is_Over+2,w
  1202  00C3  024E               	subwf	??_Tick_Is_Over+6,w
  1203  00C4  1D03               	skipz
  1204  00C5  28CC               	goto	u235
  1205  00C6  0849               	movf	??_Tick_Is_Over+1,w
  1206  00C7  024D               	subwf	??_Tick_Is_Over+5,w
  1207  00C8  1D03               	skipz
  1208  00C9  28CC               	goto	u235
  1209  00CA  0848               	movf	??_Tick_Is_Over,w
  1210  00CB  024C               	subwf	??_Tick_Is_Over+4,w
  1211  00CC                     u235:	
  1212  00CC  1803               	skipnc
  1213  00CD  28F1               	goto	l769
  1214  00CE  0855               	movf	Tick_Is_Over@tick,w
  1215  00CF  0086               	movwf	6
  1216  00D0  0187               	clrf	7
  1217  00D1  0855               	movf	Tick_Is_Over@tick,w
  1218  00D2  3E05               	addlw	5
  1219  00D3  0084               	movwf	4
  1220  00D4  0185               	clrf	5
  1221  00D5  3F00               	moviw [0]fsr0
  1222  00D6  00C8               	movwf	??_Tick_Is_Over
  1223  00D7  3F01               	moviw [1]fsr0
  1224  00D8  00C9               	movwf	??_Tick_Is_Over+1
  1225  00D9  3F02               	moviw [2]fsr0
  1226  00DA  00CA               	movwf	??_Tick_Is_Over+2
  1227  00DB  3F03               	moviw [3]fsr0
  1228  00DC  00CB               	movwf	??_Tick_Is_Over+3
  1229  00DD  0854               	movf	Tick_Is_Over@pre+3,w
  1230  00DE  024B               	subwf	??_Tick_Is_Over+3,w
  1231  00DF  1D03               	skipz
  1232  00E0  28EB               	goto	u245
  1233  00E1  0853               	movf	Tick_Is_Over@pre+2,w
  1234  00E2  024A               	subwf	??_Tick_Is_Over+2,w
  1235  00E3  1D03               	skipz
  1236  00E4  28EB               	goto	u245
  1237  00E5  0852               	movf	Tick_Is_Over@pre+1,w
  1238  00E6  0249               	subwf	??_Tick_Is_Over+1,w
  1239  00E7  1D03               	skipz
  1240  00E8  28EB               	goto	u245
  1241  00E9  0851               	movf	Tick_Is_Over@pre,w
  1242  00EA  0248               	subwf	??_Tick_Is_Over,w
  1243  00EB                     u245:	
  1244  00EB  1803               	btfsc	3,0
  1245  00EC  28EF               	goto	u240
  1246  00ED  3001               	movlw	1
  1247  00EE  2920               	goto	L1
  1248  00EF                     u240:	
  1249  00EF  3000               	movlw	0
  1250  00F0  2920               	goto	L1
  1251  00F1                     l769:	
  1252                           
  1253                           ;main.c: 21: else tick->timeout=((tick->stop<pre)&&(pre<tick->start));
  1254  00F1  01D0               	clrf	_Tick_Is_Over$275
  1255  00F2  21AB  3180         	fcall	PL4	;call to abstracted procedure
  1256  00F4  21A2  3180         	fcall	PL2	;call to abstracted procedure
  1257  00F6  0854               	movf	Tick_Is_Over@pre+3,w
  1258  00F7  024B               	subwf	??_Tick_Is_Over+3,w
  1259  00F8  1D03               	skipz
  1260  00F9  2904               	goto	u265
  1261  00FA  0853               	movf	Tick_Is_Over@pre+2,w
  1262  00FB  024A               	subwf	??_Tick_Is_Over+2,w
  1263  00FC  1D03               	skipz
  1264  00FD  2904               	goto	u265
  1265  00FE  0852               	movf	Tick_Is_Over@pre+1,w
  1266  00FF  0249               	subwf	??_Tick_Is_Over+1,w
  1267  0100  1D03               	skipz
  1268  0101  2904               	goto	u265
  1269  0102  0851               	movf	Tick_Is_Over@pre,w
  1270  0103  0248               	subwf	??_Tick_Is_Over,w
  1271  0104                     u265:	
  1272  0104  1803               	skipnc
  1273  0105  291C               	goto	l777
  1274  0106  0A55               	incf	Tick_Is_Over@tick,w
  1275  0107  0086               	movwf	6
  1276  0108  0187               	clrf	7
  1277  0109  21A2  3180         	fcall	PL2	;call to abstracted procedure
  1278  010B  0254               	subwf	Tick_Is_Over@pre+3,w
  1279  010C  1D03               	skipz
  1280  010D  2918               	goto	u275
  1281  010E  084A               	movf	??_Tick_Is_Over+2,w
  1282  010F  0253               	subwf	Tick_Is_Over@pre+2,w
  1283  0110  1D03               	skipz
  1284  0111  2918               	goto	u275
  1285  0112  0849               	movf	??_Tick_Is_Over+1,w
  1286  0113  0252               	subwf	Tick_Is_Over@pre+1,w
  1287  0114  1D03               	skipz
  1288  0115  2918               	goto	u275
  1289  0116  0848               	movf	??_Tick_Is_Over,w
  1290  0117  0251               	subwf	Tick_Is_Over@pre,w
  1291  0118                     u275:	
  1292  0118  1803               	skipnc
  1293  0119  291C               	goto	l777
  1294  011A  01D0               	clrf	_Tick_Is_Over$275
  1295  011B  0AD0               	incf	_Tick_Is_Over$275,f
  1296  011C                     l777:	
  1297  011C  0855               	movf	Tick_Is_Over@tick,w
  1298  011D  0086               	movwf	6
  1299  011E  0187               	clrf	7
  1300  011F  0850               	movf	_Tick_Is_Over$275,w
  1301  0120                     L1:	
  1302  0120  0081               	movwf	1
  1303                           
  1304                           ;main.c: 22: return tick->timeout;
  1305  0121  0855               	movf	Tick_Is_Over@tick,w
  1306  0122  0086               	movwf	6
  1307  0123  0187               	clrf	7
  1308  0124  0801               	movf	1,w
  1309  0125  0008               	return
  1310  0126                     __end_of_Tick_Is_Over:	
  1311  0126                     __ptext4:	
  1312 ;; *************** function _SYSTEM_Initialize *****************
  1313 ;; Defined at:
  1314 ;;		line 70 in file "mcc_generated_files/mcc.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;		None
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;		None
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      void 
  1321 ;; Registers used:
  1322 ;;		wreg, status,2, status,0, pclath, cstack
  1323 ;; Tracked objects:
  1324 ;;		On entry : B1F/0
  1325 ;;		On exit  : B1F/0
  1326 ;;		Unchanged: B00/0
  1327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1328 ;;      Params:         0       0       0       0       0       0       0       0
  1329 ;;      Locals:         0       0       0       0       0       0       0       0
  1330 ;;      Temps:          0       0       0       0       0       0       0       0
  1331 ;;      Totals:         0       0       0       0       0       0       0       0
  1332 ;;Total ram usage:        0 bytes
  1333 ;; Hardware stack levels used:    1
  1334 ;; Hardware stack levels required when called:    3
  1335 ;; This function calls:
  1336 ;;		_OSCILLATOR_Initialize
  1337 ;;		_PIN_MANAGER_Initialize
  1338 ;;		_TMR1_Initialize
  1339 ;;		_WDT_Initialize
  1340 ;; This function is called by:
  1341 ;;		_main
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           
  1346                           ;psect for function _SYSTEM_Initialize
  1347  0126                     _SYSTEM_Initialize:	
  1348                           
  1349                           ;mcc.c: 73: PIN_MANAGER_Initialize();
  1350                           
  1351                           ;incstack = 0
  1352                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1353  0126  2134  3180         	fcall	_PIN_MANAGER_Initialize
  1354                           
  1355                           ;mcc.c: 74: OSCILLATOR_Initialize();
  1356  0128  212D  3180         	fcall	_OSCILLATOR_Initialize
  1357                           
  1358                           ;mcc.c: 75: WDT_Initialize();
  1359  012A  219F  3180         	fcall	_WDT_Initialize
  1360                           
  1361                           ;mcc.c: 76: TMR1_Initialize();
  1362  012C  2992               	ljmp	l605
  1363  012D                     __end_of_SYSTEM_Initialize:	
  1364  012D                     __ptext8:	
  1365 ;; *************** function _OSCILLATOR_Initialize *****************
  1366 ;; Defined at:
  1367 ;;		line 79 in file "mcc_generated_files/mcc.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;		None
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;		None
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  1    wreg      void 
  1374 ;; Registers used:
  1375 ;;		wreg, status,2
  1376 ;; Tracked objects:
  1377 ;;		On entry : B1F/2
  1378 ;;		On exit  : B1F/1
  1379 ;;		Unchanged: B00/0
  1380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1381 ;;      Params:         0       0       0       0       0       0       0       0
  1382 ;;      Locals:         0       0       0       0       0       0       0       0
  1383 ;;      Temps:          0       0       0       0       0       0       0       0
  1384 ;;      Totals:         0       0       0       0       0       0       0       0
  1385 ;;Total ram usage:        0 bytes
  1386 ;; Hardware stack levels used:    1
  1387 ;; Hardware stack levels required when called:    2
  1388 ;; This function calls:
  1389 ;;		Nothing
  1390 ;; This function is called by:
  1391 ;;		_SYSTEM_Initialize
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           
  1396                           ;psect for function _OSCILLATOR_Initialize
  1397  012D                     _OSCILLATOR_Initialize:	
  1398                           
  1399                           ;mcc.c: 82: OSCCON = 0x70;
  1400                           
  1401                           ;incstack = 0
  1402                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1403  012D  3070               	movlw	112
  1404  012E  0021               	movlb	1	; select bank1
  1405  012F  0099               	movwf	25	;volatile
  1406                           
  1407                           ;mcc.c: 84: OSCTUNE = 0x00;
  1408  0130  0198               	clrf	24	;volatile
  1409  0131                     l63:	
  1410                           ;mcc.c: 87: {
  1411                           
  1412  0131  1B1A               	btfsc	26,6	;volatile
  1413  0132  0008               	return
  1414  0133  2931               	goto	l63
  1415  0134                     __end_of_OSCILLATOR_Initialize:	
  1416  0134                     __ptext7:	
  1417 ;; *************** function _PIN_MANAGER_Initialize *****************
  1418 ;; Defined at:
  1419 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;		None
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;		None
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      void 
  1426 ;; Registers used:
  1427 ;;		wreg, status,2
  1428 ;; Tracked objects:
  1429 ;;		On entry : B1F/0
  1430 ;;		On exit  : B1F/2
  1431 ;;		Unchanged: B00/0
  1432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1433 ;;      Params:         0       0       0       0       0       0       0       0
  1434 ;;      Locals:         0       0       0       0       0       0       0       0
  1435 ;;      Temps:          0       0       0       0       0       0       0       0
  1436 ;;      Totals:         0       0       0       0       0       0       0       0
  1437 ;;Total ram usage:        0 bytes
  1438 ;; Hardware stack levels used:    1
  1439 ;; Hardware stack levels required when called:    2
  1440 ;; This function calls:
  1441 ;;		Nothing
  1442 ;; This function is called by:
  1443 ;;		_SYSTEM_Initialize
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           
  1448                           ;psect for function _PIN_MANAGER_Initialize
  1449  0134                     _PIN_MANAGER_Initialize:	
  1450                           
  1451                           ;pin_manager.c: 57: LATE = 0x00;
  1452                           
  1453                           ;incstack = 0
  1454                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1455  0134  0022               	movlb	2	; select bank2
  1456  0135  0190               	clrf	16	;volatile
  1457                           
  1458                           ;pin_manager.c: 58: LATA = 0x00;
  1459  0136  018C               	clrf	12	;volatile
  1460                           
  1461                           ;pin_manager.c: 59: LATB = 0x00;
  1462  0137  018D               	clrf	13	;volatile
  1463                           
  1464                           ;pin_manager.c: 60: LATC = 0x00;
  1465  0138  018E               	clrf	14	;volatile
  1466                           
  1467                           ;pin_manager.c: 65: TRISE = 0x08;
  1468  0139  3008               	movlw	8
  1469  013A  0021               	movlb	1	; select bank1
  1470  013B  0090               	movwf	16	;volatile
  1471                           
  1472                           ;pin_manager.c: 66: TRISA = 0xFF;
  1473  013C  30FF               	movlw	255
  1474  013D  008C               	movwf	12	;volatile
  1475                           
  1476                           ;pin_manager.c: 67: TRISB = 0xFF;
  1477  013E  008D               	movwf	13	;volatile
  1478                           
  1479                           ;pin_manager.c: 68: TRISC = 0xF0;
  1480  013F  30F0               	movlw	240
  1481  0140  008E               	movwf	14	;volatile
  1482                           
  1483                           ;pin_manager.c: 73: ANSELB = 0x3F;
  1484  0141  303F               	movlw	63
  1485  0142  0023               	movlb	3	; select bank3
  1486  0143  008D               	movwf	13	;volatile
  1487                           
  1488                           ;pin_manager.c: 74: ANSELA = 0x3F;
  1489  0144  008C               	movwf	12	;volatile
  1490                           
  1491                           ;pin_manager.c: 79: WPUE = 0x08;
  1492  0145  3008               	movlw	8
  1493  0146  0024               	movlb	4	; select bank4
  1494  0147  0090               	movwf	16	;volatile
  1495                           
  1496                           ;pin_manager.c: 80: WPUB = 0xFF;
  1497  0148  30FF               	movlw	255
  1498  0149  008D               	movwf	13	;volatile
  1499                           
  1500                           ;pin_manager.c: 81: OPTION_REGbits.nWPUEN = 0;
  1501  014A  0021               	movlb	1	; select bank1
  1502  014B  1395               	bcf	21,7	;volatile
  1503                           
  1504                           ;pin_manager.c: 87: APFCON = 0x00;
  1505  014C  0022               	movlb	2	; select bank2
  1506  014D  019D               	clrf	29	;volatile
  1507  014E  0008               	return
  1508  014F                     __end_of_PIN_MANAGER_Initialize:	
  1509  014F                     __ptext3:	
  1510 ;; *************** function _TMR1_ReadTimer *****************
  1511 ;; Defined at:
  1512 ;;		line 24 in file "mcc_generated_files/tmr1.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;		None
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  readVal         4    4[COMMON] unsigned long 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  4    0[COMMON] unsigned long 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0
  1521 ;; Tracked objects:
  1522 ;;		On entry : 1F/0
  1523 ;;		On exit  : 1F/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1526 ;;      Params:         4       0       0       0       0       0       0       0
  1527 ;;      Locals:         4       0       0       0       0       0       0       0
  1528 ;;      Temps:          0       0       0       0       0       0       0       0
  1529 ;;      Totals:         8       0       0       0       0       0       0       0
  1530 ;;Total ram usage:        8 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    2
  1533 ;; This function calls:
  1534 ;;		Nothing
  1535 ;; This function is called by:
  1536 ;;		_Tick_Is_Over
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           
  1541                           ;psect for function _TMR1_ReadTimer
  1542  014F                     _TMR1_ReadTimer:	
  1543                           
  1544                           ;tmr1.c: 26: uint32_t readVal=count;
  1545                           
  1546                           ;incstack = 0
  1547                           ; Regs used in _TMR1_ReadTimer: [wreg+status,2+status,0]
  1548  014F  087C               	movf	_count,w	;volatile
  1549  0150  00F4               	movwf	TMR1_ReadTimer@readVal
  1550  0151  087D               	movf	_count+1,w	;volatile
  1551  0152  00F5               	movwf	TMR1_ReadTimer@readVal+1
  1552  0153  01F6               	clrf	TMR1_ReadTimer@readVal+2
  1553  0154  01F7               	clrf	TMR1_ReadTimer@readVal+3
  1554                           
  1555                           ;tmr1.c: 27: readVal<<=8;
  1556  0155  21B0  3180         	fcall	PL6	;call to abstracted procedure
  1557                           
  1558                           ;tmr1.c: 28: readVal|=TMR1H;
  1559  0157  0817               	movf	23,w	;volatile
  1560  0158  04F4               	iorwf	TMR1_ReadTimer@readVal,f
  1561                           
  1562                           ;tmr1.c: 29: readVal<<=8;
  1563  0159  21B0  3180         	fcall	PL6	;call to abstracted procedure
  1564                           
  1565                           ;tmr1.c: 30: readVal|=TMR1L;
  1566  015B  0816               	movf	22,w	;volatile
  1567  015C  04F4               	iorwf	TMR1_ReadTimer@readVal,f
  1568                           
  1569                           ;tmr1.c: 31: readVal<<=3;
  1570  015D  3003               	movlw	3
  1571  015E                     u195:	
  1572  015E  35F4               	lslf	TMR1_ReadTimer@readVal,f
  1573  015F  0DF5               	rlf	TMR1_ReadTimer@readVal+1,f
  1574  0160  0DF6               	rlf	TMR1_ReadTimer@readVal+2,f
  1575  0161  0DF7               	rlf	TMR1_ReadTimer@readVal+3,f
  1576  0162  0B89               	decfsz	9,f
  1577  0163  295E               	goto	u195
  1578                           
  1579                           ;tmr1.c: 32: return readVal;
  1580  0164  0877               	movf	TMR1_ReadTimer@readVal+3,w
  1581  0165  00F3               	movwf	?_TMR1_ReadTimer+3
  1582  0166  0876               	movf	TMR1_ReadTimer@readVal+2,w
  1583  0167  00F2               	movwf	?_TMR1_ReadTimer+2
  1584  0168  0875               	movf	TMR1_ReadTimer@readVal+1,w
  1585  0169  00F1               	movwf	?_TMR1_ReadTimer+1
  1586  016A  0874               	movf	TMR1_ReadTimer@readVal,w
  1587  016B  00F0               	movwf	?_TMR1_ReadTimer
  1588  016C  0008               	return
  1589  016D                     __end_of_TMR1_ReadTimer:	
  1590  016D                     __ptext2:	
  1591 ;; *************** function ___lmul *****************
  1592 ;; Defined at:
  1593 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul32.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;  multiplier      4    0[COMMON] unsigned long 
  1596 ;;  multiplicand    4    4[COMMON] unsigned long 
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;  product         4    8[COMMON] unsigned long 
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  4    0[COMMON] unsigned long 
  1601 ;; Registers used:
  1602 ;;		wreg, status,2, status,0
  1603 ;; Tracked objects:
  1604 ;;		On entry : 1F/0
  1605 ;;		On exit  : 1F/0
  1606 ;;		Unchanged: 1F/0
  1607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1608 ;;      Params:         8       0       0       0       0       0       0       0
  1609 ;;      Locals:         4       0       0       0       0       0       0       0
  1610 ;;      Temps:          0       0       0       0       0       0       0       0
  1611 ;;      Totals:        12       0       0       0       0       0       0       0
  1612 ;;Total ram usage:       12 bytes
  1613 ;; Hardware stack levels used:    1
  1614 ;; Hardware stack levels required when called:    2
  1615 ;; This function calls:
  1616 ;;		Nothing
  1617 ;; This function is called by:
  1618 ;;		_Tick_Is_Over
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           
  1623                           ;psect for function ___lmul
  1624  016D                     ___lmul:	
  1625                           
  1626                           ;incstack = 0
  1627                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1628  016D  01F8               	clrf	___lmul@product
  1629  016E  01F9               	clrf	___lmul@product+1
  1630  016F  01FA               	clrf	___lmul@product+2
  1631  0170  01FB               	clrf	___lmul@product+3
  1632  0171                     l236:	
  1633  0171  1C70               	btfss	___lmul@multiplier,0
  1634  0172  297B               	goto	l749
  1635  0173  0874               	movf	___lmul@multiplicand,w
  1636  0174  07F8               	addwf	___lmul@product,f
  1637  0175  0875               	movf	___lmul@multiplicand+1,w
  1638  0176  3DF9               	addwfc	___lmul@product+1,f
  1639  0177  0876               	movf	___lmul@multiplicand+2,w
  1640  0178  3DFA               	addwfc	___lmul@product+2,f
  1641  0179  0877               	movf	___lmul@multiplicand+3,w
  1642  017A  3DFB               	addwfc	___lmul@product+3,f
  1643  017B                     l749:	
  1644  017B  35F4               	lslf	___lmul@multiplicand,f
  1645  017C  0DF5               	rlf	___lmul@multiplicand+1,f
  1646  017D  0DF6               	rlf	___lmul@multiplicand+2,f
  1647  017E  0DF7               	rlf	___lmul@multiplicand+3,f
  1648  017F  36F3               	lsrf	___lmul@multiplier+3,f
  1649  0180  0CF2               	rrf	___lmul@multiplier+2,f
  1650  0181  0CF1               	rrf	___lmul@multiplier+1,f
  1651  0182  0CF0               	rrf	___lmul@multiplier,f
  1652  0183  0873               	movf	___lmul@multiplier+3,w
  1653  0184  0472               	iorwf	___lmul@multiplier+2,w
  1654  0185  0471               	iorwf	___lmul@multiplier+1,w
  1655  0186  0470               	iorwf	___lmul@multiplier,w
  1656  0187  1D03               	skipz
  1657  0188  2971               	goto	l236
  1658  0189  087B               	movf	___lmul@product+3,w
  1659  018A  00F3               	movwf	?___lmul+3
  1660  018B  087A               	movf	___lmul@product+2,w
  1661  018C  00F2               	movwf	?___lmul+2
  1662  018D  0879               	movf	___lmul@product+1,w
  1663  018E  00F1               	movwf	?___lmul+1
  1664  018F  0878               	movf	___lmul@product,w
  1665  0190  00F0               	movwf	?___lmul
  1666  0191  0008               	return
  1667  0192                     __end_of___lmul:	
  1668  0192                     __ptext6:	
  1669 ;; *************** function _TMR1_Initialize *****************
  1670 ;; Defined at:
  1671 ;;		line 6 in file "mcc_generated_files/tmr1.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;		None
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;		None
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      void 
  1678 ;; Registers used:
  1679 ;;		wreg, status,2
  1680 ;; Tracked objects:
  1681 ;;		On entry : B1F/1
  1682 ;;		On exit  : B1F/0
  1683 ;;		Unchanged: B00/0
  1684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1685 ;;      Params:         0       0       0       0       0       0       0       0
  1686 ;;      Locals:         0       0       0       0       0       0       0       0
  1687 ;;      Temps:          0       0       0       0       0       0       0       0
  1688 ;;      Totals:         0       0       0       0       0       0       0       0
  1689 ;;Total ram usage:        0 bytes
  1690 ;; Hardware stack levels used:    1
  1691 ;; Hardware stack levels required when called:    2
  1692 ;; This function calls:
  1693 ;;		Nothing
  1694 ;; This function is called by:
  1695 ;;		_SYSTEM_Initialize
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           
  1700                           ;psect for function _TMR1_Initialize
  1701  0192                     _TMR1_Initialize:	
  1702  0192                     l605:	
  1703                           ;incstack = 0
  1704                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  1705                           
  1706                           
  1707                           ;tmr1.c: 9: T1CON=0x30;
  1708  0192  3030               	movlw	48
  1709  0193  0020               	movlb	0	; select bank0
  1710  0194  0098               	movwf	24	;volatile
  1711                           
  1712                           ;tmr1.c: 11: T1GCON=0x41;
  1713  0195  3041               	movlw	65
  1714  0196  0099               	movwf	25	;volatile
  1715                           
  1716                           ;tmr1.c: 13: TMR1H=0x00;
  1717  0197  0197               	clrf	23	;volatile
  1718                           
  1719                           ;tmr1.c: 15: TMR1L=0x00;
  1720  0198  0196               	clrf	22	;volatile
  1721                           
  1722                           ;tmr1.c: 17: PIR1bits.TMR1IF=0;
  1723  0199  1011               	bcf	17,0	;volatile
  1724                           
  1725                           ;tmr1.c: 19: PIE1bits.TMR1IE=1;
  1726  019A  0021               	movlb	1	; select bank1
  1727  019B  1411               	bsf	17,0	;volatile
  1728                           
  1729                           ;tmr1.c: 21: T1CONbits.TMR1ON=1;
  1730  019C  0020               	movlb	0	; select bank0
  1731  019D  1418               	bsf	24,0	;volatile
  1732  019E  0008               	return
  1733  019F                     __end_of_TMR1_Initialize:	
  1734  019F                     __ptext5:	
  1735 ;; *************** function _WDT_Initialize *****************
  1736 ;; Defined at:
  1737 ;;		line 91 in file "mcc_generated_files/mcc.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;		None
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;		None
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		wreg
  1746 ;; Tracked objects:
  1747 ;;		On entry : B1F/1
  1748 ;;		On exit  : B1F/1
  1749 ;;		Unchanged: B00/0
  1750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1751 ;;      Params:         0       0       0       0       0       0       0       0
  1752 ;;      Locals:         0       0       0       0       0       0       0       0
  1753 ;;      Temps:          0       0       0       0       0       0       0       0
  1754 ;;      Totals:         0       0       0       0       0       0       0       0
  1755 ;;Total ram usage:        0 bytes
  1756 ;; Hardware stack levels used:    1
  1757 ;; Hardware stack levels required when called:    2
  1758 ;; This function calls:
  1759 ;;		Nothing
  1760 ;; This function is called by:
  1761 ;;		_SYSTEM_Initialize
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           
  1766                           ;psect for function _WDT_Initialize
  1767  019F                     _WDT_Initialize:	
  1768                           
  1769                           ;mcc.c: 94: WDTCON = 0x16;
  1770                           
  1771                           ;incstack = 0
  1772                           ; Regs used in _WDT_Initialize: [wreg]
  1773  019F  3016               	movlw	22
  1774  01A0  0097               	movwf	23	;volatile
  1775  01A1  0008               	return
  1776  01A2                     __end_of_WDT_Initialize:	
  1777  01A2                     PL2:	
  1778  01A2  3F40               	moviw [0]fsr1
  1779  01A3  00C8               	movwf	??_Tick_Is_Over
  1780  01A4  3F41               	moviw [1]fsr1
  1781  01A5  00C9               	movwf	??_Tick_Is_Over+1
  1782  01A6  3F42               	moviw [2]fsr1
  1783  01A7  00CA               	movwf	??_Tick_Is_Over+2
  1784  01A8  3F43               	moviw [3]fsr1
  1785  01A9  00CB               	movwf	??_Tick_Is_Over+3
  1786  01AA  0008               	return
  1787  01AB                     __end_ofPL2:	
  1788  01AB                     PL4:	
  1789  01AB  0855               	movf	Tick_Is_Over@tick,w
  1790  01AC  3E05               	addlw	5
  1791  01AD  0086               	movwf	6
  1792  01AE  0187               	clrf	7
  1793  01AF  0008               	return
  1794  01B0                     __end_ofPL4:	
  1795  01B0                     PL6:	
  1796  01B0  0876               	movf	TMR1_ReadTimer@readVal+2,w
  1797  01B1  00F7               	movwf	TMR1_ReadTimer@readVal+3
  1798  01B2  0875               	movf	TMR1_ReadTimer@readVal+1,w
  1799  01B3  00F6               	movwf	TMR1_ReadTimer@readVal+2
  1800  01B4  0874               	movf	TMR1_ReadTimer@readVal,w
  1801  01B5  00F5               	movwf	TMR1_ReadTimer@readVal+1
  1802  01B6  01F4               	clrf	TMR1_ReadTimer@readVal
  1803  01B7  0008               	return
  1804  01B8                     __end_ofPL6:	
  1805                           
  1806                           	psect	bssCOMMON
  1807  007C                     __pbssCOMMON:	
  1808  007C                     _count:	
  1809  007C                     	ds	2
  1810                           
  1811                           	psect	bssBANK0
  1812  0020                     __pbssBANK0:	
  1813  0020                     _Tick:	
  1814  0020                     	ds	36
  1815                           
  1816                           	psect	clrtext
  1817  01C8                     clear_ram0:	
  1818                           ;	Called with FSR0 containing the base address, and
  1819                           ;	WREG with the size to clear
  1820                           
  1821  01C8  0064               	clrwdt	;clear the watchdog before getting into this loop
  1822  01C9                     clrloop0:	
  1823  01C9  0180               	clrf	0	;clear RAM location pointed to by FSR
  1824  01CA  3101               	addfsr 0,1
  1825  01CB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1826  01CC  29C9               	goto	clrloop0	;have we reached the end yet?
  1827  01CD  3400               	retlw	0	;all done for this memory range, return
  1828                           
  1829                           	psect	cstackCOMMON
  1830  0070                     __pcstackCOMMON:	
  1831  0070                     ?_PIN_MANAGER_Initialize:	
  1832  0070                     ??_PIN_MANAGER_Initialize:	
  1833                           ; 1 bytes @ 0x0
  1834                           
  1835  0070                     ?_OSCILLATOR_Initialize:	
  1836                           ; 1 bytes @ 0x0
  1837                           
  1838  0070                     ??_OSCILLATOR_Initialize:	
  1839                           ; 1 bytes @ 0x0
  1840                           
  1841  0070                     ?_WDT_Initialize:	
  1842                           ; 1 bytes @ 0x0
  1843                           
  1844  0070                     ??_WDT_Initialize:	
  1845                           ; 1 bytes @ 0x0
  1846                           
  1847  0070                     ?_TMR1_Initialize:	
  1848                           ; 1 bytes @ 0x0
  1849                           
  1850  0070                     ??_TMR1_Initialize:	
  1851                           ; 1 bytes @ 0x0
  1852                           
  1853  0070                     ?_TMR1_ISR:	
  1854                           ; 1 bytes @ 0x0
  1855                           
  1856  0070                     ??_TMR1_ISR:	
  1857                           ; 1 bytes @ 0x0
  1858                           
  1859  0070                     ?_INTERRUPT_InterruptManager:	
  1860                           ; 1 bytes @ 0x0
  1861                           
  1862  0070                     ??_INTERRUPT_InterruptManager:	
  1863                           ; 1 bytes @ 0x0
  1864                           
  1865  0070                     ?_SYSTEM_Initialize:	
  1866                           ; 1 bytes @ 0x0
  1867                           
  1868  0070                     ??_SYSTEM_Initialize:	
  1869                           ; 1 bytes @ 0x0
  1870                           
  1871  0070                     ?_main:	
  1872                           ; 1 bytes @ 0x0
  1873                           
  1874  0070                     ?_TMR1_ReadTimer:	
  1875                           ; 1 bytes @ 0x0
  1876                           
  1877  0070                     ?___lmul:	
  1878                           ; 4 bytes @ 0x0
  1879                           
  1880  0070                     ___lmul@multiplier:	
  1881                           ; 4 bytes @ 0x0
  1882                           
  1883                           
  1884                           ; 4 bytes @ 0x0
  1885  0070                     	ds	4
  1886  0074                     ??_TMR1_ReadTimer:	
  1887  0074                     TMR1_ReadTimer@readVal:	
  1888                           ; 1 bytes @ 0x4
  1889                           
  1890  0074                     ___lmul@multiplicand:	
  1891                           ; 4 bytes @ 0x4
  1892                           
  1893                           
  1894                           ; 4 bytes @ 0x4
  1895  0074                     	ds	4
  1896  0078                     ??___lmul:	
  1897  0078                     ___lmul@product:	
  1898                           ; 1 bytes @ 0x8
  1899                           
  1900                           
  1901                           ; 4 bytes @ 0x8
  1902  0078                     	ds	4
  1903  007C                     ??_main:	
  1904                           
  1905                           	psect	cstackBANK0
  1906  0044                     __pcstackBANK0:	
  1907                           ; 1 bytes @ 0xC
  1908                           
  1909  0044                     ?_Tick_Is_Over:	
  1910  0044                     Tick_Is_Over@ms:	
  1911                           ; 1 bytes @ 0x0
  1912                           
  1913                           
  1914                           ; 4 bytes @ 0x0
  1915  0044                     	ds	4
  1916  0048                     ??_Tick_Is_Over:	
  1917                           
  1918                           ; 1 bytes @ 0x4
  1919  0048                     	ds	8
  1920  0050                     _Tick_Is_Over$275:	
  1921                           
  1922                           ; 1 bytes @ 0xC
  1923  0050                     	ds	1
  1924  0051                     Tick_Is_Over@pre:	
  1925                           
  1926                           ; 4 bytes @ 0xD
  1927  0051                     	ds	4
  1928  0055                     Tick_Is_Over@tick:	
  1929                           
  1930                           ; 1 bytes @ 0x11
  1931  0055                     	ds	1
  1932                           
  1933                           	psect	intentry
  1934  0004                     __pintentry:	
  1935 ;; *************** function _INTERRUPT_InterruptManager *****************
  1936 ;; Defined at:
  1937 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;		None
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;		None
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  1    wreg      void 
  1944 ;; Registers used:
  1945 ;;		wreg, status,2, status,0, pclath, cstack
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1951 ;;      Params:         0       0       0       0       0       0       0       0
  1952 ;;      Locals:         0       0       0       0       0       0       0       0
  1953 ;;      Temps:          0       0       0       0       0       0       0       0
  1954 ;;      Totals:         0       0       0       0       0       0       0       0
  1955 ;;Total ram usage:        0 bytes
  1956 ;; Hardware stack levels used:    1
  1957 ;; Hardware stack levels required when called:    1
  1958 ;; This function calls:
  1959 ;;		_TMR1_ISR
  1960 ;; This function is called by:
  1961 ;;		Interrupt level 1
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965  0004                     _INTERRUPT_InterruptManager:	
  1966                           
  1967                           ;incstack = 0
  1968  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1969                           
  1970                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  1971  0005  3180               	pagesel	$
  1972                           
  1973                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bits.TM
      +                          R1IF == 1)
  1974  0006  1F0B               	btfss	11,6	;volatile
  1975  0007  2810               	goto	i1l41
  1976  0008  0021               	movlb	1	; select bank1
  1977  0009  1C11               	btfss	17,0	;volatile
  1978  000A  2810               	goto	i1l41
  1979  000B  0020               	movlb	0	; select bank0
  1980  000C  1C11               	btfss	17,0	;volatile
  1981  000D  2810               	goto	i1l41
  1982                           
  1983                           ;interrupt_manager.c: 55: {
  1984                           ;interrupt_manager.c: 56: TMR1_ISR();
  1985  000E  3181  21B8         	fcall	_TMR1_ISR
  1986  0010                     i1l41:	
  1987                           ;interrupt_manager.c: 57: }
  1988                           
  1989  0010  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1990  0011  0009               	retfie
  1991  0012                     __end_of_INTERRUPT_InterruptManager:	
  1992                           
  1993                           	psect	text10
  1994  01B8                     __ptext10:	
  1995 ;; *************** function _TMR1_ISR *****************
  1996 ;; Defined at:
  1997 ;;		line 35 in file "mcc_generated_files/tmr1.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;		None
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;		None
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      void 
  2004 ;; Registers used:
  2005 ;;		wreg, status,2, status,0
  2006 ;; Tracked objects:
  2007 ;;		On entry : 1F/0
  2008 ;;		On exit  : 1F/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2011 ;;      Params:         0       0       0       0       0       0       0       0
  2012 ;;      Locals:         0       0       0       0       0       0       0       0
  2013 ;;      Temps:          0       0       0       0       0       0       0       0
  2014 ;;      Totals:         0       0       0       0       0       0       0       0
  2015 ;;Total ram usage:        0 bytes
  2016 ;; Hardware stack levels used:    1
  2017 ;; This function calls:
  2018 ;;		Nothing
  2019 ;; This function is called by:
  2020 ;;		_INTERRUPT_InterruptManager
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           
  2025                           ;psect for function _TMR1_ISR
  2026  01B8                     _TMR1_ISR:	
  2027                           
  2028                           ;tmr1.c: 37: PIR1bits.TMR1IF=0;
  2029                           
  2030                           ;incstack = 0
  2031                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0]
  2032  01B8  1011               	bcf	17,0	;volatile
  2033                           
  2034                           ;tmr1.c: 38: TMR1H=0;
  2035  01B9  0197               	clrf	23	;volatile
  2036                           
  2037                           ;tmr1.c: 39: TMR1L=0;
  2038  01BA  0196               	clrf	22	;volatile
  2039                           
  2040                           ;tmr1.c: 40: count++;
  2041  01BB  0AFC               	incf	_count,f	;volatile
  2042  01BC  1903               	skipnz
  2043  01BD  0AFD               	incf	_count+1,f	;volatile
  2044                           
  2045                           ;tmr1.c: 41: if(count>=8192) count=0;
  2046  01BE  3020               	movlw	32
  2047  01BF  027D               	subwf	_count+1,w	;volatile
  2048  01C0  3000               	movlw	0
  2049  01C1  1903               	skipnz
  2050  01C2  027C               	subwf	_count,w	;volatile
  2051  01C3  1C03               	skipc
  2052  01C4  0008               	return
  2053  01C5  01FC               	clrf	_count	;volatile
  2054  01C6  01FD               	clrf	_count+1	;volatile
  2055  01C7  0008               	return
  2056  01C8                     __end_of_TMR1_ISR:	
  2057  007E                     btemp	set	126	;btemp
  2058  007E                     int$flags	set	126
  2059  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     18      54
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    Tick_Is_Over@tick	PTR struct . size(1) Largest target is 36
		 -> Tick(BANK0[36]), 


Critical Paths under _main in COMMON

    _Tick_Is_Over->___lmul

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Tick_Is_Over

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1023
                  _SYSTEM_Initialize
                       _Tick_Is_Over
 ---------------------------------------------------------------------------------
 (1) _Tick_Is_Over                                        18    14      4    1023
                                              0 BANK0     18    14      4
                     _TMR1_ReadTimer
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     220
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) _TMR1_ReadTimer                                       8     4      4      28
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_InterruptManager                           0     0      0       0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (4) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
     _WDT_Initialize
   _Tick_Is_Over
     _TMR1_ReadTimer
     ___lmul

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      44       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     12      36       6       67.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      44      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Mon Sep 04 01:59:53 2017

                        __CFG_CP$OFF 0000                                   PL2 01A2  
                                 PL4 01AB                                   PL6 01B0  
                                 l63 0131                          __CFG_LVP$ON 0000  
                                l236 0171                                  l605 0192  
                                l803 004C                                  l807 005C  
                                l749 017B                                  l765 00B0  
                                l777 011C                                  l769 00F1  
                                l795 002D                                  l799 003C  
                                u240 00EF                                  u235 00CC  
                                u245 00EB                                  u265 0104  
                       __CFG_CPD$OFF 0000                                  u195 015E  
                                u275 0118                         __CFG_BORV$LO 0000  
                                wreg 0009                         __CFG_IESO$ON 0000  
                               _LATA 010C                                 _LATB 010D  
                               _LATC 010E                                 _LATE 0110  
                               i1l41 0010                                 _PLLR 04D6  
                               _WPUB 020D                                 _WPUE 0210  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _Tick 0020                                 _main 0021  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               start 0012                        __CFG_MCLRE$ON 0000  
                      __CFG_PLLEN$ON 0000       __size_of_OSCILLATOR_Initialize 0007  
      __end_of_OSCILLATOR_Initialize 0134                                ?_main 0070  
                      __CFG_WDTE$OFF 0000                                _T1CON 0018  
                              _TMR1H 0017                                _TMR1L 0016  
                              _TRISA 008C                                _TRISB 008D  
                              _TRISC 008E                                _TRISE 0090  
                ___lmul@multiplicand 0074                     __end_of_TMR1_ISR 01C8  
                     _WDT_Initialize 019F                                _count 007C  
            __end_of_TMR1_Initialize 019F                                status 0003  
                              wtemp0 007E                      __initialization 0014  
                       __end_of_main 006D          ?_INTERRUPT_InterruptManager 0070  
                             ??_main 007C               __end_of_WDT_Initialize 01A2  
                             _APFCON 011D                               _ANSELA 018C  
                             _ANSELB 018D                               _T1GCON 0019  
                             _OSCCON 0099                               _WDTCON 0097  
                     __CFG_PWRTE$OFF 0000                               ___lmul 016D  
                     __CFG_STVREN$ON 0000                      ?_WDT_Initialize 0070  
                   ?_TMR1_Initialize 0070                    _SYSTEM_Initialize 0126  
            __end_of__initialization 001E                   ?_SYSTEM_Initialize 0070  
                      ?_Tick_Is_Over 0044                       __pcstackCOMMON 0070  
                ??_SYSTEM_Initialize 0070                            ?_TMR1_ISR 0070  
                         __end_ofPL2 01AB                           __end_ofPL4 01B0  
                         __end_ofPL6 01B8                       _OPTION_REGbits 0095  
            __size_of_TMR1_ReadTimer 001E            __end_of_SYSTEM_Initialize 012D  
                         __pbssBANK0 0020                      __CFG_VCAPEN$OFF 0000  
                     ??_Tick_Is_Over 0048                           __pmaintext 0021  
                            ?___lmul 0070                           ??_TMR1_ISR 0070  
                         __pintentry 0004                       ___lmul@product 0078  
                            _OSCTUNE 0098                      __size_of___lmul 0025  
                     Tick_Is_Over@ms 0044                              __ptext1 006D  
                            __ptext2 016D                              __ptext3 014F  
                            __ptext4 0126                              __ptext5 019F  
                            __ptext6 0192                              __ptext7 0134  
                            __ptext8 012D                            _T1CONbits 0018  
              _OSCILLATOR_Initialize 012D             ??_PIN_MANAGER_Initialize 0070  
         __size_of_SYSTEM_Initialize 0007                              clrloop0 01C9  
               end_of_initialization 001E                     ??_WDT_Initialize 0070  
                   __CFG_FOSC$INTOSC 0000                       _TMR1_ReadTimer 014F  
               __end_of_Tick_Is_Over 0126                       __end_of___lmul 0192  
                  __size_of_TMR1_ISR 0010               ?_OSCILLATOR_Initialize 0070  
             __end_of_TMR1_ReadTimer 016D                  start_initialization 0014  
    __size_of_PIN_MANAGER_Initialize 001B             __size_of_TMR1_Initialize 000D  
                           ??___lmul 0078                      ?_TMR1_ReadTimer 0070  
                        __pbssCOMMON 007C                            ___latbits 0002  
                      __pcstackBANK0 0044                     Tick_Is_Over@tick 0055  
             _PIN_MANAGER_Initialize 0134         ??_INTERRUPT_InterruptManager 0070  
              __size_of_Tick_Is_Over 00B9                             _LATCbits 010E  
                          clear_ram0 01C8                             _PIE1bits 0091  
                   _Tick_Is_Over$275 0050  __size_of_INTERRUPT_InterruptManager 000E  
                           _PIR1bits 0011                         _Tick_Is_Over 006D  
                           _TMR1_ISR 01B8                    ??_TMR1_Initialize 0070  
                  ___lmul@multiplier 0070                TMR1_ReadTimer@readVal 0074  
            ??_OSCILLATOR_Initialize 0070                      Tick_Is_Over@pre 0051  
                           __ptext10 01B8                        __size_of_main 004C  
                   ??_TMR1_ReadTimer 0074                             int$flags 007E  
 __end_of_INTERRUPT_InterruptManager 0012           _INTERRUPT_InterruptManager 0004  
                         _INTCONbits 000B              __size_of_WDT_Initialize 0003  
                           intlevel1 0000              ?_PIN_MANAGER_Initialize 0070  
                  __CFG_CLKOUTEN$OFF 0000       __end_of_PIN_MANAGER_Initialize 014F  
                    _TMR1_Initialize 0192  
