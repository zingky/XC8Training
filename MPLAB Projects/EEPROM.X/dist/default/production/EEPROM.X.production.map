Microchip MPLAB XC8 Compiler V1.44 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.44\dat\en_msgs.txt -cs \
  -h+dist/default/production\EEPROM.X.production.sym \
  --cmf=dist/default/production\EEPROM.X.production.cmf -z -Q16F1936 \
  -oC:\Users\dungl\AppData\Local\Temp\sdsg.2 \
  -Mdist/default/production/EEPROM.X.production.map -E1 -ver=XC8 \
  -ASTACK=0203Ch-021efh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0120h-016Fh -ABANK3=01A0h-01EFh \
  -ABANK4=0220h-026Fh -ABANK5=02A0h-02EFh -ABANK6=0320h-032Fh \
  -ABIGRAM=02000h-021EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0120h-016Fh,01A0h-01EFh,0220h-026Fh,02A0h-02EFh,0320h-032Fh \
  -AABS1=020h-07Fh,0A0h-0EFh,0120h-016Fh,01A0h-01EFh,0220h-026Fh,02A0h-02EFh,0320h-032Fh \
  -ASFR0=00h-01Fh -ASFR1=080h-09Fh -ASFR2=0100h-011Fh -ASFR3=0180h-019Fh \
  -ASFR4=0200h-021Fh -ASFR5=0280h-029Fh -ASFR6=0300h-031Fh \
  -ASFR7=0380h-03EFh -ASFR8=0400h-046Fh -ASFR9=0480h-04EFh \
  -ASFR10=0500h-056Fh -ASFR11=0580h-05EFh -ASFR12=0600h-066Fh \
  -ASFR13=0680h-06EFh -ASFR14=0700h-076Fh -ASFR15=0780h-07EFh \
  -ASFR16=0800h-086Fh -ASFR17=0880h-08EFh -ASFR18=0900h-096Fh \
  -ASFR19=0980h-09EFh -ASFR20=0A00h-0A6Fh -ASFR21=0A80h-0AEFh \
  -ASFR22=0B00h-0B6Fh -ASFR23=0B80h-0BEFh -ASFR24=0C00h-0C6Fh \
  -ASFR25=0C80h-0CEFh -ASFR26=0D00h-0D6Fh -ASFR27=0D80h-0DEFh \
  -ASFR28=0E00h-0E6Fh -ASFR29=0E80h-0EEFh -ASFR30=0F00h-0F6Fh \
  -ASFR31=0F80h-0FEFh -preset_vec=00h,intentry=04h,init,end_init \
  -ppowerup=CODE -pcinit=CODE -pfunctab=ENTRY -ACONFIG=08007h-08008h \
  -pconfig=CONFIG -DCONFIG=2 -AIDLOC=08000h-08003h -pidloc=IDLOC -DIDLOC=2 \
  -AEEDATA=00h-0FFh/0F000h -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 \
  -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 -k \
  C:\Users\dungl\AppData\Local\Temp\sdsg.obj \
  dist/default/production\EEPROM.X.production.obj 

Object code version is 3.11

Machine type is 16F1936



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\dungl\AppData\Local\Temp\sdsg.obj
                end_init                             18       18        2        8       0
                reset_vec                             0        0        2        0       0
                config                             8007     8007        2    1000E       0
dist/default/production\EEPROM.X.production.obj
                cinit                                1A       1A        C        8       0
                intentry                              4        4       14        8       0
                text32                              596      596       12        8       0
                text30                              4AA      4AA       29        8       0
                text29                              44B      44B       32        8       0
                text28                              1AB      1AB       E4        8       0
                text27                              28F      28F       67        8       0
                text26                              613      613        C      B6E       0
                text25                              632      632        8      C52       0
                text24                              5B7      5B7        F      B6E       0
                text23                              647      647        6      C52       0
                text22                              5D4      5D4        E      B6E       0
                text21                              582      582       14        8       0
                text20                              4FA      4FA       1E        8       0
                text19                              3DF      3DF       38        8       0
                text18                              4D3      4D3       27        8       0
                text17                              5E2      5E2        D      B6E       0
                text16                              63A      63A        7      C52       0
                text15                              535      535       1D        8       0
                text14                              607      607        C      B6E       0
                text13                              64D      64D        4      C52       0
                text12                              5FB      5FB        C      B6E       0
                text11                              518      518       1D        8       0
                text10                              5EF      5EF        C      B6E       0
                text9                               56D      56D       15        8       0
                text8                               397      397       48        8       0
                text7                               629      629        9      C52       0
                text6                               34F      34F       48        8       0
                text5                               417      417       34        8       0
                text4                               47D      47D       2D        8       0
                text3                               552      552       1B        8       0
                text2                               5C6      5C6        E      B6E       0
                text1                                26       26      185        8       0
                maintext                            2F6      2F6       59        8       0
                cstackBANK0                          3E       3E       1E       20       1
                cstackCOMMON                         70       70        C       70       1
                clrtext                             641      641        6      C52       0
                bssBANK0                             20       20       1E       20       1
                bssCOMMON                            7C       7C        1       70       1
                stringtext2                         5A8      5A8        F      B50       0
                stringtext1                         61F      61F        A      C3E       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             18       18        2         0
                cinit                                1A       1A        C         0
                intentry                              4        4       14         0
                reset_vec                             0        0        2         0
                text32                              596      596       12         0
                text30                              4AA      4AA       29         0
                text29                              44B      44B       32         0
                text28                              1AB      1AB       E4         0
                text27                              28F      28F       67         0
                text26                              613      613        C         0
                text25                              632      632        8         0
                text24                              5B7      5B7        F         0
                text23                              647      647        6         0
                text22                              5D4      5D4        E         0
                text21                              582      582       14         0
                text20                              4FA      4FA       1E         0
                text19                              3DF      3DF       38         0
                text18                              4D3      4D3       27         0
                text17                              5E2      5E2        D         0
                text16                              63A      63A        7         0
                text15                              535      535       1D         0
                text14                              607      607        C         0
                text13                              64D      64D        4         0
                text12                              5FB      5FB        C         0
                text11                              518      518       1D         0
                text10                              5EF      5EF        C         0
                text9                               56D      56D       15         0
                text8                               397      397       48         0
                text7                               629      629        9         0
                text6                               34F      34F       48         0
                text5                               417      417       34         0
                text4                               47D      47D       2D         0
                text3                               552      552       1B         0
                text2                               5C6      5C6        E         0
                text1                                26       26      185         0
                maintext                            2F6      2F6       59         0
                clrtext                             641      641        6         0

        CLASS   STRCODE        
                stringtext2                         5A8      5A8        F         0
                stringtext1                         61F      61F        A         0

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        C         1
                bssCOMMON                            7C       7C        1         1

        CLASS   BANK0          
                cstackBANK0                          3E       3E       1E         1
                bssBANK0                             20       20       1E         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   BANK6          

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   SFR4           

        CLASS   SFR5           

        CLASS   SFR6           

        CLASS   SFR7           

        CLASS   SFR8           

        CLASS   SFR9           

        CLASS   SFR10          

        CLASS   SFR11          

        CLASS   SFR12          

        CLASS   SFR13          

        CLASS   SFR14          

        CLASS   SFR15          

        CLASS   SFR16          

        CLASS   SFR17          

        CLASS   SFR18          

        CLASS   SFR19          

        CLASS   SFR20          

        CLASS   SFR21          

        CLASS   SFR22          

        CLASS   SFR23          

        CLASS   SFR24          

        CLASS   SFR25          

        CLASS   SFR26          

        CLASS   SFR27          

        CLASS   SFR28          

        CLASS   SFR29          

        CLASS   SFR30          

        CLASS   SFR31          

        CLASS   CONFIG         
                config                             8007     8007        2         0

        CLASS   IDLOC          

        CLASS   EEDATA         

        CLASS   BANK31         

        CLASS   BANK30         

        CLASS   BANK29         

        CLASS   BANK28         

        CLASS   BANK27         

        CLASS   BANK26         

        CLASS   BANK25         

        CLASS   BANK24         

        CLASS   BANK23         

        CLASS   BANK22         

        CLASS   BANK21         

        CLASS   BANK20         

        CLASS   BANK19         

        CLASS   BANK18         

        CLASS   BANK17         

        CLASS   BANK16         

        CLASS   BANK15         

        CLASS   BANK14         

        CLASS   BANK13         

        CLASS   BANK12         

        CLASS   BANK11         

        CLASS   BANK10         

        CLASS   BANK9          

        CLASS   BANK8          

        CLASS   BANK7          



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000002  000002         0       0  CODE        2
                intentry                       000004  0005A4  0005A8         8       0  CODE        2
                bssBANK0                       000020  00003C  00005C        20       1  BANK0       1
                cstackCOMMON                   000070  00000D  00007D        70       1  COMMON      1
                stringtext2                    0005A8  00000F  0005B7       B50       0  STRCODE     2
                text24                         0005B7  000068  00061F       B6E       0  CODE        2
                stringtext1                    00061F  00000A  000629       C3E       0  STRCODE     2
                text7                          000629  000028  000651       C52       0  CODE        2
                config                         008007  000002  008009     1000E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0005C-0006F              14           1
        BANK1            000A0-000EF              50           1
        BANK2            00120-0016F              50           1
        BANK3            001A0-001EF              50           1
        BANK4            00220-0026F              50           1
        BANK5            002A0-002EF              50           1
        BANK6            00320-0032F              10           1
        BIGRAM           02000-021EF             1F0           1
        CODE             00002-00003               2           2
                         00651-01FFF             800
        COMMON           0007D-0007D               1           1
        CONST            00002-00003               2           2
                         00651-01FFF             100
        EEDATA           0F000-0F0FF             100           2
        ENTRY            00002-00003               2           2
                         00651-01FFF             100
        IDLOC            08000-08003               4           2
        RAM              0005C-0006F              14           1
                         000A0-000EF              50
                         00120-0016F              50
                         001A0-001EF              50
                         00220-0026F              50
                         002A0-002EF              50
                         00320-0032F              10
        SFR0             00000-0001F              20           1
        SFR1             00080-0009F              20           1
        SFR10            00500-0056F              70           1
        SFR11            00580-005EF              70           1
        SFR12            00600-0066F              70           1
        SFR13            00680-006EF              70           1
        SFR14            00700-0076F              70           1
        SFR15            00780-007EF              70           1
        SFR16            00800-0086F              70           1
        SFR17            00880-008EF              70           1
        SFR18            00900-0096F              70           1
        SFR19            00980-009EF              70           1
        SFR2             00100-0011F              20           1
        SFR20            00A00-00A6F              70           1
        SFR21            00A80-00AEF              70           1
        SFR22            00B00-00B6F              70           1
        SFR23            00B80-00BEF              70           1
        SFR24            00C00-00C6F              70           1
        SFR25            00C80-00CEF              70           1
        SFR26            00D00-00D6F              70           1
        SFR27            00D80-00DEF              70           1
        SFR28            00E00-00E6F              70           1
        SFR29            00E80-00EEF              70           1
        SFR3             00180-0019F              20           1
        SFR30            00F00-00F6F              70           1
        SFR31            00F80-00FEF              70           1
        SFR4             00200-0021F              20           1
        SFR5             00280-0029F              20           1
        SFR6             00300-0031F              20           1
        SFR7             00380-003EF              70           1
        SFR8             00400-0046F              70           1
        SFR9             00480-004EF              70           1
        STACK            0203C-021EF             1B4           1
        STRCODE          00002-00003               2           2
                         00651-01FFF            19AF
        STRING           00002-00003               2           2
                         00651-01FFF             100

                                  Symbol Table

?_TMR1_ReadTimer                         cstackCOMMON 00071
?___lmul                                 cstackCOMMON 00071
?___lwdiv                                cstackCOMMON 00071
?___lwmod                                cstackBANK0  0003E
?___wmul                                 cstackCOMMON 00071
?_sprintf                                cstackBANK0  00042
BT_Is_Pressed@BT                         cstackCOMMON 0007A
BT_Is_Pressed@detect_time                cstackBANK0  00056
BT_Is_Pressed@edge                       cstackBANK0  00055
BT_Is_Pressed@signal                     cstackBANK0  00054
Button_Init@BT                           cstackCOMMON 00071
EXT_EEPROM_ReadByte@address              cstackCOMMON 00076
EXT_EEPROM_ReadByte@data                 cstackCOMMON 0007A
EXT_EEPROM_Ready@ack                     cstackCOMMON 00075
EXT_EEPROM_WriteByte@address             cstackCOMMON 00076
EXT_EEPROM_WriteByte@data                cstackCOMMON 00078
I2C_Read@ack                             cstackCOMMON 00073
I2C_Read@temp                            cstackCOMMON 00074
I2C_Write@data_out                       cstackCOMMON 00073
I2C_Write@temp                           cstackCOMMON 00071
TMR1_ReadTimer@readVal                   cstackCOMMON 00075
TextLCD_4Bits_Write@nib                  cstackCOMMON 00071
TextLCD_CMD@cmd                          cstackCOMMON 00073
TextLCD_PutChar@data                     cstackCOMMON 00074
TextLCD_Puts@DDRAM_Start_Address         stringtext2  005A8
TextLCD_Puts@address                     cstackCOMMON 0007A
TextLCD_Puts@data                        cstackCOMMON 00076
TextLCD_Puts@idx                         cstackCOMMON 00075
TextLCD_Puts@length_or_type              cstackCOMMON 00077
TextLCD_Puts@line                        cstackCOMMON 00079
Tick_Is_Over@ms                          cstackBANK0  00042
Tick_Is_Over@pre                         cstackBANK0  0004F
Tick_Is_Over@tick                        cstackBANK0  00053
_ANSELA                                  (abs)        0018C
_ANSELB                                  (abs)        0018D
_APFCON                                  (abs)        0011D
_BT_Is_Pressed                           text27       0028F
_Button_Init                             text26       00613
_COUNT                                   bssBANK0     00033
_EXT_EEPROM_ReadByte                     text19       003DF
_EXT_EEPROM_Ready                        text21       00582
_EXT_EEPROM_WriteByte                    text18       004D3
_I2C_Init                                text17       005E2
_I2C_Read                                text20       004FA
_I2C_Start                               text24       005B7
_I2C_Stop                                text23       00647
_I2C_Wait                                text25       00632
_I2C_Write                               text22       005D4
_INTCONbits                              (abs)        0000B
_INTERRUPT_InterruptManager              intentry     00004
_LATA                                    (abs)        0010C
_LATAbits                                (abs)        0010C
_LATB                                    (abs)        0010D
_LATC                                    (abs)        0010E
_LATCbits                                (abs)        0010E
_LATE                                    (abs)        00110
_OPTION_REGbits                          (abs)        00095
_OSCCON                                  (abs)        00099
_OSCILLATOR_Initialize                   text16       0063A
_OSCTUNE                                 (abs)        00098
_PIE1bits                                (abs)        00091
_PIN_MANAGER_Initialize                  text15       00535
_PIR1bits                                (abs)        00011
_PLLR                                    (abs)        004D6
_PORTBbits                               (abs)        0000D
_SSPADD                                  (abs)        00212
_SSPBUF                                  (abs)        00211
_SSPCON1                                 (abs)        00215
_SSPCON2                                 (abs)        00216
_SSPCON2bits                             (abs)        00216
_SSPCON3                                 (abs)        00217
_SSPSTAT                                 (abs)        00214
_SYSTEM_Initialize                       text12       005FB
_T1CON                                   (abs)        00018
_T1CONbits                               (abs)        00018
_T1GCON                                  (abs)        00019
_TMR1H                                   (abs)        00017
_TMR1L                                   (abs)        00016
_TMR1_ISR                                text32       00596
_TMR1_Initialize                         text14       00607
_TMR1_ReadTimer                          text30       004AA
_TRISA                                   (abs)        0008C
_TRISB                                   (abs)        0008D
_TRISC                                   (abs)        0008E
_TRISCbits                               (abs)        0008E
_TRISE                                   (abs)        00090
_TextLCD_4Bits_Write                     text11       00518
_TextLCD_CMD                             text9        0056D
_TextLCD_Enable                          text10       005EF
_TextLCD_Init                            text8        00397
_TextLCD_PutChar                         text7        00629
_TextLCD_Puts                            text6        0034F
_Tick_Is_Over                            text28       001AB
_Tick_Is_Over$568                        cstackBANK0  0004E
_WDTCON                                  (abs)        00097
_WDT_Initialize                          text13       0064D
_WPUB                                    (abs)        0020D
_WPUE                                    (abs)        00210
__CFG_BOREN$ON                           (abs)        00000
__CFG_BORV$LO                            (abs)        00000
__CFG_CLKOUTEN$OFF                       (abs)        00000
__CFG_CP$OFF                             (abs)        00000
__CFG_CPD$OFF                            (abs)        00000
__CFG_FCMEN$ON                           (abs)        00000
__CFG_FOSC$INTOSC                        (abs)        00000
__CFG_IESO$ON                            (abs)        00000
__CFG_LVP$ON                             (abs)        00000
__CFG_MCLRE$ON                           (abs)        00000
__CFG_PLLEN$ON                           (abs)        00000
__CFG_PWRTE$OFF                          (abs)        00000
__CFG_STVREN$ON                          (abs)        00000
__CFG_VCAPEN$OFF                         (abs)        00000
__CFG_WDTE$OFF                           (abs)        00000
__CFG_WRT$OFF                            (abs)        00000
__Habs1                                  abs1         00000
__Hbank0                                 bank0        00000
__Hbank1                                 bank1        00000
__Hbank10                                bank10       00000
__Hbank11                                bank11       00000
__Hbank12                                bank12       00000
__Hbank13                                bank13       00000
__Hbank14                                bank14       00000
__Hbank15                                bank15       00000
__Hbank16                                bank16       00000
__Hbank17                                bank17       00000
__Hbank18                                bank18       00000
__Hbank19                                bank19       00000
__Hbank2                                 bank2        00000
__Hbank20                                bank20       00000
__Hbank21                                bank21       00000
__Hbank22                                bank22       00000
__Hbank23                                bank23       00000
__Hbank24                                bank24       00000
__Hbank25                                bank25       00000
__Hbank26                                bank26       00000
__Hbank27                                bank27       00000
__Hbank28                                bank28       00000
__Hbank29                                bank29       00000
__Hbank3                                 bank3        00000
__Hbank30                                bank30       00000
__Hbank31                                bank31       00000
__Hbank4                                 bank4        00000
__Hbank5                                 bank5        00000
__Hbank6                                 bank6        00000
__Hbank7                                 bank7        00000
__Hbank8                                 bank8        00000
__Hbank9                                 bank9        00000
__Hbigram                                bigram       00000
__HbssBANK0                              bssBANK0     00000
__HbssCOMMON                             bssCOMMON    00000
__Hcinit                                 cinit        00026
__Hclrtext                               clrtext      00000
__Hcode                                  code         00000
__Hcommon                                common       00000
__Hconfig                                config       08009
__HcstackBANK0                           cstackBANK0  00000
__HcstackCOMMON                          cstackCOMMON 00000
__Heeprom_data                           eeprom_data  00000
__Hend_init                              end_init     0001A
__Hfunctab                               functab      00000
__Hidloc                                 idloc        00000
__Hinit                                  init         00018
__Hintentry                              intentry     00018
__Hmaintext                              maintext     00000
__Hpowerup                               powerup      00000
__Hram                                   ram          00000
__Hreset_vec                             reset_vec    00002
__Hsfr0                                  sfr0         00000
__Hsfr1                                  sfr1         00000
__Hsfr10                                 sfr10        00000
__Hsfr11                                 sfr11        00000
__Hsfr12                                 sfr12        00000
__Hsfr13                                 sfr13        00000
__Hsfr14                                 sfr14        00000
__Hsfr15                                 sfr15        00000
__Hsfr16                                 sfr16        00000
__Hsfr17                                 sfr17        00000
__Hsfr18                                 sfr18        00000
__Hsfr19                                 sfr19        00000
__Hsfr2                                  sfr2         00000
__Hsfr20                                 sfr20        00000
__Hsfr21                                 sfr21        00000
__Hsfr22                                 sfr22        00000
__Hsfr23                                 sfr23        00000
__Hsfr24                                 sfr24        00000
__Hsfr25                                 sfr25        00000
__Hsfr26                                 sfr26        00000
__Hsfr27                                 sfr27        00000
__Hsfr28                                 sfr28        00000
__Hsfr29                                 sfr29        00000
__Hsfr3                                  sfr3         00000
__Hsfr30                                 sfr30        00000
__Hsfr31                                 sfr31        00000
__Hsfr4                                  sfr4         00000
__Hsfr5                                  sfr5         00000
__Hsfr6                                  sfr6         00000
__Hsfr7                                  sfr7         00000
__Hsfr8                                  sfr8         00000
__Hsfr9                                  sfr9         00000
__Hspace_0                               (abs)        08009
__Hspace_1                               (abs)        0007D
__Hspace_2                               (abs)        00000
__Hspace_3                               (abs)        00000
__Hstack                                 stack        00000
__Hstrings                               strings      00000
__Hstringtext1                           stringtext1  00000
__Hstringtext2                           stringtext2  00000
__Hstringtext3                           stringtext3  00000
__Htext                                  text         00000
__Labs1                                  abs1         00000
__Lbank0                                 bank0        00000
__Lbank1                                 bank1        00000
__Lbank10                                bank10       00000
__Lbank11                                bank11       00000
__Lbank12                                bank12       00000
__Lbank13                                bank13       00000
__Lbank14                                bank14       00000
__Lbank15                                bank15       00000
__Lbank16                                bank16       00000
__Lbank17                                bank17       00000
__Lbank18                                bank18       00000
__Lbank19                                bank19       00000
__Lbank2                                 bank2        00000
__Lbank20                                bank20       00000
__Lbank21                                bank21       00000
__Lbank22                                bank22       00000
__Lbank23                                bank23       00000
__Lbank24                                bank24       00000
__Lbank25                                bank25       00000
__Lbank26                                bank26       00000
__Lbank27                                bank27       00000
__Lbank28                                bank28       00000
__Lbank29                                bank29       00000
__Lbank3                                 bank3        00000
__Lbank30                                bank30       00000
__Lbank31                                bank31       00000
__Lbank4                                 bank4        00000
__Lbank5                                 bank5        00000
__Lbank6                                 bank6        00000
__Lbank7                                 bank7        00000
__Lbank8                                 bank8        00000
__Lbank9                                 bank9        00000
__Lbigram                                bigram       00000
__LbssBANK0                              bssBANK0     00000
__LbssCOMMON                             bssCOMMON    00000
__Lcinit                                 cinit        0001A
__Lclrtext                               clrtext      00000
__Lcode                                  code         00000
__Lcommon                                common       00000
__Lconfig                                config       08007
__LcstackBANK0                           cstackBANK0  00000
__LcstackCOMMON                          cstackCOMMON 00000
__Leeprom_data                           eeprom_data  00000
__Lend_init                              end_init     00018
__Lfunctab                               functab      00000
__Lidloc                                 idloc        00000
__Linit                                  init         00018
__Lintentry                              intentry     00004
__Lmaintext                              maintext     00000
__Lpowerup                               powerup      00000
__Lram                                   ram          00000
__Lreset_vec                             reset_vec    00000
__Lsfr0                                  sfr0         00000
__Lsfr1                                  sfr1         00000
__Lsfr10                                 sfr10        00000
__Lsfr11                                 sfr11        00000
__Lsfr12                                 sfr12        00000
__Lsfr13                                 sfr13        00000
__Lsfr14                                 sfr14        00000
__Lsfr15                                 sfr15        00000
__Lsfr16                                 sfr16        00000
__Lsfr17                                 sfr17        00000
__Lsfr18                                 sfr18        00000
__Lsfr19                                 sfr19        00000
__Lsfr2                                  sfr2         00000
__Lsfr20                                 sfr20        00000
__Lsfr21                                 sfr21        00000
__Lsfr22                                 sfr22        00000
__Lsfr23                                 sfr23        00000
__Lsfr24                                 sfr24        00000
__Lsfr25                                 sfr25        00000
__Lsfr26                                 sfr26        00000
__Lsfr27                                 sfr27        00000
__Lsfr28                                 sfr28        00000
__Lsfr29                                 sfr29        00000
__Lsfr3                                  sfr3         00000
__Lsfr30                                 sfr30        00000
__Lsfr31                                 sfr31        00000
__Lsfr4                                  sfr4         00000
__Lsfr5                                  sfr5         00000
__Lsfr6                                  sfr6         00000
__Lsfr7                                  sfr7         00000
__Lsfr8                                  sfr8         00000
__Lsfr9                                  sfr9         00000
__Lspace_0                               (abs)        00000
__Lspace_1                               (abs)        00000
__Lspace_2                               (abs)        00000
__Lspace_3                               (abs)        00000
__Lstack                                 stack        00000
__Lstrings                               strings      00000
__Lstringtext1                           stringtext1  00000
__Lstringtext2                           stringtext2  00000
__Lstringtext3                           stringtext3  00000
__Ltext                                  text         00000
__S0                                     (abs)        08009
__S1                                     (abs)        0007D
__S2                                     (abs)        00000
__S3                                     (abs)        00000
___int_sp                                stack        00000
___latbits                               (abs)        00002
___lmul                                  text29       0044B
___lmul@multiplicand                     cstackCOMMON 00075
___lmul@multiplier                       cstackCOMMON 00071
___lmul@product                          cstackBANK0  0003E
___lwdiv                                 text5        00417
___lwdiv@counter                         cstackCOMMON 00076
___lwdiv@dividend                        cstackCOMMON 00073
___lwdiv@divisor                         cstackCOMMON 00071
___lwdiv@quotient                        cstackCOMMON 00077
___lwmod                                 text4        0047D
___lwmod@counter                         cstackCOMMON 0007A
___lwmod@dividend                        cstackBANK0  00040
___lwmod@divisor                         cstackBANK0  0003E
___sp                                    stack        00000
___wmul                                  text3        00552
___wmul@multiplicand                     cstackCOMMON 00073
___wmul@multiplier                       cstackCOMMON 00071
___wmul@product                          cstackCOMMON 00075
__end_ofTextLCD_Puts@DDRAM_Start_Address stringtext2  005AC
__end_of_BT_Is_Pressed                   text27       002F6
__end_of_Button_Init                     text26       0061F
__end_of_EXT_EEPROM_ReadByte             text19       00417
__end_of_EXT_EEPROM_Ready                text21       00596
__end_of_EXT_EEPROM_WriteByte            text18       004FA
__end_of_I2C_Init                        text17       005EF
__end_of_I2C_Read                        text20       00518
__end_of_I2C_Start                       text24       005C6
__end_of_I2C_Stop                        text23       0064D
__end_of_I2C_Wait                        text25       0063A
__end_of_I2C_Write                       text22       005E2
__end_of_INTERRUPT_InterruptManager      intentry     00018
__end_of_OSCILLATOR_Initialize           text16       00641
__end_of_PIN_MANAGER_Initialize          text15       00552
__end_of_SYSTEM_Initialize               text12       00607
__end_of_TMR1_ISR                        text32       005A8
__end_of_TMR1_Initialize                 text14       00613
__end_of_TMR1_ReadTimer                  text30       004D3
__end_of_TextLCD_4Bits_Write             text11       00535
__end_of_TextLCD_CMD                     text9        00582
__end_of_TextLCD_Enable                  text10       005FB
__end_of_TextLCD_Init                    text8        003DF
__end_of_TextLCD_PutChar                 text7        00632
__end_of_TextLCD_Puts                    text6        00397
__end_of_Tick_Is_Over                    text28       0028F
__end_of_WDT_Initialize                  text13       00651
__end_of___lmul                          text29       0047D
__end_of___lwdiv                         text5        0044B
__end_of___lwmod                         text4        004AA
__end_of___wmul                          text3        0056D
__end_of__initialization                 cinit        00022
__end_of_dpowers                         stringtext1  00629
__end_of_isdigit                         text2        005D4
__end_of_main                            maintext     0034F
__end_of_sprintf                         text1        001AB
__initialization                         cinit        0001A
__pbssBANK0                              bssBANK0     00020
__pbssCOMMON                             bssCOMMON    0007C
__pcstackBANK0                           cstackBANK0  0003E
__pcstackCOMMON                          cstackCOMMON 00070
__pintentry                              intentry     00004
__pmaintext                              maintext     002F6
__pstringtext1                           stringtext1  0061F
__pstringtext2                           stringtext2  005A8
__pstringtext3                           stringtext3  00000
__ptext1                                 text1        00026
__ptext10                                text10       005EF
__ptext11                                text11       00518
__ptext12                                text12       005FB
__ptext13                                text13       0064D
__ptext14                                text14       00607
__ptext15                                text15       00535
__ptext16                                text16       0063A
__ptext17                                text17       005E2
__ptext18                                text18       004D3
__ptext19                                text19       003DF
__ptext2                                 text2        005C6
__ptext20                                text20       004FA
__ptext21                                text21       00582
__ptext22                                text22       005D4
__ptext23                                text23       00647
__ptext24                                text24       005B7
__ptext25                                text25       00632
__ptext26                                text26       00613
__ptext27                                text27       0028F
__ptext28                                text28       001AB
__ptext29                                text29       0044B
__ptext3                                 text3        00552
__ptext30                                text30       004AA
__ptext32                                text32       00596
__ptext4                                 text4        0047D
__ptext5                                 text5        00417
__ptext6                                 text6        0034F
__ptext7                                 text7        00629
__ptext8                                 text8        00397
__ptext9                                 text9        0056D
__size_of_BT_Is_Pressed                  (abs)        00000
__size_of_Button_Init                    (abs)        00000
__size_of_EXT_EEPROM_ReadByte            (abs)        00000
__size_of_EXT_EEPROM_Ready               (abs)        00000
__size_of_EXT_EEPROM_WriteByte           (abs)        00000
__size_of_I2C_Init                       (abs)        00000
__size_of_I2C_Read                       (abs)        00000
__size_of_I2C_Start                      (abs)        00000
__size_of_I2C_Stop                       (abs)        00000
__size_of_I2C_Wait                       (abs)        00000
__size_of_I2C_Write                      (abs)        00000
__size_of_INTERRUPT_InterruptManager     (abs)        00000
__size_of_OSCILLATOR_Initialize          (abs)        00000
__size_of_PIN_MANAGER_Initialize         (abs)        00000
__size_of_SYSTEM_Initialize              (abs)        00000
__size_of_TMR1_ISR                       (abs)        00000
__size_of_TMR1_Initialize                (abs)        00000
__size_of_TMR1_ReadTimer                 (abs)        00000
__size_of_TextLCD_4Bits_Write            (abs)        00000
__size_of_TextLCD_CMD                    (abs)        00000
__size_of_TextLCD_Enable                 (abs)        00000
__size_of_TextLCD_Init                   (abs)        00000
__size_of_TextLCD_PutChar                (abs)        00000
__size_of_TextLCD_Puts                   (abs)        00000
__size_of_Tick_Is_Over                   (abs)        00000
__size_of_WDT_Initialize                 (abs)        00000
__size_of___lmul                         (abs)        00000
__size_of___lwdiv                        (abs)        00000
__size_of___lwmod                        (abs)        00000
__size_of___wmul                         (abs)        00000
__size_of_isdigit                        (abs)        00000
__size_of_main                           (abs)        00000
__size_of_sprintf                        (abs)        00000
_count                                   bssBANK0     00020
_dpowers                                 stringtext1  0061F
_isdigit                                 text2        005C6
_isdigit$862                             cstackCOMMON 00071
_main                                    maintext     002F6
_restart                                 bssCOMMON    0007C
_sprintf                                 text1        00026
_str                                     bssBANK0     00022
btemp                                    (abs)        0007E
clear_ram0                               clrtext      00641
end_of_initialization                    cinit        00022
int$flags                                (abs)        0007E
intlevel0                                functab      00000
intlevel1                                functab      00000
intlevel2                                functab      00000
intlevel3                                functab      00000
intlevel4                                functab      00000
intlevel5                                functab      00000
isdigit@c                                cstackCOMMON 00072
main@count                               cstackCOMMON 0007B
reset_vec                                reset_vec    00000
sprintf@ap                               cstackBANK0  0004A
sprintf@c                                cstackBANK0  00052
sprintf@f                                cstackBANK0  00042
sprintf@flag                             cstackBANK0  0004E
sprintf@prec                             cstackBANK0  0004B
sprintf@sp                               cstackBANK0  00051
sprintf@val                              cstackBANK0  0004C
sprintf@width                            cstackBANK0  0004F
stackhi                                  (abs)        021EF
stacklo                                  (abs)        0203C
start                                    init         00018
start_initialization                     cinit        0001A
wtemp0                                   (abs)        0007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 10 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  count           1   11[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0
      Temps:          0       2       0       0       0       0       0       0
      Totals:         1       2       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels required when called:    6
 This function calls:
		_BT_Is_Pressed
		_Button_Init
		_EXT_EEPROM_ReadByte
		_EXT_EEPROM_WriteByte
		_I2C_Init
		_SYSTEM_Initialize
		_TextLCD_Init
		_TextLCD_Puts
		_sprintf
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _sprintf *****************
 Defined at:
		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
 Parameters:    Size  Location     Type
  sp              1    wreg     PTR unsigned char 
		 -> str(17), 
  f               2    4[BANK0 ] PTR const unsigned char 
		 -> STR_1(11), 
 Auto vars:     Size  Location     Type
  sp              1   19[BANK0 ] PTR unsigned char 
		 -> str(17), 
  tmpval          4    0        struct .
  width           2   17[BANK0 ] int 
  val             2   14[BANK0 ] unsigned int 
  cp              2    0        PTR const unsigned char 
  len             2    0        unsigned int 
  c               1   20[BANK0 ] char 
  flag            1   16[BANK0 ] unsigned char 
  prec            1   13[BANK0 ] char 
  ap              1   12[BANK0 ] PTR void [1]
		 -> ?_sprintf(2), 
 Return value:  Size  Location     Type
                  2    4[BANK0 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       4       0       0       0       0       0       0
      Locals:         0       9       0       0       0       0       0       0
      Temps:          0       4       0       0       0       0       0       0
      Totals:         0      17       0       0       0       0       0       0
Total ram usage:       17 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___lwdiv
		___lwmod
		___wmul
		_isdigit
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _isdigit *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\isdigit.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    2[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    1[COMMON] unsigned int 
  multiplicand    2    3[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    5[COMMON] unsigned int 
 Return value:  Size  Location     Type
                  2    1[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         4       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lwmod *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwmod.c"
 Parameters:    Size  Location     Type
  divisor         2    0[BANK0 ] unsigned int 
  dividend        2    2[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  counter         1   10[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       4       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0
      Totals:         2       4       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    1[COMMON] unsigned int 
  dividend        2    3[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2    7[COMMON] unsigned int 
  counter         1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    1[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         4       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function _TextLCD_Puts *****************
 Defined at:
		line 38 in file "TextLCD.c"
 Parameters:    Size  Location     Type
  line            1    wreg     unsigned char 
  idx             1    5[COMMON] unsigned char 
  data            1    6[COMMON] PTR unsigned char 
		 -> str(17), 
  length_or_ty    1    7[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  line            1    9[COMMON] unsigned char 
  address         1   10[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         3       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_TextLCD_CMD
		_TextLCD_PutChar
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _TextLCD_PutChar *****************
 Defined at:
		line 31 in file "TextLCD.c"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_TextLCD_CMD
 This function is called by:
		_TextLCD_Puts
 This function uses a non-reentrant model


 *************** function _TextLCD_Init *****************
 Defined at:
		line 56 in file "TextLCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_TextLCD_4Bits_Write
		_TextLCD_CMD
		_TextLCD_Enable
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _TextLCD_CMD *****************
 Defined at:
		line 23 in file "TextLCD.c"
 Parameters:    Size  Location     Type
  cmd             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  cmd             1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_TextLCD_4Bits_Write
		_TextLCD_Enable
 This function is called by:
		_TextLCD_PutChar
		_TextLCD_Puts
		_TextLCD_Init
		_TextLCD_Clear
 This function uses a non-reentrant model


 *************** function _TextLCD_Enable *****************
 Defined at:
		line 15 in file "TextLCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_TextLCD_CMD
		_TextLCD_Init
 This function uses a non-reentrant model


 *************** function _TextLCD_4Bits_Write *****************
 Defined at:
		line 4 in file "TextLCD.c"
 Parameters:    Size  Location     Type
  nib             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  nib             1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_TextLCD_CMD
		_TextLCD_Init
 This function uses a non-reentrant model


 *************** function _SYSTEM_Initialize *****************
 Defined at:
		line 70 in file "mcc_generated_files/mcc.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_OSCILLATOR_Initialize
		_PIN_MANAGER_Initialize
		_TMR1_Initialize
		_WDT_Initialize
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _WDT_Initialize *****************
 Defined at:
		line 91 in file "mcc_generated_files/mcc.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_SYSTEM_Initialize
 This function uses a non-reentrant model


 *************** function _TMR1_Initialize *****************
 Defined at:
		line 6 in file "mcc_generated_files/tmr1.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_SYSTEM_Initialize
 This function uses a non-reentrant model


 *************** function _PIN_MANAGER_Initialize *****************
 Defined at:
		line 52 in file "mcc_generated_files/pin_manager.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_SYSTEM_Initialize
 This function uses a non-reentrant model


 *************** function _OSCILLATOR_Initialize *****************
 Defined at:
		line 79 in file "mcc_generated_files/mcc.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_SYSTEM_Initialize
 This function uses a non-reentrant model


 *************** function _I2C_Init *****************
 Defined at:
		line 57 in file "MSSP_I2C_Master.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _EXT_EEPROM_WriteByte *****************
 Defined at:
		line 14 in file "EE24AA.c"
 Parameters:    Size  Location     Type
  address         2    6[COMMON] unsigned int 
  data            1    8[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         3       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_EXT_EEPROM_Ready
		_I2C_Start
		_I2C_Stop
		_I2C_Write
 This function is called by:
		_main
		_EXT_EEPROM_WriteArray
		_EXT_EEPROM_EraseBlock
 This function uses a non-reentrant model


 *************** function _EXT_EEPROM_ReadByte *****************
 Defined at:
		line 26 in file "EE24AA.c"
 Parameters:    Size  Location     Type
  address         2    6[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  data            1   10[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         2       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_EXT_EEPROM_Ready
		_I2C_Read
		_I2C_Start
		_I2C_Stop
		_I2C_Write
 This function is called by:
		_main
		_EXT_EEPROM_ReadArray
 This function uses a non-reentrant model


 *************** function _I2C_Read *****************
 Defined at:
		line 33 in file "MSSP_I2C_Master.c"
 Parameters:    Size  Location     Type
  ack             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  ack             1    3[COMMON] unsigned char 
  temp            2    4[COMMON] unsigned short 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_I2C_Wait
 This function is called by:
		_EXT_EEPROM_ReadByte
 This function uses a non-reentrant model


 *************** function _EXT_EEPROM_Ready *****************
 Defined at:
		line 5 in file "EE24AA.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ack             1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_I2C_Start
		_I2C_Stop
		_I2C_Write
 This function is called by:
		_EXT_EEPROM_WriteByte
		_EXT_EEPROM_ReadByte
 This function uses a non-reentrant model


 *************** function _I2C_Write *****************
 Defined at:
		line 46 in file "MSSP_I2C_Master.c"
 Parameters:    Size  Location     Type
  data_out        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data_out        1    3[COMMON] unsigned char 
  temp            2    1[COMMON] unsigned short 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_I2C_Wait
 This function is called by:
		_EXT_EEPROM_Ready
		_EXT_EEPROM_WriteByte
		_EXT_EEPROM_ReadByte
 This function uses a non-reentrant model


 *************** function _I2C_Stop *****************
 Defined at:
		line 26 in file "MSSP_I2C_Master.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_I2C_Wait
 This function is called by:
		_EXT_EEPROM_Ready
		_EXT_EEPROM_WriteByte
		_EXT_EEPROM_ReadByte
 This function uses a non-reentrant model


 *************** function _I2C_Start *****************
 Defined at:
		line 11 in file "MSSP_I2C_Master.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_I2C_Wait
 This function is called by:
		_EXT_EEPROM_Ready
		_EXT_EEPROM_WriteByte
		_EXT_EEPROM_ReadByte
 This function uses a non-reentrant model


 *************** function _I2C_Wait *****************
 Defined at:
		line 6 in file "MSSP_I2C_Master.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_I2C_Start
		_I2C_Stop
		_I2C_Read
		_I2C_Write
 This function uses a non-reentrant model


 *************** function _Button_Init *****************
 Defined at:
		line 44 in file "Buttons.c"
 Parameters:    Size  Location     Type
  BT              1    wreg     PTR struct .
		 -> COUNT(11), 
 Auto vars:     Size  Location     Type
  BT              1    1[COMMON] PTR struct .
		 -> COUNT(11), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _BT_Is_Pressed *****************
 Defined at:
		line 3 in file "Buttons.c"
 Parameters:    Size  Location     Type
  BT              1    wreg     PTR struct .
		 -> COUNT(11), 
  signal          1   22[BANK0 ] unsigned char 
  edge            1   23[BANK0 ] unsigned char 
  detect_time     4   24[BANK0 ] unsigned long 
 Auto vars:     Size  Location     Type
  BT              1   10[COMMON] PTR struct .
		 -> COUNT(11), 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       6       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0
      Totals:         2       6       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Tick_Is_Over
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Tick_Is_Over *****************
 Defined at:
		line 4 in file "Tick_timer.c"
 Parameters:    Size  Location     Type
  tick            1    wreg     PTR struct .
		 -> COUNT(11), 
  ms              4    4[BANK0 ] unsigned long 
 Auto vars:     Size  Location     Type
  tick            1   21[BANK0 ] PTR struct .
		 -> COUNT(11), 
  pre             4   17[BANK0 ] unsigned long 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       4       0       0       0       0       0       0
      Locals:         0       6       0       0       0       0       0       0
      Temps:          0       8       0       0       0       0       0       0
      Totals:         0      18       0       0       0       0       0       0
Total ram usage:       18 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_TMR1_ReadTimer
		___lmul
 This function is called by:
		_BT_Is_Pressed
 This function uses a non-reentrant model


 *************** function ___lmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul32.c"
 Parameters:    Size  Location     Type
  multiplier      4    1[COMMON] unsigned long 
  multiplicand    4    5[COMMON] unsigned long 
 Auto vars:     Size  Location     Type
  product         4    0[BANK0 ] unsigned long 
 Return value:  Size  Location     Type
                  4    1[COMMON] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         8       0       0       0       0       0       0       0
      Locals:         0       4       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0
      Totals:         8       4       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_Tick_Is_Over
 This function uses a non-reentrant model


 *************** function _TMR1_ReadTimer *****************
 Defined at:
		line 23 in file "mcc_generated_files/tmr1.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  readVal         4    5[COMMON] unsigned long 
 Return value:  Size  Location     Type
                  4    1[COMMON] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         4       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_Tick_Is_Over
 This function uses a non-reentrant model


 *************** function _INTERRUPT_InterruptManager *****************
 Defined at:
		line 51 in file "mcc_generated_files/interrupt_manager.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_TMR1_ISR
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _TMR1_ISR *****************
 Defined at:
		line 34 in file "mcc_generated_files/tmr1.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_INTERRUPT_InterruptManager
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwmod.c
		___lwmod       		CODE           	047D	0000	46

C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwmod.c estimated size: 46

mcc_generated_files/interrupt_manager.c
		_INTERRUPT_InterruptManager		CODE           	0004	0000	21

mcc_generated_files/interrupt_manager.c estimated size: 21

TextLCD.c
		_TextLCD_CMD   		CODE           	056D	0000	22
		_TextLCD_Init  		CODE           	0397	0000	73
		_TextLCD_Puts  		CODE           	034F	0000	73
		_TextLCD_4Bits_Write		CODE           	0518	0000	30
		_TextLCD_Enable		CODE           	05EF	0000	13
		_TextLCD_PutChar		CODE           	0629	0000	10

TextLCD.c estimated size: 221

mcc_generated_files/pin_manager.c
		_PIN_MANAGER_Initialize		CODE           	0535	0000	30

mcc_generated_files/pin_manager.c estimated size: 30

C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c
		___lwdiv       		CODE           	0417	0000	53

C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c estimated size: 53

C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c
		_sprintf       		CODE           	0026	0000	390

C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c estimated size: 390

Tick_timer.c
		_Tick_Is_Over  		CODE           	01AB	0000	229

Tick_timer.c estimated size: 229

C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c
		___wmul        		CODE           	0552	0000	28

C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c estimated size: 28

Buttons.c
		_Button_Init   		CODE           	0613	0000	13
		_BT_Is_Pressed 		CODE           	028F	0000	104

Buttons.c estimated size: 117

shared
		_dpowers       		STRCODE        	061F	0000	11
		__initialization		CODE           	001A	0000	9
		TextLCD_Puts@DDRAM_Start_Address		STRCODE        	05A8	0000	5

shared estimated size: 25

EE24AA.c
		_EXT_EEPROM_ReadByte		CODE           	03DF	0000	57
		_EXT_EEPROM_WriteByte		CODE           	04D3	0000	40
		_EXT_EEPROM_Ready		CODE           	0582	0000	21

EE24AA.c estimated size: 118

mcc_generated_files/mcc.c
		_WDT_Initialize		CODE           	064D	0000	5
		_OSCILLATOR_Initialize		CODE           	063A	0000	8
		_SYSTEM_Initialize		CODE           	05FB	0000	13

mcc_generated_files/mcc.c estimated size: 26

mcc_generated_files/tmr1.c
		_TMR1_Initialize		CODE           	0607	0000	13
		_TMR1_ReadTimer		CODE           	04AA	0000	42
		_TMR1_ISR      		CODE           	0596	0000	19

mcc_generated_files/tmr1.c estimated size: 74

C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\isdigit.c
		_isdigit       		CODE           	05C6	0000	15

C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\isdigit.c estimated size: 15

C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul32.c
		___lmul        		CODE           	044B	0000	51

C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul32.c estimated size: 51

main.c
		_main          		CODE           	02F6	0000	90

main.c estimated size: 90

MSSP_I2C_Master.c
		_I2C_Write     		CODE           	05D4	0000	15
		_I2C_Stop      		CODE           	0647	0000	7
		_I2C_Wait      		CODE           	0632	0000	9
		_I2C_Read      		CODE           	04FA	0000	31
		_I2C_Init      		CODE           	05E2	0000	14
		_I2C_Start     		CODE           	05B7	0000	16

MSSP_I2C_Master.c estimated size: 92

