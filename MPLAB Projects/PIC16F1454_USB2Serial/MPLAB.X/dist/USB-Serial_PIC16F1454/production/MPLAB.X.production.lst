

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Jan 28 21:04:35 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1454
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	swtext1,local,class=CONST,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2
    58                           	psect	text36,local,class=CODE,merge=1,delta=2
    59                           	psect	text37,local,class=CODE,merge=1,delta=2
    60                           	psect	text38,local,class=CODE,merge=1,delta=2
    61                           	psect	text39,local,class=CODE,merge=1,delta=2
    62                           	psect	text40,local,class=CODE,merge=1,delta=2
    63                           	psect	text41,local,class=CODE,merge=1,delta=2
    64                           	psect	text42,local,class=CODE,merge=1,delta=2
    65                           	psect	text43,local,class=CODE,merge=1,delta=2
    66                           	psect	text44,local,class=CODE,merge=1,delta=2
    67                           	psect	text45,local,class=CODE,merge=1,delta=2
    68                           	psect	text46,local,class=CODE,merge=1,delta=2
    69                           	psect	text47,local,class=CODE,merge=1,delta=2
    70                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
    71                           	psect	text49,local,class=CODE,merge=1,delta=2
    72                           	dabs	1,0x20,48,_BDT
    73                           	dabs	1,0x58,8,_CtrlTrfData
    74                           	dabs	1,0x50,8,_SetupPkt
    75                           	dabs	1,0x127,10,_cdc_notice
    76                           	dabs	1,0x120,7,_line_coding
    77                           	dabs	1,0x220,64,_cdc_data_tx
    78                           	dabs	1,0x2A0,64,_cdc_data_rx
    79                           	dabs	1,0x7E,2
    80  0000                     
    81                           ; Version 1.45
    82                           ; Generated 16/11/2017 GMT
    83                           ; 
    84                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC16F1454 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0008                     	;# 
   124  0009                     	;# 
   125  000A                     	;# 
   126  000B                     	;# 
   127  000C                     	;# 
   128  000E                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  008C                     	;# 
   141  008E                     	;# 
   142  0091                     	;# 
   143  0092                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0097                     	;# 
   147  0098                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  010C                     	;# 
   151  010E                     	;# 
   152  0116                     	;# 
   153  0117                     	;# 
   154  011D                     	;# 
   155  018C                     	;# 
   156  018E                     	;# 
   157  0191                     	;# 
   158  0191                     	;# 
   159  0192                     	;# 
   160  0193                     	;# 
   161  0193                     	;# 
   162  0194                     	;# 
   163  0195                     	;# 
   164  0196                     	;# 
   165  0197                     	;# 
   166  0199                     	;# 
   167  019A                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019C                     	;# 
   171  019D                     	;# 
   172  019E                     	;# 
   173  019F                     	;# 
   174  020C                     	;# 
   175  0211                     	;# 
   176  0211                     	;# 
   177  0212                     	;# 
   178  0212                     	;# 
   179  0213                     	;# 
   180  0213                     	;# 
   181  0214                     	;# 
   182  0214                     	;# 
   183  0215                     	;# 
   184  0215                     	;# 
   185  0215                     	;# 
   186  0216                     	;# 
   187  0216                     	;# 
   188  0217                     	;# 
   189  0217                     	;# 
   190  0391                     	;# 
   191  0392                     	;# 
   192  0393                     	;# 
   193  039A                     	;# 
   194  039B                     	;# 
   195  0611                     	;# 
   196  0612                     	;# 
   197  0613                     	;# 
   198  0613                     	;# 
   199  0614                     	;# 
   200  0615                     	;# 
   201  0616                     	;# 
   202  0616                     	;# 
   203  0E8E                     	;# 
   204  0E8F                     	;# 
   205  0E90                     	;# 
   206  0E91                     	;# 
   207  0E92                     	;# 
   208  0E93                     	;# 
   209  0E94                     	;# 
   210  0E94                     	;# 
   211  0E95                     	;# 
   212  0E96                     	;# 
   213  0E97                     	;# 
   214  0E98                     	;# 
   215  0E99                     	;# 
   216  0E9A                     	;# 
   217  0E9B                     	;# 
   218  0E9C                     	;# 
   219  0E9D                     	;# 
   220  0E9E                     	;# 
   221  0E9F                     	;# 
   222  0FE4                     	;# 
   223  0FE5                     	;# 
   224  0FE6                     	;# 
   225  0FE7                     	;# 
   226  0FE8                     	;# 
   227  0FE9                     	;# 
   228  0FEA                     	;# 
   229  0FEB                     	;# 
   230  0FED                     	;# 
   231  0FEE                     	;# 
   232  0FEF                     	;# 
   233  0000                     	;# 
   234  0001                     	;# 
   235  0002                     	;# 
   236  0003                     	;# 
   237  0004                     	;# 
   238  0005                     	;# 
   239  0006                     	;# 
   240  0007                     	;# 
   241  0008                     	;# 
   242  0009                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000E                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0015                     	;# 
   250  0016                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001C                     	;# 
   258  008C                     	;# 
   259  008E                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  010C                     	;# 
   269  010E                     	;# 
   270  0116                     	;# 
   271  0117                     	;# 
   272  011D                     	;# 
   273  018C                     	;# 
   274  018E                     	;# 
   275  0191                     	;# 
   276  0191                     	;# 
   277  0192                     	;# 
   278  0193                     	;# 
   279  0193                     	;# 
   280  0194                     	;# 
   281  0195                     	;# 
   282  0196                     	;# 
   283  0197                     	;# 
   284  0199                     	;# 
   285  019A                     	;# 
   286  019B                     	;# 
   287  019B                     	;# 
   288  019C                     	;# 
   289  019D                     	;# 
   290  019E                     	;# 
   291  019F                     	;# 
   292  020C                     	;# 
   293  0211                     	;# 
   294  0211                     	;# 
   295  0212                     	;# 
   296  0212                     	;# 
   297  0213                     	;# 
   298  0213                     	;# 
   299  0214                     	;# 
   300  0214                     	;# 
   301  0215                     	;# 
   302  0215                     	;# 
   303  0215                     	;# 
   304  0216                     	;# 
   305  0216                     	;# 
   306  0217                     	;# 
   307  0217                     	;# 
   308  0391                     	;# 
   309  0392                     	;# 
   310  0393                     	;# 
   311  039A                     	;# 
   312  039B                     	;# 
   313  0611                     	;# 
   314  0612                     	;# 
   315  0613                     	;# 
   316  0613                     	;# 
   317  0614                     	;# 
   318  0615                     	;# 
   319  0616                     	;# 
   320  0616                     	;# 
   321  0E8E                     	;# 
   322  0E8F                     	;# 
   323  0E90                     	;# 
   324  0E91                     	;# 
   325  0E92                     	;# 
   326  0E93                     	;# 
   327  0E94                     	;# 
   328  0E94                     	;# 
   329  0E95                     	;# 
   330  0E96                     	;# 
   331  0E97                     	;# 
   332  0E98                     	;# 
   333  0E99                     	;# 
   334  0E9A                     	;# 
   335  0E9B                     	;# 
   336  0E9C                     	;# 
   337  0E9D                     	;# 
   338  0E9E                     	;# 
   339  0E9F                     	;# 
   340  0FE4                     	;# 
   341  0FE5                     	;# 
   342  0FE6                     	;# 
   343  0FE7                     	;# 
   344  0FE8                     	;# 
   345  0FE9                     	;# 
   346  0FEA                     	;# 
   347  0FEB                     	;# 
   348  0FED                     	;# 
   349  0FEE                     	;# 
   350  0FEF                     	;# 
   351  0000                     	;# 
   352  0001                     	;# 
   353  0002                     	;# 
   354  0003                     	;# 
   355  0004                     	;# 
   356  0005                     	;# 
   357  0006                     	;# 
   358  0007                     	;# 
   359  0008                     	;# 
   360  0009                     	;# 
   361  000A                     	;# 
   362  000B                     	;# 
   363  000C                     	;# 
   364  000E                     	;# 
   365  0011                     	;# 
   366  0012                     	;# 
   367  0015                     	;# 
   368  0016                     	;# 
   369  0016                     	;# 
   370  0017                     	;# 
   371  0018                     	;# 
   372  0019                     	;# 
   373  001A                     	;# 
   374  001B                     	;# 
   375  001C                     	;# 
   376  008C                     	;# 
   377  008E                     	;# 
   378  0091                     	;# 
   379  0092                     	;# 
   380  0095                     	;# 
   381  0096                     	;# 
   382  0097                     	;# 
   383  0098                     	;# 
   384  0099                     	;# 
   385  009A                     	;# 
   386  010C                     	;# 
   387  010E                     	;# 
   388  0116                     	;# 
   389  0117                     	;# 
   390  011D                     	;# 
   391  018C                     	;# 
   392  018E                     	;# 
   393  0191                     	;# 
   394  0191                     	;# 
   395  0192                     	;# 
   396  0193                     	;# 
   397  0193                     	;# 
   398  0194                     	;# 
   399  0195                     	;# 
   400  0196                     	;# 
   401  0197                     	;# 
   402  0199                     	;# 
   403  019A                     	;# 
   404  019B                     	;# 
   405  019B                     	;# 
   406  019C                     	;# 
   407  019D                     	;# 
   408  019E                     	;# 
   409  019F                     	;# 
   410  020C                     	;# 
   411  0211                     	;# 
   412  0211                     	;# 
   413  0212                     	;# 
   414  0212                     	;# 
   415  0213                     	;# 
   416  0213                     	;# 
   417  0214                     	;# 
   418  0214                     	;# 
   419  0215                     	;# 
   420  0215                     	;# 
   421  0215                     	;# 
   422  0216                     	;# 
   423  0216                     	;# 
   424  0217                     	;# 
   425  0217                     	;# 
   426  0391                     	;# 
   427  0392                     	;# 
   428  0393                     	;# 
   429  039A                     	;# 
   430  039B                     	;# 
   431  0611                     	;# 
   432  0612                     	;# 
   433  0613                     	;# 
   434  0613                     	;# 
   435  0614                     	;# 
   436  0615                     	;# 
   437  0616                     	;# 
   438  0616                     	;# 
   439  0E8E                     	;# 
   440  0E8F                     	;# 
   441  0E90                     	;# 
   442  0E91                     	;# 
   443  0E92                     	;# 
   444  0E93                     	;# 
   445  0E94                     	;# 
   446  0E94                     	;# 
   447  0E95                     	;# 
   448  0E96                     	;# 
   449  0E97                     	;# 
   450  0E98                     	;# 
   451  0E99                     	;# 
   452  0E9A                     	;# 
   453  0E9B                     	;# 
   454  0E9C                     	;# 
   455  0E9D                     	;# 
   456  0E9E                     	;# 
   457  0E9F                     	;# 
   458  0FE4                     	;# 
   459  0FE5                     	;# 
   460  0FE6                     	;# 
   461  0FE7                     	;# 
   462  0FE8                     	;# 
   463  0FE9                     	;# 
   464  0FEA                     	;# 
   465  0FEB                     	;# 
   466  0FED                     	;# 
   467  0FEE                     	;# 
   468  0FEF                     	;# 
   469  0000                     	;# 
   470  0001                     	;# 
   471  0002                     	;# 
   472  0003                     	;# 
   473  0004                     	;# 
   474  0005                     	;# 
   475  0006                     	;# 
   476  0007                     	;# 
   477  0008                     	;# 
   478  0009                     	;# 
   479  000A                     	;# 
   480  000B                     	;# 
   481  000C                     	;# 
   482  000E                     	;# 
   483  0011                     	;# 
   484  0012                     	;# 
   485  0015                     	;# 
   486  0016                     	;# 
   487  0016                     	;# 
   488  0017                     	;# 
   489  0018                     	;# 
   490  0019                     	;# 
   491  001A                     	;# 
   492  001B                     	;# 
   493  001C                     	;# 
   494  008C                     	;# 
   495  008E                     	;# 
   496  0091                     	;# 
   497  0092                     	;# 
   498  0095                     	;# 
   499  0096                     	;# 
   500  0097                     	;# 
   501  0098                     	;# 
   502  0099                     	;# 
   503  009A                     	;# 
   504  010C                     	;# 
   505  010E                     	;# 
   506  0116                     	;# 
   507  0117                     	;# 
   508  011D                     	;# 
   509  018C                     	;# 
   510  018E                     	;# 
   511  0191                     	;# 
   512  0191                     	;# 
   513  0192                     	;# 
   514  0193                     	;# 
   515  0193                     	;# 
   516  0194                     	;# 
   517  0195                     	;# 
   518  0196                     	;# 
   519  0197                     	;# 
   520  0199                     	;# 
   521  019A                     	;# 
   522  019B                     	;# 
   523  019B                     	;# 
   524  019C                     	;# 
   525  019D                     	;# 
   526  019E                     	;# 
   527  019F                     	;# 
   528  020C                     	;# 
   529  0211                     	;# 
   530  0211                     	;# 
   531  0212                     	;# 
   532  0212                     	;# 
   533  0213                     	;# 
   534  0213                     	;# 
   535  0214                     	;# 
   536  0214                     	;# 
   537  0215                     	;# 
   538  0215                     	;# 
   539  0215                     	;# 
   540  0216                     	;# 
   541  0216                     	;# 
   542  0217                     	;# 
   543  0217                     	;# 
   544  0391                     	;# 
   545  0392                     	;# 
   546  0393                     	;# 
   547  039A                     	;# 
   548  039B                     	;# 
   549  0611                     	;# 
   550  0612                     	;# 
   551  0613                     	;# 
   552  0613                     	;# 
   553  0614                     	;# 
   554  0615                     	;# 
   555  0616                     	;# 
   556  0616                     	;# 
   557  0E8E                     	;# 
   558  0E8F                     	;# 
   559  0E90                     	;# 
   560  0E91                     	;# 
   561  0E92                     	;# 
   562  0E93                     	;# 
   563  0E94                     	;# 
   564  0E94                     	;# 
   565  0E95                     	;# 
   566  0E96                     	;# 
   567  0E97                     	;# 
   568  0E98                     	;# 
   569  0E99                     	;# 
   570  0E9A                     	;# 
   571  0E9B                     	;# 
   572  0E9C                     	;# 
   573  0E9D                     	;# 
   574  0E9E                     	;# 
   575  0E9F                     	;# 
   576  0FE4                     	;# 
   577  0FE5                     	;# 
   578  0FE6                     	;# 
   579  0FE7                     	;# 
   580  0FE8                     	;# 
   581  0FE9                     	;# 
   582  0FEA                     	;# 
   583  0FEB                     	;# 
   584  0FED                     	;# 
   585  0FEE                     	;# 
   586  0FEF                     	;# 
   587                           
   588                           	psect	stringtext1
   589  10BD                     __pstringtext1:	
   590  10BD                     _USB_SD_Ptr:	
   591  10BD  34C3               	retlw	low (_sd000| (0+32768))
   592  10BE  3490               	retlw	high (_sd000| (0+32768))
   593  10BF  3477               	retlw	low (_sd001| (0+32768))
   594  10C0  3490               	retlw	high (_sd001| (0+32768))
   595  10C1  3443               	retlw	low (_sd002| (0+32768))
   596  10C2  3490               	retlw	high (_sd002| (0+32768))
   597  10C3                     __end_of_USB_SD_Ptr:	
   598                           
   599                           	psect	stringtext2
   600  10C7                     __pstringtext2:	
   601  10C7                     _USB_CD_Ptr:	
   602  10C7  3400               	retlw	low (_configDescriptor1| (0+32768))
   603  10C8  3490               	retlw	high (_configDescriptor1| (0+32768))
   604  10C9                     __end_of_USB_CD_Ptr:	
   605                           
   606                           	psect	stringtext3
   607  1000                     __pstringtext3:	
   608  1000                     _configDescriptor1:	
   609  1000  3409               	retlw	9
   610  1001  3402               	retlw	2
   611  1002  3443               	retlw	67
   612  1003  3400               	retlw	0
   613  1004  3402               	retlw	2
   614  1005  3401               	retlw	1
   615  1006  3400               	retlw	0
   616  1007  34C0               	retlw	192
   617  1008  3432               	retlw	50
   618  1009  3409               	retlw	9
   619  100A  3404               	retlw	4
   620  100B  3400               	retlw	0
   621  100C  3400               	retlw	0
   622  100D  3401               	retlw	1
   623  100E  3402               	retlw	2
   624  100F  3402               	retlw	2
   625  1010  3401               	retlw	1
   626  1011  3400               	retlw	0
   627  1012  3405               	retlw	5
   628  1013  3424               	retlw	36
   629  1014  3400               	retlw	0
   630  1015  3410               	retlw	16
   631  1016  3401               	retlw	1
   632  1017  3404               	retlw	4
   633  1018  3424               	retlw	36
   634  1019  3402               	retlw	2
   635  101A  3402               	retlw	2
   636  101B  3405               	retlw	5
   637  101C  3424               	retlw	36
   638  101D  3406               	retlw	6
   639  101E  3400               	retlw	0
   640  101F  3401               	retlw	1
   641  1020  3405               	retlw	5
   642  1021  3424               	retlw	36
   643  1022  3401               	retlw	1
   644  1023  3400               	retlw	0
   645  1024  3401               	retlw	1
   646  1025  3407               	retlw	7
   647  1026  3405               	retlw	5
   648  1027  3481               	retlw	129
   649  1028  3403               	retlw	3
   650  1029  340A               	retlw	10
   651  102A  3400               	retlw	0
   652  102B  3401               	retlw	1
   653  102C  3409               	retlw	9
   654  102D  3404               	retlw	4
   655  102E  3401               	retlw	1
   656  102F  3400               	retlw	0
   657  1030  3402               	retlw	2
   658  1031  340A               	retlw	10
   659  1032  3400               	retlw	0
   660  1033  3400               	retlw	0
   661  1034  3400               	retlw	0
   662  1035  3407               	retlw	7
   663  1036  3405               	retlw	5
   664  1037  3402               	retlw	2
   665  1038  3402               	retlw	2
   666  1039  3440               	retlw	64
   667  103A  3400               	retlw	0
   668  103B  3400               	retlw	0
   669  103C  3407               	retlw	7
   670  103D  3405               	retlw	5
   671  103E  3482               	retlw	130
   672  103F  3402               	retlw	2
   673  1040  3440               	retlw	64
   674  1041  3400               	retlw	0
   675  1042  3400               	retlw	0
   676  1043                     __end_of_configDescriptor1:	
   677                           
   678                           	psect	stringtext4
   679  1043                     __pstringtext4:	
   680  1043                     _sd002:	
   681  1043  3434               	retlw	52
   682  1044  3403               	retlw	3
   683  1045  3443               	retlw	67
   684  1046  3400               	retlw	0
   685  1047  3444               	retlw	68
   686  1048  3400               	retlw	0
   687  1049  3443               	retlw	67
   688  104A  3400               	retlw	0
   689  104B  3420               	retlw	32
   690  104C  3400               	retlw	0
   691  104D  3452               	retlw	82
   692  104E  3400               	retlw	0
   693  104F  3453               	retlw	83
   694  1050  3400               	retlw	0
   695  1051  342D               	retlw	45
   696  1052  3400               	retlw	0
   697  1053  3432               	retlw	50
   698  1054  3400               	retlw	0
   699  1055  3433               	retlw	51
   700  1056  3400               	retlw	0
   701  1057  3432               	retlw	50
   702  1058  3400               	retlw	0
   703  1059  3420               	retlw	32
   704  105A  3400               	retlw	0
   705  105B  3445               	retlw	69
   706  105C  3400               	retlw	0
   707  105D  346D               	retlw	109
   708  105E  3400               	retlw	0
   709  105F  3475               	retlw	117
   710  1060  3400               	retlw	0
   711  1061  346C               	retlw	108
   712  1062  3400               	retlw	0
   713  1063  3461               	retlw	97
   714  1064  3400               	retlw	0
   715  1065  3474               	retlw	116
   716  1066  3400               	retlw	0
   717  1067  3469               	retlw	105
   718  1068  3400               	retlw	0
   719  1069  346F               	retlw	111
   720  106A  3400               	retlw	0
   721  106B  346E               	retlw	110
   722  106C  3400               	retlw	0
   723  106D  3420               	retlw	32
   724  106E  3400               	retlw	0
   725  106F  3444               	retlw	68
   726  1070  3400               	retlw	0
   727  1071  3465               	retlw	101
   728  1072  3400               	retlw	0
   729  1073  346D               	retlw	109
   730  1074  3400               	retlw	0
   731  1075  346F               	retlw	111
   732  1076  3400               	retlw	0
   733  1077                     __end_of_sd002:	
   734                           
   735                           	psect	stringtext5
   736  1077                     __pstringtext5:	
   737  1077                     _sd001:	
   738  1077  3434               	retlw	52
   739  1078  3403               	retlw	3
   740  1079  344D               	retlw	77
   741  107A  3400               	retlw	0
   742  107B  3469               	retlw	105
   743  107C  3400               	retlw	0
   744  107D  3463               	retlw	99
   745  107E  3400               	retlw	0
   746  107F  3472               	retlw	114
   747  1080  3400               	retlw	0
   748  1081  346F               	retlw	111
   749  1082  3400               	retlw	0
   750  1083  3463               	retlw	99
   751  1084  3400               	retlw	0
   752  1085  3468               	retlw	104
   753  1086  3400               	retlw	0
   754  1087  3469               	retlw	105
   755  1088  3400               	retlw	0
   756  1089  3470               	retlw	112
   757  108A  3400               	retlw	0
   758  108B  3420               	retlw	32
   759  108C  3400               	retlw	0
   760  108D  3454               	retlw	84
   761  108E  3400               	retlw	0
   762  108F  3465               	retlw	101
   763  1090  3400               	retlw	0
   764  1091  3463               	retlw	99
   765  1092  3400               	retlw	0
   766  1093  3468               	retlw	104
   767  1094  3400               	retlw	0
   768  1095  346E               	retlw	110
   769  1096  3400               	retlw	0
   770  1097  346F               	retlw	111
   771  1098  3400               	retlw	0
   772  1099  346C               	retlw	108
   773  109A  3400               	retlw	0
   774  109B  346F               	retlw	111
   775  109C  3400               	retlw	0
   776  109D  3467               	retlw	103
   777  109E  3400               	retlw	0
   778  109F  3479               	retlw	121
   779  10A0  3400               	retlw	0
   780  10A1  3420               	retlw	32
   781  10A2  3400               	retlw	0
   782  10A3  3449               	retlw	73
   783  10A4  3400               	retlw	0
   784  10A5  346E               	retlw	110
   785  10A6  3400               	retlw	0
   786  10A7  3463               	retlw	99
   787  10A8  3400               	retlw	0
   788  10A9  342E               	retlw	46
   789  10AA  3400               	retlw	0
   790  10AB                     __end_of_sd001:	
   791                           
   792                           	psect	stringtext6
   793  10AB                     __pstringtext6:	
   794  10AB                     _device_dsc:	
   795  10AB  3412               	retlw	18
   796  10AC  3401               	retlw	1
   797  10AD  3400               	retlw	0
   798  10AE  3402               	retlw	2
   799  10AF  3402               	retlw	2
   800  10B0  3400               	retlw	0
   801  10B1  3400               	retlw	0
   802  10B2  3408               	retlw	8
   803  10B3  34D8               	retlw	216
   804  10B4  3404               	retlw	4
   805  10B5  340A               	retlw	10
   806  10B6  3400               	retlw	0
   807  10B7  3400               	retlw	0
   808  10B8  3401               	retlw	1
   809  10B9  3401               	retlw	1
   810  10BA  3402               	retlw	2
   811  10BB  3400               	retlw	0
   812  10BC  3401               	retlw	1
   813  10BD                     __end_of_device_dsc:	
   814                           
   815                           	psect	stringtext7
   816  10C3                     __pstringtext7:	
   817  10C3                     _sd000:	
   818  10C3  3404               	retlw	4
   819  10C4  3403               	retlw	3
   820  10C5  3409               	retlw	9
   821  10C6  3404               	retlw	4
   822  10C7                     __end_of_sd000:	
   823  0011                     _PIR1bits	set	17
   824  000B                     _INTCONbits	set	11
   825  0012                     _PIR2bits	set	18
   826  008E                     _TRISC	set	142
   827  0099                     _OSCCON	set	153
   828  0098                     _OSCTUNE	set	152
   829  008E                     _TRISCbits	set	142
   830  0092                     _PIE2bits	set	146
   831  010E                     _LATC	set	270
   832  010E                     _LATCbits	set	270
   833  019E                     _TXSTAbits	set	414
   834  019D                     _RCSTAbits	set	413
   835  019A                     _TXREG	set	410
   836  0199                     _RCREG	set	409
   837  019F                     _BAUDCON	set	415
   838  019C                     _SPBRGH	set	412
   839  019B                     _SPBRGL	set	411
   840  019D                     _RCSTA	set	413
   841  019E                     _TXSTA	set	414
   842  018E                     _ANSELC	set	398
   843  018C                     _ANSELA	set	396
   844  039B                     _ACTCON	set	923
   845  0E98                     _UEP0bits	set	3736
   846  0E8E                     _UCON	set	3726
   847  0E8F                     _USTAT	set	3727
   848  0E92                     _UIEbits	set	3730
   849  0E90                     _UIRbits	set	3728
   850  0E96                     _UADDR	set	3734
   851  0E8E                     _UCONbits	set	3726
   852  0E92                     _UIE	set	3730
   853  0E97                     _UEIE	set	3735
   854  0E91                     _UCFG	set	3729
   855  0E90                     _UIR	set	3728
   856  0E93                     _UEIR	set	3731
   857  0E99                     _UEP1	set	3737
   858  0E98                     _UEP0	set	3736
   859                           
   860                           ; #config settings
   861  0000                     
   862                           	psect	cinit
   863  0014                     start_initialization:	
   864  0014                     __initialization:	
   865                           
   866                           ; Clear objects allocated to BANK1
   867  0014  30A0               	movlw	low __pbssBANK1
   868  0015  0084               	movwf	4
   869  0016  3000               	movlw	high __pbssBANK1
   870  0017  0085               	movwf	5
   871  0018  3038               	movlw	56
   872  0019  3187  27FA  3180   	fcall	clear_ram0
   873                           
   874                           ; Clear objects allocated to BANK2
   875  001C  3031               	movlw	low __pbssBANK2
   876  001D  0084               	movwf	4
   877  001E  3001               	movlw	high __pbssBANK2
   878  001F  0085               	movwf	5
   879  0020  3016               	movlw	22
   880  0021  3187  27FA  3180   	fcall	clear_ram0
   881                           
   882                           ; Clear objects allocated to BANK3
   883  0024  30A0               	movlw	low __pbssBANK3
   884  0025  0084               	movwf	4
   885  0026  3001               	movlw	high __pbssBANK3
   886  0027  0085               	movwf	5
   887  0028  3040               	movlw	64
   888  0029  3187  27FA  3180   	fcall	clear_ram0
   889                           
   890                           ; Clear objects allocated to BANK6
   891  002C  3020               	movlw	low __pbssBANK6
   892  002D  0084               	movwf	4
   893  002E  3003               	movlw	high __pbssBANK6
   894  002F  0085               	movwf	5
   895  0030  3040               	movlw	64
   896  0031  3187  27FA         	fcall	clear_ram0
   897  0033                     end_of_initialization:	
   898                           ;End of C runtime variable initialization code
   899                           
   900  0033                     __end_of__initialization:	
   901  0033  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   902  0034  0020               	movlb	0
   903  0035  3189  29C5         	ljmp	_main	;jump to C main() function
   904                           
   905                           	psect	bssBANK1
   906  00A0                     __pbssBANK1:	
   907  00A0                     _outPipes:	
   908  00A0                     	ds	7
   909  00A7                     _inPipes:	
   910  00A7                     	ds	5
   911  00AC                     _ep_data_out:	
   912  00AC                     	ds	3
   913  00AF                     _ep_data_in:	
   914  00AF                     	ds	3
   915  00B2                     _pBDTEntryIn:	
   916  00B2                     	ds	3
   917  00B5                     BlinkUSBStatus@led_count:	
   918  00B5                     	ds	2
   919  00B7                     _receiving:	
   920  00B7                     	ds	1
   921  00B8                     _sending:	
   922  00B8                     	ds	1
   923  00B9                     _RS232_Out_Data_Rdy:	
   924  00B9                     	ds	1
   925  00BA                     _RS232cp:	
   926  00BA                     	ds	1
   927  00BB                     _LastRS232Out:	
   928  00BB                     	ds	1
   929  00BC                     _NextUSBOut:	
   930  00BC                     	ds	1
   931  00BD                     _control_signal_bitmap:	
   932  00BD                     	ds	1
   933  00BE                     _CDCDataInHandle:	
   934  00BE                     	ds	1
   935  00BF                     _CDCDataOutHandle:	
   936  00BF                     	ds	1
   937  00C0                     _cdc_mem_type:	
   938  00C0                     	ds	1
   939  00C1                     _cdc_tx_len:	
   940  00C1                     	ds	1
   941  00C2                     _cdc_trf_state:	
   942  00C2                     	ds	1
   943  00C3                     _cdc_rx_len:	
   944  00C3                     	ds	1
   945  00C4                     _USBDeferOUTDataStagePackets:	
   946  00C4                     	ds	1
   947  00C5                     _USBDeferINDataStagePackets:	
   948  00C5                     	ds	1
   949  00C6                     _USBStatusStageEnabledFlag2:	
   950  00C6                     	ds	1
   951  00C7                     _USBStatusStageEnabledFlag1:	
   952  00C7                     	ds	1
   953  00C8                     _USBDeferStatusStagePacket:	
   954  00C8                     	ds	1
   955  00C9                     _USBStatusStageTimeoutCounter:	
   956  00C9                     	ds	1
   957  00CA                     _BothEP0OutUOWNsSet:	
   958  00CA                     	ds	1
   959  00CB                     _endpoint_number:	
   960  00CB                     	ds	1
   961  00CC                     _USBBusIsSuspended:	
   962  00CC                     	ds	1
   963  00CD                     _RemoteWakeup:	
   964  00CD                     	ds	1
   965  00CE                     _pDst:	
   966  00CE                     	ds	1
   967  00CF                     _controlTransferState:	
   968  00CF                     	ds	1
   969  00D0                     _shortPacketStatus:	
   970  00D0                     	ds	1
   971  00D1                     _pBDTEntryEP0OutNext:	
   972  00D1                     	ds	1
   973  00D2                     _pBDTEntryEP0OutCurrent:	
   974  00D2                     	ds	1
   975  00D3                     _USBDeviceState:	
   976  00D3                     	ds	1
   977  00D4                     _USBAlternateInterface:	
   978  00D4                     	ds	2
   979  00D6                     _USTATcopy:	
   980  00D6                     	ds	1
   981  00D7                     _USBActiveConfiguration:	
   982  00D7                     	ds	1
   983                           
   984                           	psect	bssBANK2
   985  0131                     __pbssBANK2:	
   986  0131                     _BaudRateGen:	
   987  0131                     	ds	4
   988  0135                     _pBDTEntryOut:	
   989  0135                     	ds	3
   990  0138                     USBCBSendResume@delay_count:	
   991  0138                     	ds	2
   992  013A                     _pCDCDst:	
   993  013A                     	ds	2
   994  013C                     _pCDCSrc:	
   995  013C                     	ds	2
   996  013E                     _lastTransmission:	
   997  013E                     	ds	1
   998  013F                     _dummy_encapsulated_cmd_response:	
   999  013F                     	ds	8
  1000                           
  1001                           	psect	bssBANK3
  1002  01A0                     __pbssBANK3:	
  1003  01A0                     _USB_Out_Buffer:	
  1004  01A0                     	ds	64
  1005                           
  1006                           	psect	bssBANK6
  1007  0320                     __pbssBANK6:	
  1008  0320                     _RS232_Out_Data:	
  1009  0320                     	ds	64
  1010                           
  1011                           	psect	clrtext
  1012  07FA                     clear_ram0:	
  1013                           ;	Called with FSR0 containing the base address, and
  1014                           ;	WREG with the size to clear
  1015                           
  1016  07FA  0064               	clrwdt	;clear the watchdog before getting into this loop
  1017  07FB                     clrloop0:	
  1018  07FB  0180               	clrf	0	;clear RAM location pointed to by FSR
  1019  07FC  3101               	addfsr 0,1
  1020  07FD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1021  07FE  2FFB               	goto	clrloop0	;have we reached the end yet?
  1022  07FF  3400               	retlw	0	;all done for this memory range, return
  1023                           
  1024                           	psect	cstackBANK2
  1025  0147                     __pcstackBANK2:	
  1026  0147                     ??_getsUSBUSART:	
  1027  0147                     ??_CDCTxService:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030                           
  1031                           ; 1 bytes @ 0x0
  1032  0147                     	ds	3
  1033  014A                     getsUSBUSART@buffer:	
  1034  014A                     _CDCTxService$3262:	
  1035                           ; 1 bytes @ 0x3
  1036                           
  1037                           
  1038                           ; 2 bytes @ 0x3
  1039  014A                     	ds	1
  1040  014B                     _getsUSBUSART$3214:	
  1041                           
  1042                           ; 2 bytes @ 0x4
  1043  014B                     	ds	1
  1044  014C                     CDCTxService@i:	
  1045                           
  1046                           ; 1 bytes @ 0x5
  1047  014C                     	ds	1
  1048  014D                     CDCTxService@byte_to_send:	
  1049                           
  1050                           ; 1 bytes @ 0x6
  1051  014D                     	ds	1
  1052  014E                     ??_ProcessIO:	
  1053                           
  1054                           ; 1 bytes @ 0x7
  1055  014E                     	ds	2
  1056                           
  1057                           	psect	cstackBANK1
  1058  00D8                     __pcstackBANK1:	
  1059  00D8                     ??_USBCtrlEPService:	
  1060                           
  1061                           ; 1 bytes @ 0x0
  1062  00D8                     	ds	3
  1063  00DB                     USBCtrlEPService@setup_cnt:	
  1064                           
  1065                           ; 1 bytes @ 0x3
  1066  00DB                     	ds	1
  1067  00DC                     ??_USBDeviceTasks:	
  1068                           
  1069                           ; 1 bytes @ 0x4
  1070  00DC                     	ds	2
  1071  00DE                     USBDeviceTasks@i:	
  1072                           
  1073                           ; 1 bytes @ 0x6
  1074  00DE                     	ds	1
  1075  00DF                     ??_ISRCode:	
  1076                           
  1077                           ; 1 bytes @ 0x7
  1078  00DF                     	ds	1
  1079  00E0                     ?_USBTransferOnePacket:	
  1080  00E0                     ??_InitializeUSART:	
  1081                           ; 1 bytes @ 0x8
  1082                           
  1083  00E0                     ??_BlinkUSBStatus:	
  1084                           ; 1 bytes @ 0x8
  1085                           
  1086  00E0                     ??_USBDeviceInit:	
  1087                           ; 1 bytes @ 0x8
  1088                           
  1089  00E0                     ??_USBDeviceAttach:	
  1090                           ; 1 bytes @ 0x8
  1091                           
  1092  00E0                     ?_putUSBUSART:	
  1093                           ; 1 bytes @ 0x8
  1094                           
  1095  00E0                     ??_putcUSART:	
  1096                           ; 1 bytes @ 0x8
  1097                           
  1098  00E0                     ??_getcUSART:	
  1099                           ; 1 bytes @ 0x8
  1100                           
  1101  00E0                     USBTransferOnePacket@dir:	
  1102                           ; 1 bytes @ 0x8
  1103                           
  1104  00E0                     putUSBUSART@length:	
  1105                           ; 1 bytes @ 0x8
  1106                           
  1107  00E0                     putcUSART@c:	
  1108                           ; 1 bytes @ 0x8
  1109                           
  1110                           
  1111                           ; 1 bytes @ 0x8
  1112  00E0                     	ds	1
  1113  00E1                     ??_putUSBUSART:	
  1114  00E1                     USBTransferOnePacket@data:	
  1115                           ; 1 bytes @ 0x9
  1116                           
  1117  00E1                     InitializeUSART@c:	
  1118                           ; 1 bytes @ 0x9
  1119                           
  1120  00E1                     getcUSART@c:	
  1121                           ; 1 bytes @ 0x9
  1122                           
  1123  00E1                     USBDeviceInit@p:	
  1124                           ; 1 bytes @ 0x9
  1125                           
  1126                           
  1127                           ; 2 bytes @ 0x9
  1128  00E1                     	ds	1
  1129  00E2                     ??_UserInit:	
  1130  00E2                     USBTransferOnePacket@len:	
  1131                           ; 1 bytes @ 0xA
  1132                           
  1133  00E2                     putUSBUSART@data:	
  1134                           ; 1 bytes @ 0xA
  1135                           
  1136                           
  1137                           ; 1 bytes @ 0xA
  1138  00E2                     	ds	1
  1139  00E3                     ??_USBTransferOnePacket:	
  1140  00E3                     USBDeviceInit@i_740:	
  1141                           ; 1 bytes @ 0xB
  1142                           
  1143  00E3                     UserInit@i:	
  1144                           ; 1 bytes @ 0xB
  1145                           
  1146                           
  1147                           ; 1 bytes @ 0xB
  1148  00E3                     	ds	1
  1149  00E4                     USBDeviceInit@i:	
  1150                           
  1151                           ; 1 bytes @ 0xC
  1152  00E4                     	ds	1
  1153  00E5                     ??_InitializeSystem:	
  1154  00E5                     USBTransferOnePacket@ep:	
  1155                           ; 1 bytes @ 0xD
  1156                           
  1157                           
  1158                           ; 1 bytes @ 0xD
  1159  00E5                     	ds	1
  1160  00E6                     USBTransferOnePacket@handle:	
  1161                           
  1162                           ; 1 bytes @ 0xE
  1163  00E6                     	ds	1
  1164  00E7                     ?_getsUSBUSART:	
  1165  00E7                     getsUSBUSART@len:	
  1166                           ; 1 bytes @ 0xF
  1167                           
  1168                           
  1169                           ; 1 bytes @ 0xF
  1170  00E7                     	ds	1
  1171  00E8                     ??_main:	
  1172                           
  1173                           	psect	cstackCOMMON
  1174  0070                     __pcstackCOMMON:	
  1175                           ; 1 bytes @ 0x10
  1176                           
  1177  0070                     ?_USBWakeFromSuspend:	
  1178  0070                     ?_USBSuspend:	
  1179                           ; 1 bytes @ 0x0
  1180                           
  1181  0070                     ?_USBCtrlEPAllowStatusStage:	
  1182                           ; 1 bytes @ 0x0
  1183                           
  1184  0070                     ??_USBCtrlEPAllowStatusStage:	
  1185                           ; 1 bytes @ 0x0
  1186                           
  1187  0070                     ?_USBStallHandler:	
  1188                           ; 1 bytes @ 0x0
  1189                           
  1190  0070                     ??_USBStallHandler:	
  1191                           ; 1 bytes @ 0x0
  1192                           
  1193  0070                     ?_USBCtrlEPService:	
  1194                           ; 1 bytes @ 0x0
  1195                           
  1196  0070                     ?_USBConfigureEndpoint:	
  1197                           ; 1 bytes @ 0x0
  1198                           
  1199  0070                     ?_USBCtrlTrfTxService:	
  1200                           ; 1 bytes @ 0x0
  1201                           
  1202  0070                     ??_USBCtrlTrfTxService:	
  1203                           ; 1 bytes @ 0x0
  1204                           
  1205  0070                     ?_memset:	
  1206                           ; 1 bytes @ 0x0
  1207                           
  1208  0070                     ?_USBCtrlTrfSetupHandler:	
  1209                           ; 1 bytes @ 0x0
  1210                           
  1211  0070                     ?_USBCtrlTrfOutHandler:	
  1212                           ; 1 bytes @ 0x0
  1213                           
  1214  0070                     ?_USBCtrlTrfInHandler:	
  1215                           ; 1 bytes @ 0x0
  1216                           
  1217  0070                     ?_USBCheckStdRequest:	
  1218                           ; 1 bytes @ 0x0
  1219                           
  1220  0070                     ?_USBStdFeatureReqHandler:	
  1221                           ; 1 bytes @ 0x0
  1222                           
  1223  0070                     ?_mySetLineCodingHandler:	
  1224                           ; 1 bytes @ 0x0
  1225                           
  1226  0070                     ?_InitializeSystem:	
  1227                           ; 1 bytes @ 0x0
  1228                           
  1229  0070                     ?_ProcessIO:	
  1230                           ; 1 bytes @ 0x0
  1231                           
  1232  0070                     ?_UserInit:	
  1233                           ; 1 bytes @ 0x0
  1234                           
  1235  0070                     ?_InitializeUSART:	
  1236                           ; 1 bytes @ 0x0
  1237                           
  1238  0070                     ?_BlinkUSBStatus:	
  1239                           ; 1 bytes @ 0x0
  1240                           
  1241  0070                     ?_USBDeviceInit:	
  1242                           ; 1 bytes @ 0x0
  1243                           
  1244  0070                     ?_USBDeviceTasks:	
  1245                           ; 1 bytes @ 0x0
  1246                           
  1247  0070                     ?_USBDeviceAttach:	
  1248                           ; 1 bytes @ 0x0
  1249                           
  1250  0070                     ?_USBCtrlEPAllowDataStage:	
  1251                           ; 1 bytes @ 0x0
  1252                           
  1253  0070                     ?_USBCtrlEPServiceComplete:	
  1254                           ; 1 bytes @ 0x0
  1255                           
  1256  0070                     ?_USBCtrlTrfRxService:	
  1257                           ; 1 bytes @ 0x0
  1258                           
  1259  0070                     ?_USBStdSetCfgHandler:	
  1260                           ; 1 bytes @ 0x0
  1261                           
  1262  0070                     ?_USBStdGetDscHandler:	
  1263                           ; 1 bytes @ 0x0
  1264                           
  1265  0070                     ??_USBStdGetDscHandler:	
  1266                           ; 1 bytes @ 0x0
  1267                           
  1268  0070                     ?_USBStdGetStatusHandler:	
  1269                           ; 1 bytes @ 0x0
  1270                           
  1271  0070                     ??_USBStdGetStatusHandler:	
  1272                           ; 1 bytes @ 0x0
  1273                           
  1274  0070                     ?_USBCheckCDCRequest:	
  1275                           ; 1 bytes @ 0x0
  1276                           
  1277  0070                     ??_USBCheckCDCRequest:	
  1278                           ; 1 bytes @ 0x0
  1279                           
  1280  0070                     ?_CDCInitEP:	
  1281                           ; 1 bytes @ 0x0
  1282                           
  1283  0070                     ?_CDCTxService:	
  1284                           ; 1 bytes @ 0x0
  1285                           
  1286  0070                     ?_ISRCode:	
  1287                           ; 1 bytes @ 0x0
  1288                           
  1289  0070                     ?_putcUSART:	
  1290                           ; 1 bytes @ 0x0
  1291                           
  1292  0070                     ?_getcUSART:	
  1293                           ; 1 bytes @ 0x0
  1294                           
  1295  0070                     ?_USBCBSuspend:	
  1296                           ; 1 bytes @ 0x0
  1297                           
  1298  0070                     ??_USBCBSuspend:	
  1299                           ; 1 bytes @ 0x0
  1300                           
  1301  0070                     ?_USBCBWakeFromSuspend:	
  1302                           ; 1 bytes @ 0x0
  1303                           
  1304  0070                     ??_USBCBWakeFromSuspend:	
  1305                           ; 1 bytes @ 0x0
  1306                           
  1307  0070                     ?_USBCB_SOF_Handler:	
  1308                           ; 1 bytes @ 0x0
  1309                           
  1310  0070                     ??_USBCB_SOF_Handler:	
  1311                           ; 1 bytes @ 0x0
  1312                           
  1313  0070                     ?_USBCBErrorHandler:	
  1314                           ; 1 bytes @ 0x0
  1315                           
  1316  0070                     ??_USBCBErrorHandler:	
  1317                           ; 1 bytes @ 0x0
  1318                           
  1319  0070                     ?_USBCBCheckOtherReq:	
  1320                           ; 1 bytes @ 0x0
  1321                           
  1322  0070                     ?_USBCBStdSetDscHandler:	
  1323                           ; 1 bytes @ 0x0
  1324                           
  1325  0070                     ??_USBCBStdSetDscHandler:	
  1326                           ; 1 bytes @ 0x0
  1327                           
  1328  0070                     ?_USBCBInitEP:	
  1329                           ; 1 bytes @ 0x0
  1330                           
  1331  0070                     ?i1_USBDeviceInit:	
  1332                           ; 1 bytes @ 0x0
  1333                           
  1334  0070                     ??i1_USBDeviceInit:	
  1335                           ; 1 bytes @ 0x0
  1336                           
  1337  0070                     ?i1_USBTransferOnePacket:	
  1338                           ; 1 bytes @ 0x0
  1339                           
  1340  0070                     ?_main:	
  1341                           ; 1 bytes @ 0x0
  1342                           
  1343  0070                     ?___lldiv:	
  1344                           ; 2 bytes @ 0x0
  1345                           
  1346  0070                     USBConfigureEndpoint@direction:	
  1347                           ; 4 bytes @ 0x0
  1348                           
  1349  0070                     i1USBTransferOnePacket@dir:	
  1350                           ; 1 bytes @ 0x0
  1351                           
  1352  0070                     memset@c:	
  1353                           ; 1 bytes @ 0x0
  1354                           
  1355  0070                     ___lldiv@divisor:	
  1356                           ; 2 bytes @ 0x0
  1357                           
  1358                           
  1359                           ; 4 bytes @ 0x0
  1360  0070                     	ds	1
  1361  0071                     ??_USBConfigureEndpoint:	
  1362  0071                     ??_USBCBCheckOtherReq:	
  1363                           ; 1 bytes @ 0x1
  1364                           
  1365  0071                     USBStdGetStatusHandler@p:	
  1366                           ; 1 bytes @ 0x1
  1367                           
  1368  0071                     i1USBTransferOnePacket@data:	
  1369                           ; 1 bytes @ 0x1
  1370                           
  1371  0071                     i1USBDeviceInit@p:	
  1372                           ; 1 bytes @ 0x1
  1373                           
  1374                           
  1375                           ; 2 bytes @ 0x1
  1376  0071                     	ds	1
  1377  0072                     i1USBTransferOnePacket@len:	
  1378  0072                     memset@n:	
  1379                           ; 1 bytes @ 0x2
  1380                           
  1381                           
  1382                           ; 2 bytes @ 0x2
  1383  0072                     	ds	1
  1384  0073                     ??i1_USBTransferOnePacket:	
  1385  0073                     i1USBDeviceInit@i_740:	
  1386                           ; 1 bytes @ 0x3
  1387                           
  1388                           
  1389                           ; 1 bytes @ 0x3
  1390  0073                     	ds	1
  1391  0074                     ??_memset:	
  1392  0074                     USBCtrlTrfTxService@byteToSend:	
  1393                           ; 1 bytes @ 0x4
  1394                           
  1395  0074                     i1USBDeviceInit@i:	
  1396                           ; 1 bytes @ 0x4
  1397                           
  1398  0074                     ___lldiv@dividend:	
  1399                           ; 1 bytes @ 0x4
  1400                           
  1401                           
  1402                           ; 4 bytes @ 0x4
  1403  0074                     	ds	1
  1404  0075                     ??_USBCtrlEPAllowDataStage:	
  1405  0075                     USBConfigureEndpoint@EPNum:	
  1406                           ; 1 bytes @ 0x5
  1407                           
  1408  0075                     memset@p:	
  1409                           ; 1 bytes @ 0x5
  1410                           
  1411  0075                     i1USBTransferOnePacket@ep:	
  1412                           ; 1 bytes @ 0x5
  1413                           
  1414                           
  1415                           ; 1 bytes @ 0x5
  1416  0075                     	ds	1
  1417  0076                     USBConfigureEndpoint@handle:	
  1418  0076                     memset@p1:	
  1419                           ; 1 bytes @ 0x6
  1420                           
  1421  0076                     i1USBTransferOnePacket@handle:	
  1422                           ; 1 bytes @ 0x6
  1423                           
  1424                           
  1425                           ; 1 bytes @ 0x6
  1426  0076                     	ds	1
  1427  0077                     ?_USBEnableEndpoint:	
  1428  0077                     ??_USBCtrlEPServiceComplete:	
  1429                           ; 1 bytes @ 0x7
  1430                           
  1431  0077                     USBEnableEndpoint@options:	
  1432                           ; 1 bytes @ 0x7
  1433                           
  1434                           
  1435                           ; 1 bytes @ 0x7
  1436  0077                     	ds	1
  1437  0078                     ??_USBEnableEndpoint:	
  1438  0078                     ??___lldiv:	
  1439                           ; 1 bytes @ 0x8
  1440                           
  1441                           
  1442                           ; 1 bytes @ 0x8
  1443  0078                     	ds	1
  1444  0079                     ___lldiv@quotient:	
  1445                           
  1446                           ; 4 bytes @ 0x9
  1447  0079                     	ds	1
  1448  007A                     USBEnableEndpoint@p:	
  1449                           
  1450                           ; 2 bytes @ 0xA
  1451  007A                     	ds	2
  1452  007C                     USBEnableEndpoint@ep:	
  1453                           
  1454                           ; 1 bytes @ 0xC
  1455  007C                     	ds	1
  1456  007D                     ??_USBWakeFromSuspend:	
  1457  007D                     ??_USBSuspend:	
  1458                           ; 1 bytes @ 0xD
  1459                           
  1460  007D                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  1461                           ; 1 bytes @ 0xD
  1462                           
  1463  007D                     ??_USBStdSetCfgHandler:	
  1464                           ; 1 bytes @ 0xD
  1465                           
  1466  007D                     ??_USBCBInitEP:	
  1467                           ; 1 bytes @ 0xD
  1468                           
  1469  007D                     ___lldiv@counter:	
  1470                           ; 1 bytes @ 0xD
  1471                           
  1472                           
  1473                           ; 1 bytes @ 0xD
  1474  007D                     	ds	1
  1475  007E                     ??_mySetLineCodingHandler:	
  1476                           
  1477                           	psect	cstackBANK0
  1478  0060                     __pcstackBANK0:	
  1479                           ; 1 bytes @ 0xE
  1480                           
  1481  0060                     ??_CDCInitEP:	
  1482  0060                     mySetLineCodingHandler@dwBaud:	
  1483                           ; 1 bytes @ 0x0
  1484                           
  1485                           
  1486                           ; 4 bytes @ 0x0
  1487  0060                     	ds	3
  1488  0063                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  1489  0063                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  1490                           ; 1 bytes @ 0x3
  1491                           
  1492                           
  1493                           ; 2 bytes @ 0x3
  1494  0063                     	ds	1
  1495  0064                     ??_USBCtrlTrfInHandler:	
  1496  0064                     ??_USBCtrlTrfRxService:	
  1497                           ; 1 bytes @ 0x4
  1498                           
  1499                           
  1500                           ; 1 bytes @ 0x4
  1501  0064                     	ds	1
  1502  0065                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  1503                           
  1504                           ; 1 bytes @ 0x5
  1505  0065                     	ds	1
  1506  0066                     USBCtrlTrfInHandler@lastDTS:	
  1507  0066                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  1508                           ; 1 bytes @ 0x6
  1509                           
  1510                           
  1511                           ; 2 bytes @ 0x6
  1512  0066                     	ds	2
  1513  0068                     ??_USBStdFeatureReqHandler:	
  1514  0068                     USBCtrlTrfRxService@i:	
  1515                           ; 1 bytes @ 0x8
  1516                           
  1517  0068                     USBStdSetCfgHandler@p:	
  1518                           ; 1 bytes @ 0x8
  1519                           
  1520                           
  1521                           ; 2 bytes @ 0x8
  1522  0068                     	ds	1
  1523  0069                     USBCtrlTrfRxService@byteToRead:	
  1524                           
  1525                           ; 1 bytes @ 0x9
  1526  0069                     	ds	1
  1527  006A                     ??_USBCtrlTrfOutHandler:	
  1528  006A                     USBStdSetCfgHandler@i_1844:	
  1529                           ; 1 bytes @ 0xA
  1530                           
  1531  006A                     USBStdFeatureReqHandler@pUEP:	
  1532                           ; 1 bytes @ 0xA
  1533                           
  1534                           
  1535                           ; 2 bytes @ 0xA
  1536  006A                     	ds	1
  1537  006B                     USBStdSetCfgHandler@i:	
  1538                           
  1539                           ; 1 bytes @ 0xB
  1540  006B                     	ds	1
  1541  006C                     USBStdFeatureReqHandler@current_ep_data:	
  1542                           
  1543                           ; 1 bytes @ 0xC
  1544  006C                     	ds	1
  1545  006D                     USBStdFeatureReqHandler@p:	
  1546                           
  1547                           ; 1 bytes @ 0xD
  1548  006D                     	ds	1
  1549  006E                     ??_USBCheckStdRequest:	
  1550                           
  1551                           ; 1 bytes @ 0xE
  1552  006E                     	ds	1
  1553  006F                     ??_USBCtrlTrfSetupHandler:	
  1554                           
  1555                           ; 1 bytes @ 0xF
  1556  006F                     	ds	1
  1557                           
  1558                           	psect	maintext
  1559  09C5                     __pmaintext:	
  1560 ;;
  1561 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1562 ;;
  1563 ;; *************** function _main *****************
  1564 ;; Defined at:
  1565 ;;		line 46 in file "../main.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;		None
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;		None
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  2  617[None  ] int 
  1572 ;; Registers used:
  1573 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1574 ;; Tracked objects:
  1575 ;;		On entry : B1F/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1583 ;;Total ram usage:        0 bytes
  1584 ;; Hardware stack levels required when called:   14
  1585 ;; This function calls:
  1586 ;;		_InitializeSystem
  1587 ;;		_ProcessIO
  1588 ;;		_USBDeviceAttach
  1589 ;; This function is called by:
  1590 ;;		Startup code after reset
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           
  1595                           ;psect for function _main
  1596  09C5                     _main:	
  1597                           
  1598                           ;main.c: 48: InitializeSystem();
  1599                           
  1600                           ;incstack = 0
  1601                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1602  09C5  3189  21CF  3189   	fcall	_InitializeSystem
  1603                           
  1604                           ;main.c: 49: USBDeviceAttach();
  1605  09C8  318A  2266  3189   	fcall	_USBDeviceAttach
  1606  09CB                     l4439:	
  1607                           ;main.c: 50: while(1) ProcessIO();
  1608                           
  1609  09CB  3186  2660  3189   	fcall	_ProcessIO
  1610  09CE  29CB               	goto	l4439
  1611  09CF                     __end_of_main:	
  1612                           
  1613                           	psect	text1
  1614  0A66                     __ptext1:	
  1615 ;; *************** function _USBDeviceAttach *****************
  1616 ;; Defined at:
  1617 ;;		line 1525 in file "../Microchip/USB/usb_device.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;		None
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;		None
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  1    wreg      void 
  1624 ;; Registers used:
  1625 ;;		wreg, status,2, status,0
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1633 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  1634 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  1635 ;;Total ram usage:        1 bytes
  1636 ;; Hardware stack levels used:    1
  1637 ;; Hardware stack levels required when called:   11
  1638 ;; This function calls:
  1639 ;;		Nothing
  1640 ;; This function is called by:
  1641 ;;		_main
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           
  1646                           ;psect for function _USBDeviceAttach
  1647  0A66                     _USBDeviceAttach:	
  1648                           
  1649                           ;usb_device.c: 1529: {
  1650                           ;usb_device.c: 1530: if(1 == 1)
  1651                           
  1652                           ;incstack = 0
  1653                           ; Regs used in _USBDeviceAttach: [wreg+status,2+status,0]
  1654  0A66  0021               	movlb	1	; select bank1
  1655  0A67  0853               	movf	_USBDeviceState^(0+128),w	;volatile
  1656  0A68  1D03               	btfss	3,2
  1657  0A69  0008               	return
  1658                           
  1659                           ;usb_device.c: 1531: {
  1660                           ;usb_device.c: 1533: UCON = 0;
  1661  0A6A  003D               	movlb	29	; select bank29
  1662  0A6B  018E               	clrf	14	;volatile
  1663                           
  1664                           ;usb_device.c: 1536: UIE = 0;
  1665  0A6C  0192               	clrf	18	;volatile
  1666                           
  1667                           ;usb_device.c: 1540: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  1668  0A6D  3016               	movlw	22
  1669  0A6E  0091               	movwf	17	;volatile
  1670  0A6F  309F               	movlw	159
  1671  0A70  0097               	movwf	23	;volatile
  1672  0A71  307B               	movlw	123
  1673  0A72  0092               	movwf	18	;volatile
  1674                           
  1675                           ;usb_device.c: 1542: {PIE2bits.USBIE = 1;INTCONbits.PEIE = 1; INTCONbits.GIE = 1;};
  1676  0A73  0021               	movlb	1	; select bank1
  1677  0A74  1512               	bsf	18,2	;volatile
  1678  0A75  170B               	bsf	11,6	;volatile
  1679  0A76  178B               	bsf	11,7	;volatile
  1680  0A77                     l191:	
  1681                           ;usb_device.c: 1545: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  1682                           
  1683  0A77  003D               	movlb	29	; select bank29
  1684  0A78  198E               	btfsc	14,3	;volatile
  1685  0A79  2A7C               	goto	l3991
  1686  0A7A  158E               	bsf	14,3	;volatile
  1687  0A7B  2A77               	goto	l191
  1688  0A7C                     l3991:	
  1689                           
  1690                           ;usb_device.c: 1548: USBDeviceState = ATTACHED_STATE;
  1691  0A7C  3001               	movlw	1
  1692  0A7D  0021               	movlb	1	; select bank1
  1693  0A7E  00E0               	movwf	??_USBDeviceAttach^(0+128)
  1694  0A7F  0860               	movf	??_USBDeviceAttach^(0+128),w
  1695  0A80  00D3               	movwf	_USBDeviceState^(0+128)	;volatile
  1696  0A81  0008               	return
  1697  0A82                     __end_of_USBDeviceAttach:	
  1698                           
  1699                           	psect	text2
  1700  0660                     __ptext2:	
  1701 ;; *************** function _ProcessIO *****************
  1702 ;; Defined at:
  1703 ;;		line 132 in file "../main.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;		None
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;		None
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  1    wreg      void 
  1710 ;; Registers used:
  1711 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1719 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  1720 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  1721 ;;Total ram usage:        2 bytes
  1722 ;; Hardware stack levels used:    1
  1723 ;; Hardware stack levels required when called:   13
  1724 ;; This function calls:
  1725 ;;		_BlinkUSBStatus
  1726 ;;		_CDCTxService
  1727 ;;		_getcUSART
  1728 ;;		_getsUSBUSART
  1729 ;;		_putUSBUSART
  1730 ;;		_putcUSART
  1731 ;; This function is called by:
  1732 ;;		_main
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           
  1737                           ;psect for function _ProcessIO
  1738  0660                     _ProcessIO:	
  1739                           
  1740                           ;main.c: 135: BlinkUSBStatus();
  1741                           
  1742                           ;incstack = 0
  1743                           ; Regs used in _ProcessIO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1744  0660  3184  24D9  3186   	fcall	_BlinkUSBStatus
  1745                           
  1746                           ;main.c: 137: if((USBDeviceState<CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
  1747  0663  3020               	movlw	32
  1748  0664  0021               	movlb	1	; select bank1
  1749  0665  0253               	subwf	_USBDeviceState^(0+128),w	;volatile
  1750  0666  1C03               	skipc
  1751  0667  0008               	return
  1752  0668  003D               	movlb	29	; select bank29
  1753  0669  188E               	btfsc	14,1	;volatile
  1754  066A  0008               	return
  1755                           
  1756                           ;main.c: 138: if(RS232_Out_Data_Rdy==0)
  1757  066B  0021               	movlb	1	; select bank1
  1758  066C  0839               	movf	_RS232_Out_Data_Rdy^(0+128),w
  1759  066D  1D03               	btfss	3,2
  1760  066E  2E84               	goto	l4385
  1761                           
  1762                           ;main.c: 139: {
  1763                           ;main.c: 140: LastRS232Out=getsUSBUSART(RS232_Out_Data, 64);
  1764  066F  3040               	movlw	64
  1765  0670  0022               	movlb	2	; select bank2
  1766  0671  00CE               	movwf	??_ProcessIO^(0+256)
  1767  0672  084E               	movf	??_ProcessIO^(0+256),w
  1768  0673  0021               	movlb	1	; select bank1
  1769  0674  00E7               	movwf	getsUSBUSART@len^(0+128)
  1770  0675  3020               	movlw	(low (_RS232_Out_Data| (0+768)))& (0+255)
  1771  0676  318E  2659  3186   	fcall	_getsUSBUSART
  1772  0679  0022               	movlb	2	; select bank2
  1773  067A  00CF               	movwf	(??_ProcessIO+1)^(0+256)
  1774  067B  084F               	movf	(??_ProcessIO+1)^(0+256),w
  1775  067C  0021               	movlb	1	; select bank1
  1776  067D  00BB               	movwf	_LastRS232Out^(0+128)
  1777                           
  1778                           ;main.c: 141: if(LastRS232Out>0)
  1779  067E  083B               	movf	_LastRS232Out^(0+128),w
  1780  067F  1903               	btfsc	3,2
  1781  0680  2E84               	goto	l4385
  1782                           
  1783                           ;main.c: 142: {
  1784                           ;main.c: 143: RS232_Out_Data_Rdy=1;
  1785  0681  01B9               	clrf	_RS232_Out_Data_Rdy^(0+128)
  1786  0682  0AB9               	incf	_RS232_Out_Data_Rdy^(0+128),f
  1787                           
  1788                           ;main.c: 144: RS232cp=0;
  1789  0683  01BA               	clrf	_RS232cp^(0+128)
  1790  0684                     l4385:	
  1791                           
  1792                           ;main.c: 145: }
  1793                           ;main.c: 146: }
  1794                           ;main.c: 149: if(RS232_Out_Data_Rdy&&TXSTAbits.TRMT)
  1795  0684  0839               	movf	_RS232_Out_Data_Rdy^(0+128),w
  1796  0685  1903               	btfsc	3,2
  1797  0686  2E9E               	goto	l4397
  1798  0687  0023               	movlb	3	; select bank3
  1799  0688  1C9E               	btfss	30,1	;volatile
  1800  0689  2E9E               	goto	l4397
  1801                           
  1802                           ;main.c: 150: {
  1803                           ;main.c: 152: putcUSART(RS232_Out_Data[RS232cp]);
  1804  068A  0021               	movlb	1	; select bank1
  1805  068B  083A               	movf	_RS232cp^(0+128),w
  1806  068C  3E20               	addlw	(low (_RS232_Out_Data| (0+768)))& (0+255)
  1807  068D  0086               	movwf	6
  1808  068E  3003               	movlw	3	; select bank6/7
  1809  068F  0087               	movwf	7
  1810  0690  0801               	movf	1,w
  1811  0691  3189  21BC  3186   	fcall	_putcUSART
  1812                           
  1813                           ;main.c: 153: ++RS232cp;
  1814  0694  3001               	movlw	1
  1815  0695  0022               	movlb	2	; select bank2
  1816  0696  00CE               	movwf	??_ProcessIO^(0+256)
  1817  0697  084E               	movf	??_ProcessIO^(0+256),w
  1818  0698  0021               	movlb	1	; select bank1
  1819  0699  07BA               	addwf	_RS232cp^(0+128),f
  1820                           
  1821                           ;main.c: 154: if(RS232cp==LastRS232Out) RS232_Out_Data_Rdy=0;
  1822  069A  083A               	movf	_RS232cp^(0+128),w
  1823  069B  063B               	xorwf	_LastRS232Out^(0+128),w
  1824  069C  1903               	btfsc	3,2
  1825  069D  01B9               	clrf	_RS232_Out_Data_Rdy^(0+128)
  1826  069E                     l4397:	
  1827                           
  1828                           ;main.c: 155: }
  1829                           ;main.c: 158: if(PIR1bits.RCIF && (NextUSBOut<(64-1)))
  1830  069E  0020               	movlb	0	; select bank0
  1831  069F  1E91               	btfss	17,5	;volatile
  1832  06A0  2EBF               	goto	l4407
  1833  06A1  303F               	movlw	63
  1834  06A2  0021               	movlb	1	; select bank1
  1835  06A3  023C               	subwf	_NextUSBOut^(0+128),w
  1836  06A4  1803               	skipnc
  1837  06A5  2EBF               	goto	l4407
  1838                           
  1839                           ;main.c: 159: {
  1840                           ;main.c: 160: USB_Out_Buffer[NextUSBOut]=getcUSART();
  1841  06A6  318A  2208  3186   	fcall	_getcUSART
  1842  06A9  0022               	movlb	2	; select bank2
  1843  06AA  00CE               	movwf	??_ProcessIO^(0+256)
  1844  06AB  0021               	movlb	1	; select bank1
  1845  06AC  083C               	movf	_NextUSBOut^(0+128),w
  1846  06AD  3EA0               	addlw	(low (_USB_Out_Buffer| (0+256)))& (0+255)
  1847  06AE  0086               	movwf	6
  1848  06AF  3001               	movlw	1	; select bank3/4
  1849  06B0  0087               	movwf	7
  1850  06B1  0022               	movlb	2	; select bank2
  1851  06B2  084E               	movf	??_ProcessIO^(0+256),w
  1852  06B3  0081               	movwf	1
  1853                           
  1854                           ;main.c: 161: ++NextUSBOut;
  1855  06B4  3001               	movlw	1
  1856  06B5  00CE               	movwf	??_ProcessIO^(0+256)
  1857  06B6  084E               	movf	??_ProcessIO^(0+256),w
  1858  06B7  0021               	movlb	1	; select bank1
  1859  06B8  07BC               	addwf	_NextUSBOut^(0+128),f
  1860                           
  1861                           ;main.c: 162: USB_Out_Buffer[NextUSBOut]=0;
  1862  06B9  083C               	movf	_NextUSBOut^(0+128),w
  1863  06BA  3EA0               	addlw	(low (_USB_Out_Buffer| (0+256)))& (0+255)
  1864  06BB  0086               	movwf	6
  1865  06BC  3001               	movlw	1	; select bank3/4
  1866  06BD  0087               	movwf	7
  1867  06BE  0181               	clrf	1
  1868  06BF                     l4407:	
  1869                           
  1870                           ;main.c: 163: }
  1871                           ;main.c: 164: if(((cdc_trf_state == 0)) && (NextUSBOut>0))
  1872  06BF  0021               	movlb	1	; select bank1
  1873  06C0  0842               	movf	_cdc_trf_state^(0+128),w
  1874  06C1  1D03               	btfss	3,2
  1875  06C2  2ED2               	goto	l4415
  1876  06C3  083C               	movf	_NextUSBOut^(0+128),w
  1877  06C4  1903               	btfsc	3,2
  1878  06C5  2ED2               	goto	l4415
  1879                           
  1880                           ;main.c: 165: {
  1881                           ;main.c: 166: putUSBUSART(&USB_Out_Buffer[0], NextUSBOut);
  1882  06C6  083C               	movf	_NextUSBOut^(0+128),w
  1883  06C7  0022               	movlb	2	; select bank2
  1884  06C8  00CE               	movwf	??_ProcessIO^(0+256)
  1885  06C9  084E               	movf	??_ProcessIO^(0+256),w
  1886  06CA  0021               	movlb	1	; select bank1
  1887  06CB  00E0               	movwf	putUSBUSART@length^(0+128)
  1888  06CC  30A0               	movlw	(low (_USB_Out_Buffer| (0+256)))& (0+255)
  1889  06CD  318A  221E  3186   	fcall	_putUSBUSART
  1890                           
  1891                           ;main.c: 167: NextUSBOut=0;
  1892  06D0  0021               	movlb	1	; select bank1
  1893  06D1  01BC               	clrf	_NextUSBOut^(0+128)
  1894  06D2                     l4415:	
  1895                           
  1896                           ;main.c: 168: }
  1897                           ;main.c: 169: CDCTxService();
  1898  06D2  3182  2215         	fcall	_CDCTxService
  1899  06D4  0008               	return
  1900  06D5                     __end_of_ProcessIO:	
  1901                           
  1902                           	psect	text3
  1903  09BC                     __ptext3:	
  1904 ;; *************** function _putcUSART *****************
  1905 ;; Defined at:
  1906 ;;		line 93 in file "../main.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  c               1    wreg     unsigned char 
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;  c               1    8[BANK1 ] unsigned char 
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      void 
  1913 ;; Registers used:
  1914 ;;		wreg
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1921 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  1922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1923 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  1924 ;;Total ram usage:        1 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; Hardware stack levels required when called:   11
  1927 ;; This function calls:
  1928 ;;		Nothing
  1929 ;; This function is called by:
  1930 ;;		_ProcessIO
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           
  1935                           ;psect for function _putcUSART
  1936  09BC                     _putcUSART:	
  1937                           
  1938                           ;incstack = 0
  1939                           ; Regs used in _putcUSART: [wreg]
  1940                           ;putcUSART@c stored from wreg
  1941  09BC  0021               	movlb	1	; select bank1
  1942  09BD  00E0               	movwf	putcUSART@c^(0+128)
  1943                           
  1944                           ;main.c: 95: TXREG=c;
  1945  09BE  0860               	movf	putcUSART@c^(0+128),w
  1946  09BF  0023               	movlb	3	; select bank3
  1947  09C0  009A               	movwf	26	;volatile
  1948                           
  1949                           ;main.c: 96: sending=1;
  1950  09C1  0021               	movlb	1	; select bank1
  1951  09C2  01B8               	clrf	_sending^(0+128)
  1952  09C3  0AB8               	incf	_sending^(0+128),f
  1953  09C4  0008               	return
  1954  09C5                     __end_of_putcUSART:	
  1955                           
  1956                           	psect	text4
  1957  0A1E                     __ptext4:	
  1958 ;; *************** function _putUSBUSART *****************
  1959 ;; Defined at:
  1960 ;;		line 676 in file "../Microchip/USB/CDC_Device_Driver/usb_function_cdc.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  data            1    wreg     PTR unsigned char 
  1963 ;;		 -> USB_Out_Buffer(64), 
  1964 ;;  length          1    8[BANK1 ] unsigned char 
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;  data            1   10[BANK1 ] PTR unsigned char 
  1967 ;;		 -> USB_Out_Buffer(64), 
  1968 ;; Return value:  Size  Location     Type
  1969 ;;                  1    wreg      void 
  1970 ;; Registers used:
  1971 ;;		wreg, status,2, status,0
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1977 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  1978 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  1979 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  1980 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  1981 ;;Total ram usage:        3 bytes
  1982 ;; Hardware stack levels used:    1
  1983 ;; Hardware stack levels required when called:   11
  1984 ;; This function calls:
  1985 ;;		Nothing
  1986 ;; This function is called by:
  1987 ;;		_ProcessIO
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991                           
  1992                           ;psect for function _putUSBUSART
  1993  0A1E                     _putUSBUSART:	
  1994                           
  1995                           ;incstack = 0
  1996                           ; Regs used in _putUSBUSART: [wreg+status,2+status,0]
  1997                           ;putUSBUSART@data stored from wreg
  1998  0A1E  0021               	movlb	1	; select bank1
  1999  0A1F  00E2               	movwf	putUSBUSART@data^(0+128)
  2000                           
  2001                           ;usb_function_cdc.c: 701: {PIE2bits.USBIE = 0;};
  2002  0A20  1112               	bcf	18,2	;volatile
  2003                           
  2004                           ;usb_function_cdc.c: 702: if(cdc_trf_state == 0)
  2005  0A21  0842               	movf	_cdc_trf_state^(0+128),w
  2006  0A22  1D03               	btfss	3,2
  2007  0A23  2A32               	goto	l3611
  2008                           
  2009                           ;usb_function_cdc.c: 703: {
  2010                           ;usb_function_cdc.c: 704: { pCDCSrc.bRam = (BYTE*)data; cdc_tx_len = length; cdc_mem_typ
      +                          e = 0x01; cdc_trf_state = 1; };
  2011  0A24  0862               	movf	putUSBUSART@data^(0+128),w
  2012  0A25  00E1               	movwf	??_putUSBUSART^(0+128)
  2013  0A26  0861               	movf	??_putUSBUSART^(0+128),w
  2014  0A27  0022               	movlb	2	; select bank2
  2015  0A28  00BC               	movwf	_pCDCSrc^(0+256)
  2016  0A29  0021               	movlb	1	; select bank1
  2017  0A2A  0860               	movf	putUSBUSART@length^(0+128),w
  2018  0A2B  00E1               	movwf	??_putUSBUSART^(0+128)
  2019  0A2C  0861               	movf	??_putUSBUSART^(0+128),w
  2020  0A2D  00C1               	movwf	_cdc_tx_len^(0+128)
  2021  0A2E  01C0               	clrf	_cdc_mem_type^(0+128)
  2022  0A2F  0AC0               	incf	_cdc_mem_type^(0+128),f
  2023  0A30  01C2               	clrf	_cdc_trf_state^(0+128)
  2024  0A31  0AC2               	incf	_cdc_trf_state^(0+128),f
  2025  0A32                     l3611:	
  2026                           
  2027                           ;usb_function_cdc.c: 705: }
  2028                           ;usb_function_cdc.c: 706: {PIE2bits.USBIE = 1;};
  2029  0A32  1512               	bsf	18,2	;volatile
  2030  0A33  0008               	return
  2031  0A34                     __end_of_putUSBUSART:	
  2032                           
  2033                           	psect	text5
  2034  0E59                     __ptext5:	
  2035 ;; *************** function _getsUSBUSART *****************
  2036 ;; Defined at:
  2037 ;;		line 605 in file "../Microchip/USB/CDC_Device_Driver/usb_function_cdc.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;  buffer          1    wreg     PTR unsigned char 
  2040 ;;		 -> RS232_Out_Data(64), 
  2041 ;;  len             1   15[BANK1 ] unsigned char 
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;  buffer          1    3[BANK2 ] PTR unsigned char 
  2044 ;;		 -> RS232_Out_Data(64), 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      unsigned char 
  2047 ;; Registers used:
  2048 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2054 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2055 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  2056 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  2057 ;;      Totals:         0       0       1       6       0       0       0       0       0       0       0       0       
      +0       0
  2058 ;;Total ram usage:        7 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; Hardware stack levels required when called:   12
  2061 ;; This function calls:
  2062 ;;		_USBTransferOnePacket
  2063 ;; This function is called by:
  2064 ;;		_ProcessIO
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           
  2069                           ;psect for function _getsUSBUSART
  2070  0E59                     _getsUSBUSART:	
  2071                           
  2072                           ;incstack = 0
  2073                           ; Regs used in _getsUSBUSART: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2074                           ;getsUSBUSART@buffer stored from wreg
  2075  0E59  0022               	movlb	2	; select bank2
  2076  0E5A  00CA               	movwf	getsUSBUSART@buffer^(0+256)
  2077                           
  2078                           ;usb_function_cdc.c: 607: cdc_rx_len = 0;
  2079  0E5B  0021               	movlb	1	; select bank1
  2080  0E5C  01C3               	clrf	_cdc_rx_len^(0+128)
  2081                           
  2082                           ;usb_function_cdc.c: 609: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHan
      +                          dle)->STAT.UOWN))
  2083  0E5D  083F               	movf	_CDCDataOutHandle^(0+128),w
  2084  0E5E  1903               	btfsc	3,2
  2085  0E5F  2E6E               	goto	l4271
  2086  0E60  083F               	movf	_CDCDataOutHandle^(0+128),w
  2087  0E61  0086               	movwf	6
  2088  0E62  0187               	clrf	7
  2089  0E63  0D01               	rlf	1,w
  2090  0E64  0D01               	rlf	1,w
  2091  0E65  3901               	andlw	1
  2092  0E66  0022               	movlb	2	; select bank2
  2093  0E67  00C7               	movwf	??_getsUSBUSART^(0+256)
  2094  0E68  01C8               	clrf	(??_getsUSBUSART^(0+256)+1)
  2095  0E69  0847               	movf	??_getsUSBUSART^(0+256),w
  2096  0E6A  00CB               	movwf	_getsUSBUSART$3214^(0+256)
  2097  0E6B  0848               	movf	(??_getsUSBUSART+1)^(0+256),w
  2098  0E6C  00CC               	movwf	(_getsUSBUSART$3214+1)^(0+256)
  2099  0E6D  2E71               	goto	l4273
  2100  0E6E                     l4271:	
  2101  0E6E  0022               	movlb	2	; select bank2
  2102  0E6F  01CB               	clrf	_getsUSBUSART$3214^(0+256)
  2103  0E70  01CC               	clrf	(_getsUSBUSART$3214+1)^(0+256)
  2104  0E71                     l4273:	
  2105  0E71  084B               	movf	_getsUSBUSART$3214^(0+256),w
  2106  0E72  044C               	iorwf	(_getsUSBUSART$3214+1)^(0+256),w
  2107  0E73  1D03               	btfss	3,2
  2108  0E74  2EB5               	goto	l4289
  2109                           
  2110                           ;usb_function_cdc.c: 610: {
  2111                           ;usb_function_cdc.c: 615: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  2112  0E75  0021               	movlb	1	; select bank1
  2113  0E76  0A3F               	incf	_CDCDataOutHandle^(0+128),w
  2114  0E77  0086               	movwf	6
  2115  0E78  0187               	clrf	7
  2116  0E79  0867               	movf	getsUSBUSART@len^(0+128),w
  2117  0E7A  0201               	subwf	1,w
  2118  0E7B  1803               	skipnc
  2119  0E7C  2E82               	goto	l4279
  2120                           
  2121                           ;usb_function_cdc.c: 616: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  2122  0E7D  083F               	movf	_CDCDataOutHandle^(0+128),w
  2123  0E7E  0086               	movwf	6
  2124  0E7F  0187               	clrf	7
  2125  0E80  3F41               	moviw [1]fsr1
  2126  0E81  00E7               	movwf	getsUSBUSART@len^(0+128)
  2127  0E82                     l4279:	
  2128                           
  2129                           ;usb_function_cdc.c: 621: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  2130  0E82  01C3               	clrf	_cdc_rx_len^(0+128)
  2131  0E83                     l4285:	
  2132  0E83  0867               	movf	getsUSBUSART@len^(0+128),w
  2133  0E84  0243               	subwf	_cdc_rx_len^(0+128),w
  2134  0E85  1803               	btfsc	3,0
  2135  0E86  2EA0               	goto	l4287
  2136                           
  2137                           ;usb_function_cdc.c: 622: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  2138  0E87  0843               	movf	_cdc_rx_len^(0+128),w
  2139  0E88  3EA0               	addlw	160
  2140  0E89  0086               	movwf	6
  2141  0E8A  3002               	movlw	2	; select bank5/6
  2142  0E8B  0087               	movwf	7
  2143  0E8C  0801               	movf	1,w
  2144  0E8D  0022               	movlb	2	; select bank2
  2145  0E8E  00C7               	movwf	??_getsUSBUSART^(0+256)
  2146  0E8F  0021               	movlb	1	; select bank1
  2147  0E90  0843               	movf	_cdc_rx_len^(0+128),w
  2148  0E91  0022               	movlb	2	; select bank2
  2149  0E92  074A               	addwf	getsUSBUSART@buffer^(0+256),w
  2150  0E93  00C8               	movwf	(??_getsUSBUSART+1)^(0+256)
  2151  0E94  0848               	movf	(??_getsUSBUSART+1)^(0+256),w
  2152  0E95  0086               	movwf	6
  2153  0E96  3003               	movlw	3	; select bank6/7
  2154  0E97  0087               	movwf	7
  2155  0E98  0847               	movf	??_getsUSBUSART^(0+256),w
  2156  0E99  0081               	movwf	1
  2157  0E9A  3001               	movlw	1
  2158  0E9B  00C7               	movwf	??_getsUSBUSART^(0+256)
  2159  0E9C  0847               	movf	??_getsUSBUSART^(0+256),w
  2160  0E9D  0021               	movlb	1	; select bank1
  2161  0E9E  07C3               	addwf	_cdc_rx_len^(0+128),f
  2162  0E9F  2E83               	goto	l4285
  2163  0EA0                     l4287:	
  2164                           
  2165                           ;usb_function_cdc.c: 628: CDCDataOutHandle = USBTransferOnePacket(2,0,(BYTE*)&cdc_data_r
      +                          x,sizeof(cdc_data_rx));
  2166  0EA0  01E0               	clrf	USBTransferOnePacket@dir^(0+128)
  2167  0EA1  30A0               	movlw	160
  2168  0EA2  0022               	movlb	2	; select bank2
  2169  0EA3  00C7               	movwf	??_getsUSBUSART^(0+256)
  2170  0EA4  0847               	movf	??_getsUSBUSART^(0+256),w
  2171  0EA5  0021               	movlb	1	; select bank1
  2172  0EA6  00E1               	movwf	USBTransferOnePacket@data^(0+128)
  2173  0EA7  3040               	movlw	64
  2174  0EA8  0022               	movlb	2	; select bank2
  2175  0EA9  00C8               	movwf	(??_getsUSBUSART+1)^(0+256)
  2176  0EAA  0848               	movf	(??_getsUSBUSART+1)^(0+256),w
  2177  0EAB  0021               	movlb	1	; select bank1
  2178  0EAC  00E2               	movwf	USBTransferOnePacket@len^(0+128)
  2179  0EAD  3002               	movlw	2
  2180  0EAE  318C  24B0         	fcall	_USBTransferOnePacket
  2181  0EB0  0022               	movlb	2	; select bank2
  2182  0EB1  00C9               	movwf	(??_getsUSBUSART+2)^(0+256)
  2183  0EB2  0849               	movf	(??_getsUSBUSART+2)^(0+256),w
  2184  0EB3  0021               	movlb	1	; select bank1
  2185  0EB4  00BF               	movwf	_CDCDataOutHandle^(0+128)
  2186  0EB5                     l4289:	
  2187                           
  2188                           ;usb_function_cdc.c: 630: }
  2189                           ;usb_function_cdc.c: 632: return cdc_rx_len;
  2190  0EB5  0021               	movlb	1	; select bank1
  2191  0EB6  0843               	movf	_cdc_rx_len^(0+128),w
  2192  0EB7  0008               	return
  2193  0EB8                     __end_of_getsUSBUSART:	
  2194                           
  2195                           	psect	text6
  2196  0A08                     __ptext6:	
  2197 ;; *************** function _getcUSART *****************
  2198 ;; Defined at:
  2199 ;;		line 117 in file "../main.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;		None
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;  c               1    9[BANK1 ] unsigned char 
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      unsigned char 
  2206 ;; Registers used:
  2207 ;;		wreg
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2214 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2215 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2216 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2217 ;;Total ram usage:        2 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; Hardware stack levels required when called:   11
  2220 ;; This function calls:
  2221 ;;		Nothing
  2222 ;; This function is called by:
  2223 ;;		_ProcessIO
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           
  2228                           ;psect for function _getcUSART
  2229  0A08                     _getcUSART:	
  2230                           
  2231                           ;main.c: 119: char c;
  2232                           ;main.c: 121: if(RCSTAbits.OERR)
  2233                           
  2234                           ;incstack = 0
  2235                           ; Regs used in _getcUSART: [wreg]
  2236  0A08  0023               	movlb	3	; select bank3
  2237  0A09  1C9D               	btfss	29,1	;volatile
  2238  0A0A  2A14               	goto	l3721
  2239                           
  2240                           ;main.c: 122: {
  2241                           ;main.c: 123: RCSTAbits.CREN=0;
  2242  0A0B  121D               	bcf	29,4	;volatile
  2243                           
  2244                           ;main.c: 124: c=RCREG;
  2245  0A0C  0819               	movf	25,w	;volatile
  2246  0A0D  0021               	movlb	1	; select bank1
  2247  0A0E  00E0               	movwf	??_getcUSART^(0+128)
  2248  0A0F  0860               	movf	??_getcUSART^(0+128),w
  2249  0A10  00E1               	movwf	getcUSART@c^(0+128)
  2250                           
  2251                           ;main.c: 125: RCSTAbits.CREN=1;
  2252  0A11  0023               	movlb	3	; select bank3
  2253  0A12  161D               	bsf	29,4	;volatile
  2254                           
  2255                           ;main.c: 126: }
  2256  0A13  2A19               	goto	l3723
  2257  0A14                     l3721:	
  2258                           
  2259                           ;main.c: 127: else c=RCREG;
  2260  0A14  0819               	movf	25,w	;volatile
  2261  0A15  0021               	movlb	1	; select bank1
  2262  0A16  00E0               	movwf	??_getcUSART^(0+128)
  2263  0A17  0860               	movf	??_getcUSART^(0+128),w
  2264  0A18  00E1               	movwf	getcUSART@c^(0+128)
  2265  0A19                     l3723:	
  2266                           
  2267                           ;main.c: 128: receiving=1;
  2268  0A19  0021               	movlb	1	; select bank1
  2269  0A1A  01B7               	clrf	_receiving^(0+128)
  2270  0A1B  0AB7               	incf	_receiving^(0+128),f
  2271                           
  2272                           ;main.c: 129: return c;
  2273  0A1C  0861               	movf	getcUSART@c^(0+128),w
  2274  0A1D  0008               	return
  2275  0A1E                     __end_of_getcUSART:	
  2276                           
  2277                           	psect	text7
  2278  0215                     __ptext7:	
  2279 ;; *************** function _CDCTxService *****************
  2280 ;; Defined at:
  2281 ;;		line 956 in file "../Microchip/USB/CDC_Device_Driver/usb_function_cdc.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;		None
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;  byte_to_send    1    6[BANK2 ] unsigned char 
  2286 ;;  i               1    5[BANK2 ] unsigned char 
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  1    wreg      void 
  2289 ;; Registers used:
  2290 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2297 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  2298 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  2299 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0
  2300 ;;Total ram usage:        7 bytes
  2301 ;; Hardware stack levels used:    1
  2302 ;; Hardware stack levels required when called:   12
  2303 ;; This function calls:
  2304 ;;		_USBTransferOnePacket
  2305 ;; This function is called by:
  2306 ;;		_ProcessIO
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309                           
  2310                           
  2311                           ;psect for function _CDCTxService
  2312  0215                     _CDCTxService:	
  2313                           
  2314                           ;usb_function_cdc.c: 958: BYTE byte_to_send;
  2315                           ;usb_function_cdc.c: 959: BYTE i;
  2316                           ;usb_function_cdc.c: 961: {PIE2bits.USBIE = 0;};
  2317                           
  2318                           ;incstack = 0
  2319                           ; Regs used in _CDCTxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2320  0215  0021               	movlb	1	; select bank1
  2321  0216  1112               	bcf	18,2	;volatile
  2322                           
  2323                           ;usb_function_cdc.c: 963: {};
  2324                           ;usb_function_cdc.c: 965: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle
      +                          )->STAT.UOWN))
  2325  0217  083E               	movf	_CDCDataInHandle^(0+128),w
  2326  0218  1903               	btfsc	3,2
  2327  0219  2A28               	goto	l4299
  2328  021A  083E               	movf	_CDCDataInHandle^(0+128),w
  2329  021B  0086               	movwf	6
  2330  021C  0187               	clrf	7
  2331  021D  0D01               	rlf	1,w
  2332  021E  0D01               	rlf	1,w
  2333  021F  3901               	andlw	1
  2334  0220  0022               	movlb	2	; select bank2
  2335  0221  00C7               	movwf	??_CDCTxService^(0+256)
  2336  0222  01C8               	clrf	(??_CDCTxService^(0+256)+1)
  2337  0223  0847               	movf	??_CDCTxService^(0+256),w
  2338  0224  00CA               	movwf	_CDCTxService$3262^(0+256)
  2339  0225  0848               	movf	(??_CDCTxService+1)^(0+256),w
  2340  0226  00CB               	movwf	(_CDCTxService$3262+1)^(0+256)
  2341  0227  2A2B               	goto	l4301
  2342  0228                     l4299:	
  2343  0228  0022               	movlb	2	; select bank2
  2344  0229  01CA               	clrf	_CDCTxService$3262^(0+256)
  2345  022A  01CB               	clrf	(_CDCTxService$3262+1)^(0+256)
  2346  022B                     l4301:	
  2347  022B  084A               	movf	_CDCTxService$3262^(0+256),w
  2348  022C  044B               	iorwf	(_CDCTxService$3262+1)^(0+256),w
  2349  022D  1903               	btfsc	3,2
  2350  022E  2A32               	goto	l4305
  2351                           
  2352                           ;usb_function_cdc.c: 966: {
  2353                           ;usb_function_cdc.c: 967: {PIE2bits.USBIE = 1;};
  2354  022F  0021               	movlb	1	; select bank1
  2355  0230  1512               	bsf	18,2	;volatile
  2356                           
  2357                           ;usb_function_cdc.c: 968: return;
  2358  0231  0008               	return
  2359  0232                     l4305:	
  2360                           
  2361                           ;usb_function_cdc.c: 969: }
  2362                           ;usb_function_cdc.c: 976: if(cdc_trf_state == 3)
  2363  0232  3003               	movlw	3
  2364  0233  0021               	movlb	1	; select bank1
  2365  0234  0642               	xorwf	_cdc_trf_state^(0+128),w
  2366  0235  1903               	btfsc	3,2
  2367                           
  2368                           ;usb_function_cdc.c: 977: cdc_trf_state = 0;
  2369  0236  01C2               	clrf	_cdc_trf_state^(0+128)
  2370                           
  2371                           ;usb_function_cdc.c: 982: if(cdc_trf_state == 0)
  2372  0237  0842               	movf	_cdc_trf_state^(0+128),w
  2373  0238  1D03               	btfss	3,2
  2374  0239  2A3C               	goto	l4313
  2375                           
  2376                           ;usb_function_cdc.c: 983: {
  2377                           ;usb_function_cdc.c: 984: {PIE2bits.USBIE = 1;};
  2378  023A  1512               	bsf	18,2	;volatile
  2379                           
  2380                           ;usb_function_cdc.c: 985: return;
  2381  023B  0008               	return
  2382  023C                     l4313:	
  2383                           
  2384                           ;usb_function_cdc.c: 986: }
  2385                           ;usb_function_cdc.c: 991: if(cdc_trf_state == 2)
  2386  023C  3002               	movlw	2
  2387  023D  0642               	xorwf	_cdc_trf_state^(0+128),w
  2388  023E  1D03               	btfss	3,2
  2389  023F  2A54               	goto	l4319
  2390                           
  2391                           ;usb_function_cdc.c: 992: {
  2392                           ;usb_function_cdc.c: 993: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  2393  0240  01E0               	clrf	USBTransferOnePacket@dir^(0+128)
  2394  0241  0AE0               	incf	USBTransferOnePacket@dir^(0+128),f
  2395  0242  01E1               	clrf	USBTransferOnePacket@data^(0+128)
  2396  0243  01E2               	clrf	USBTransferOnePacket@len^(0+128)
  2397  0244  3002               	movlw	2
  2398  0245  318C  24B0  3182   	fcall	_USBTransferOnePacket
  2399  0248  0022               	movlb	2	; select bank2
  2400  0249  00C7               	movwf	??_CDCTxService^(0+256)
  2401  024A  0847               	movf	??_CDCTxService^(0+256),w
  2402  024B  0021               	movlb	1	; select bank1
  2403  024C  00BE               	movwf	_CDCDataInHandle^(0+128)
  2404                           
  2405                           ;usb_function_cdc.c: 995: cdc_trf_state = 3;
  2406  024D  3003               	movlw	3
  2407  024E  0022               	movlb	2	; select bank2
  2408  024F  00C7               	movwf	??_CDCTxService^(0+256)
  2409  0250  0847               	movf	??_CDCTxService^(0+256),w
  2410  0251  0021               	movlb	1	; select bank1
  2411  0252  00C2               	movwf	_cdc_trf_state^(0+128)
  2412                           
  2413                           ;usb_function_cdc.c: 996: }
  2414  0253  2AD7               	goto	l4367
  2415  0254                     l4319:	
  2416                           
  2417                           ;usb_function_cdc.c: 997: else if(cdc_trf_state == 1)
  2418  0254  0342               	decf	_cdc_trf_state^(0+128),w
  2419  0255  1D03               	btfss	3,2
  2420  0256  2AD7               	goto	l4367
  2421                           
  2422                           ;usb_function_cdc.c: 998: {
  2423                           ;usb_function_cdc.c: 1002: if(cdc_tx_len > sizeof(cdc_data_tx))
  2424  0257  3041               	movlw	65
  2425  0258  0241               	subwf	_cdc_tx_len^(0+128),w
  2426  0259  1C03               	skipc
  2427  025A  2A5D               	goto	l4325
  2428                           
  2429                           ;usb_function_cdc.c: 1003: byte_to_send = sizeof(cdc_data_tx);
  2430  025B  3040               	movlw	64
  2431  025C  2A5F               	goto	L1
  2432  025D                     l4325:	
  2433                           
  2434                           ;usb_function_cdc.c: 1004: else
  2435                           ;usb_function_cdc.c: 1005: byte_to_send = cdc_tx_len;
  2436  025D  0021               	movlb	1	; select bank1
  2437  025E  0841               	movf	_cdc_tx_len^(0+128),w
  2438  025F                     L1:	
  2439  025F  0022               	movlb	2	; select bank2
  2440  0260  00C7               	movwf	??_CDCTxService^(0+256)
  2441  0261  0847               	movf	??_CDCTxService^(0+256),w
  2442  0262  00CD               	movwf	CDCTxService@byte_to_send^(0+256)
  2443                           
  2444                           ;usb_function_cdc.c: 1010: cdc_tx_len = cdc_tx_len - byte_to_send;
  2445  0263  034D               	decf	CDCTxService@byte_to_send^(0+256),w
  2446  0264  3AFF               	xorlw	255
  2447  0265  0021               	movlb	1	; select bank1
  2448  0266  0741               	addwf	_cdc_tx_len^(0+128),w
  2449  0267  0022               	movlb	2	; select bank2
  2450  0268  00C7               	movwf	??_CDCTxService^(0+256)
  2451  0269  0847               	movf	??_CDCTxService^(0+256),w
  2452  026A  0021               	movlb	1	; select bank1
  2453  026B  00C1               	movwf	_cdc_tx_len^(0+128)
  2454                           
  2455                           ;usb_function_cdc.c: 1012: pCDCDst.bRam = (BYTE*)&cdc_data_tx;
  2456  026C  3020               	movlw	32
  2457  026D  0022               	movlb	2	; select bank2
  2458  026E  00C7               	movwf	??_CDCTxService^(0+256)
  2459  026F  0847               	movf	??_CDCTxService^(0+256),w
  2460  0270  00BA               	movwf	_pCDCDst^(0+256)
  2461                           
  2462                           ;usb_function_cdc.c: 1014: i = byte_to_send;
  2463  0271  084D               	movf	CDCTxService@byte_to_send^(0+256),w
  2464  0272  00C7               	movwf	??_CDCTxService^(0+256)
  2465  0273  0847               	movf	??_CDCTxService^(0+256),w
  2466  0274  00CC               	movwf	CDCTxService@i^(0+256)
  2467                           
  2468                           ;usb_function_cdc.c: 1015: if(cdc_mem_type == 0x00)
  2469  0275  0021               	movlb	1	; select bank1
  2470  0276  0840               	movf	_cdc_mem_type^(0+128),w
  2471  0277  1903               	btfsc	3,2
  2472  0278  2A91               	goto	l4345
  2473  0279  2AAC               	goto	l4355
  2474  027A                     l4337:	
  2475                           ;usb_function_cdc.c: 1016: {
  2476                           ;usb_function_cdc.c: 1017: while(i)
  2477                           
  2478                           
  2479                           ;usb_function_cdc.c: 1018: {
  2480                           ;usb_function_cdc.c: 1019: *pCDCDst.bRam = *pCDCSrc.bRom;
  2481  027A  0022               	movlb	2	; select bank2
  2482  027B  083C               	movf	_pCDCSrc^(0+256),w
  2483  027C  0086               	movwf	6
  2484  027D  3001               	movlw	1	; select bank2/3
  2485  027E  0087               	movwf	7
  2486  027F  0801               	movf	1,w
  2487  0280  00C7               	movwf	??_CDCTxService^(0+256)
  2488  0281  083A               	movf	_pCDCDst^(0+256),w
  2489  0282  0086               	movwf	6
  2490  0283  3002               	movlw	2	; select bank4/5
  2491  0284  0087               	movwf	7
  2492  0285  0847               	movf	??_CDCTxService^(0+256),w
  2493  0286  0081               	movwf	1
  2494                           
  2495                           ;usb_function_cdc.c: 1020: pCDCDst.bRam++;
  2496  0287  3001               	movlw	1
  2497  0288  00C7               	movwf	??_CDCTxService^(0+256)
  2498  0289  0847               	movf	??_CDCTxService^(0+256),w
  2499  028A  07BA               	addwf	_pCDCDst^(0+256),f
  2500                           
  2501                           ;usb_function_cdc.c: 1021: pCDCSrc.bRom++;
  2502  028B  3001               	movlw	1
  2503  028C  00C7               	movwf	??_CDCTxService^(0+256)
  2504  028D  0847               	movf	??_CDCTxService^(0+256),w
  2505  028E  07BC               	addwf	_pCDCSrc^(0+256),f
  2506                           
  2507                           ;usb_function_cdc.c: 1022: i--;
  2508  028F  3001               	movlw	1
  2509  0290  02CC               	subwf	CDCTxService@i^(0+256),f
  2510  0291                     l4345:	
  2511  0291  0022               	movlb	2	; select bank2
  2512  0292  084C               	movf	CDCTxService@i^(0+256),w
  2513  0293  1903               	btfsc	3,2
  2514  0294  2AB0               	goto	l4357
  2515  0295  2A7A               	goto	l4337
  2516  0296                     l4347:	
  2517                           ;usb_function_cdc.c: 1025: else
  2518                           ;usb_function_cdc.c: 1026: {
  2519                           ;usb_function_cdc.c: 1027: while(i)
  2520                           
  2521                           ;usb_function_cdc.c: 1023: }
  2522                           ;usb_function_cdc.c: 1024: }
  2523                           
  2524                           
  2525                           ;usb_function_cdc.c: 1028: {
  2526                           ;usb_function_cdc.c: 1029: *pCDCDst.bRam = *pCDCSrc.bRam;
  2527  0296  083C               	movf	_pCDCSrc^(0+256),w
  2528  0297  0086               	movwf	6
  2529  0298  3001               	movlw	1	; select bank2/3
  2530  0299  0087               	movwf	7
  2531  029A  0801               	movf	1,w
  2532  029B  00C7               	movwf	??_CDCTxService^(0+256)
  2533  029C  083A               	movf	_pCDCDst^(0+256),w
  2534  029D  0086               	movwf	6
  2535  029E  3002               	movlw	2	; select bank4/5
  2536  029F  0087               	movwf	7
  2537  02A0  0847               	movf	??_CDCTxService^(0+256),w
  2538  02A1  0081               	movwf	1
  2539                           
  2540                           ;usb_function_cdc.c: 1030: pCDCDst.bRam++;
  2541  02A2  3001               	movlw	1
  2542  02A3  00C7               	movwf	??_CDCTxService^(0+256)
  2543  02A4  0847               	movf	??_CDCTxService^(0+256),w
  2544  02A5  07BA               	addwf	_pCDCDst^(0+256),f
  2545                           
  2546                           ;usb_function_cdc.c: 1031: pCDCSrc.bRam++;
  2547  02A6  3001               	movlw	1
  2548  02A7  00C7               	movwf	??_CDCTxService^(0+256)
  2549  02A8  0847               	movf	??_CDCTxService^(0+256),w
  2550  02A9  07BC               	addwf	_pCDCSrc^(0+256),f
  2551                           
  2552                           ;usb_function_cdc.c: 1032: i--;
  2553  02AA  3001               	movlw	1
  2554  02AB  02CC               	subwf	CDCTxService@i^(0+256),f
  2555  02AC                     l4355:	
  2556  02AC  0022               	movlb	2	; select bank2
  2557  02AD  084C               	movf	CDCTxService@i^(0+256),w
  2558  02AE  1D03               	btfss	3,2
  2559  02AF  2A96               	goto	l4347
  2560  02B0                     l4357:	
  2561                           
  2562                           ;usb_function_cdc.c: 1033: }
  2563                           ;usb_function_cdc.c: 1034: }
  2564                           ;usb_function_cdc.c: 1040: if(cdc_tx_len == 0)
  2565  02B0  0021               	movlb	1	; select bank1
  2566  02B1  0841               	movf	_cdc_tx_len^(0+128),w
  2567  02B2  1D03               	btfss	3,2
  2568  02B3  2AC1               	goto	l4365
  2569                           
  2570                           ;usb_function_cdc.c: 1041: {
  2571                           ;usb_function_cdc.c: 1042: if(byte_to_send == 64)
  2572  02B4  3040               	movlw	64
  2573  02B5  0022               	movlb	2	; select bank2
  2574  02B6  064D               	xorwf	CDCTxService@byte_to_send^(0+256),w
  2575  02B7  1D03               	btfss	3,2
  2576  02B8  2ABB               	goto	l4363
  2577                           
  2578                           ;usb_function_cdc.c: 1043: cdc_trf_state = 2;
  2579  02B9  3002               	movlw	2
  2580  02BA  2ABD               	goto	L2
  2581  02BB                     l4363:	
  2582                           
  2583                           ;usb_function_cdc.c: 1044: else
  2584                           ;usb_function_cdc.c: 1045: cdc_trf_state = 3;
  2585  02BB  3003               	movlw	3
  2586  02BC  0022               	movlb	2	; select bank2
  2587  02BD                     L2:	
  2588  02BD  00C7               	movwf	??_CDCTxService^(0+256)
  2589  02BE  0847               	movf	??_CDCTxService^(0+256),w
  2590  02BF  0021               	movlb	1	; select bank1
  2591  02C0  00C2               	movwf	_cdc_trf_state^(0+128)
  2592  02C1                     l4365:	
  2593                           
  2594                           ;usb_function_cdc.c: 1046: }
  2595                           ;usb_function_cdc.c: 1047: CDCDataInHandle = USBTransferOnePacket(2,1,(BYTE*)&cdc_data_t
      +                          x,byte_to_send);
  2596  02C1  01E0               	clrf	USBTransferOnePacket@dir^(0+128)
  2597  02C2  0AE0               	incf	USBTransferOnePacket@dir^(0+128),f
  2598  02C3  3020               	movlw	32
  2599  02C4  0022               	movlb	2	; select bank2
  2600  02C5  00C7               	movwf	??_CDCTxService^(0+256)
  2601  02C6  0847               	movf	??_CDCTxService^(0+256),w
  2602  02C7  0021               	movlb	1	; select bank1
  2603  02C8  00E1               	movwf	USBTransferOnePacket@data^(0+128)
  2604  02C9  0022               	movlb	2	; select bank2
  2605  02CA  084D               	movf	CDCTxService@byte_to_send^(0+256),w
  2606  02CB  00C8               	movwf	(??_CDCTxService+1)^(0+256)
  2607  02CC  0848               	movf	(??_CDCTxService+1)^(0+256),w
  2608  02CD  0021               	movlb	1	; select bank1
  2609  02CE  00E2               	movwf	USBTransferOnePacket@len^(0+128)
  2610  02CF  3002               	movlw	2
  2611  02D0  318C  24B0         	fcall	_USBTransferOnePacket
  2612  02D2  0022               	movlb	2	; select bank2
  2613  02D3  00C9               	movwf	(??_CDCTxService+2)^(0+256)
  2614  02D4  0849               	movf	(??_CDCTxService+2)^(0+256),w
  2615  02D5  0021               	movlb	1	; select bank1
  2616  02D6  00BE               	movwf	_CDCDataInHandle^(0+128)
  2617  02D7                     l4367:	
  2618                           
  2619                           ;usb_function_cdc.c: 1049: }
  2620                           ;usb_function_cdc.c: 1051: {PIE2bits.USBIE = 1;};
  2621  02D7  1512               	bsf	18,2	;volatile
  2622  02D8  0008               	return
  2623  02D9                     __end_of_CDCTxService:	
  2624                           
  2625                           	psect	text8
  2626  0CB0                     __ptext8:	
  2627 ;; *************** function _USBTransferOnePacket *****************
  2628 ;; Defined at:
  2629 ;;		line 1172 in file "../Microchip/USB/usb_device.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;  ep              1    wreg     unsigned char 
  2632 ;;  dir             1    8[BANK1 ] unsigned char 
  2633 ;;  data            1    9[BANK1 ] PTR unsigned char 
  2634 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  2635 ;;  len             1   10[BANK1 ] unsigned char 
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;  ep              1   13[BANK1 ] unsigned char 
  2638 ;;  handle          1   14[BANK1 ] PTR volatile struct __BD
  2639 ;;		 -> NULL(0), BDT(48), 
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      PTR void 
  2642 ;; Registers used:
  2643 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2649 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2650 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2651 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2652 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  2653 ;;Total ram usage:        7 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; Hardware stack levels required when called:   11
  2656 ;; This function calls:
  2657 ;;		Nothing
  2658 ;; This function is called by:
  2659 ;;		_getsUSBUSART
  2660 ;;		_CDCTxService
  2661 ;;		_USBCDCEventHandler
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           
  2666                           ;psect for function _USBTransferOnePacket
  2667  0CB0                     _USBTransferOnePacket:	
  2668                           
  2669                           ;incstack = 0
  2670                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  2671                           ;USBTransferOnePacket@ep stored from wreg
  2672  0CB0  0021               	movlb	1	; select bank1
  2673  0CB1  00E5               	movwf	USBTransferOnePacket@ep^(0+128)
  2674                           
  2675                           ;usb_device.c: 1174: volatile BDT_ENTRY* handle;
  2676                           ;usb_device.c: 1177: if(dir != 0)
  2677  0CB2  0860               	movf	USBTransferOnePacket@dir^(0+128),w
  2678  0CB3  1903               	btfsc	3,2
  2679  0CB4  2CBA               	goto	l4239
  2680                           
  2681                           ;usb_device.c: 1178: {
  2682                           ;usb_device.c: 1180: handle = pBDTEntryIn[ep];
  2683  0CB5  0865               	movf	USBTransferOnePacket@ep^(0+128),w
  2684  0CB6  3EB2               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  2685  0CB7  0086               	movwf	6
  2686  0CB8  0187               	clrf	7
  2687  0CB9  2CBF               	goto	L3
  2688  0CBA                     l4239:	
  2689                           ;usb_device.c: 1181: }
  2690                           
  2691                           
  2692                           ;usb_device.c: 1182: else
  2693                           ;usb_device.c: 1183: {
  2694                           ;usb_device.c: 1185: handle = pBDTEntryOut[ep];
  2695  0CBA  0865               	movf	USBTransferOnePacket@ep^(0+128),w
  2696  0CBB  3E35               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  2697  0CBC  0086               	movwf	6
  2698  0CBD  3001               	movlw	1	; select bank2/3
  2699  0CBE  0087               	movwf	7
  2700  0CBF                     L3:	
  2701  0CBF  0801               	movf	1,w
  2702  0CC0  00E3               	movwf	??_USBTransferOnePacket^(0+128)
  2703  0CC1  0863               	movf	??_USBTransferOnePacket^(0+128),w
  2704  0CC2  00E6               	movwf	USBTransferOnePacket@handle^(0+128)
  2705                           
  2706                           ;usb_device.c: 1186: }
  2707                           ;usb_device.c: 1190: if(handle == 0)
  2708  0CC3  0866               	movf	USBTransferOnePacket@handle^(0+128),w
  2709  0CC4  1D03               	btfss	3,2
  2710  0CC5  2CC8               	goto	l4247
  2711                           
  2712                           ;usb_device.c: 1191: {
  2713                           ;usb_device.c: 1192: return 0;
  2714  0CC6  3000               	movlw	0
  2715  0CC7  0008               	return
  2716  0CC8                     l4247:	
  2717                           
  2718                           ;usb_device.c: 1193: }
  2719                           ;usb_device.c: 1206: handle->ADR = (((WORD)(data))& 0x7FFF);
  2720  0CC8  0861               	movf	USBTransferOnePacket@data^(0+128),w
  2721  0CC9  00E3               	movwf	??_USBTransferOnePacket^(0+128)
  2722  0CCA  3002               	movlw	2
  2723  0CCB  00E4               	movwf	(??_USBTransferOnePacket^(0+128)+1)
  2724  0CCC  0866               	movf	USBTransferOnePacket@handle^(0+128),w
  2725  0CCD  3E02               	addlw	2
  2726  0CCE  0086               	movwf	6
  2727  0CCF  0187               	clrf	7
  2728  0CD0  0863               	movf	??_USBTransferOnePacket^(0+128),w
  2729  0CD1  3FC0               	movwi [0]fsr1
  2730  0CD2  0864               	movf	(??_USBTransferOnePacket^(0+128)+1),w
  2731  0CD3  3FC1               	movwi [1]fsr1
  2732                           
  2733                           ;usb_device.c: 1207: handle->CNT = len;
  2734  0CD4  0862               	movf	USBTransferOnePacket@len^(0+128),w
  2735  0CD5  00E3               	movwf	??_USBTransferOnePacket^(0+128)
  2736  0CD6  0A66               	incf	USBTransferOnePacket@handle^(0+128),w
  2737  0CD7  0086               	movwf	6
  2738  0CD8  0187               	clrf	7
  2739  0CD9  0863               	movf	??_USBTransferOnePacket^(0+128),w
  2740  0CDA  0081               	movwf	1
  2741                           
  2742                           ;usb_device.c: 1208: handle->STAT.Val &= 0x40;
  2743  0CDB  3040               	movlw	64
  2744  0CDC  00E3               	movwf	??_USBTransferOnePacket^(0+128)
  2745  0CDD  0866               	movf	USBTransferOnePacket@handle^(0+128),w
  2746  0CDE  0086               	movwf	6
  2747  0CDF  0187               	clrf	7
  2748  0CE0  0863               	movf	??_USBTransferOnePacket^(0+128),w
  2749  0CE1  0581               	andwf	1,f
  2750                           
  2751                           ;usb_device.c: 1209: handle->STAT.Val |= 0x80 | (0x08 & 0x08);
  2752  0CE2  3088               	movlw	136
  2753  0CE3  00E3               	movwf	??_USBTransferOnePacket^(0+128)
  2754  0CE4  0866               	movf	USBTransferOnePacket@handle^(0+128),w
  2755  0CE5  0086               	movwf	6
  2756  0CE6  0187               	clrf	7
  2757  0CE7  0863               	movf	??_USBTransferOnePacket^(0+128),w
  2758  0CE8  0481               	iorwf	1,f
  2759                           
  2760                           ;usb_device.c: 1212: if(dir != 0)
  2761  0CE9  0860               	movf	USBTransferOnePacket@dir^(0+128),w
  2762  0CEA  1903               	btfsc	3,2
  2763  0CEB  2CF3               	goto	l4259
  2764                           
  2765                           ;usb_device.c: 1213: {
  2766                           ;usb_device.c: 1215: ((BYTE_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;;
  2767  0CEC  3004               	movlw	4
  2768  0CED  00E3               	movwf	??_USBTransferOnePacket^(0+128)
  2769  0CEE  0865               	movf	USBTransferOnePacket@ep^(0+128),w
  2770  0CEF  3EB2               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  2771  0CF0  0086               	movwf	6
  2772  0CF1  0187               	clrf	7
  2773  0CF2  2CFA               	goto	L4
  2774  0CF3                     l4259:	
  2775                           ;usb_device.c: 1216: }
  2776                           
  2777                           
  2778                           ;usb_device.c: 1217: else
  2779                           ;usb_device.c: 1218: {
  2780                           ;usb_device.c: 1220: ((BYTE_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;;
  2781  0CF3  3004               	movlw	4
  2782  0CF4  00E3               	movwf	??_USBTransferOnePacket^(0+128)
  2783  0CF5  0865               	movf	USBTransferOnePacket@ep^(0+128),w
  2784  0CF6  3E35               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  2785  0CF7  0086               	movwf	6
  2786  0CF8  3001               	movlw	1	; select bank2/3
  2787  0CF9  0087               	movwf	7
  2788  0CFA                     L4:	
  2789  0CFA  0863               	movf	??_USBTransferOnePacket^(0+128),w
  2790  0CFB  0681               	xorwf	1,f
  2791                           
  2792                           ;usb_device.c: 1221: }
  2793                           ;usb_device.c: 1222: return (void*)handle;
  2794  0CFC  0866               	movf	USBTransferOnePacket@handle^(0+128),w
  2795  0CFD  0008               	return
  2796  0CFE                     __end_of_USBTransferOnePacket:	
  2797                           
  2798                           	psect	text9
  2799  04D9                     __ptext9:	
  2800 ;; *************** function _BlinkUSBStatus *****************
  2801 ;; Defined at:
  2802 ;;		line 172 in file "../main.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;		None
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;		None
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  1    wreg      void 
  2809 ;; Registers used:
  2810 ;;		wreg, status,2, status,0
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2820 ;;Total ram usage:        0 bytes
  2821 ;; Hardware stack levels used:    1
  2822 ;; Hardware stack levels required when called:   11
  2823 ;; This function calls:
  2824 ;;		Nothing
  2825 ;; This function is called by:
  2826 ;;		_ProcessIO
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           
  2831                           ;psect for function _BlinkUSBStatus
  2832  04D9                     _BlinkUSBStatus:	
  2833                           
  2834                           ;main.c: 174: static WORD led_count=0;
  2835                           ;main.c: 176: if(led_count==0)led_count=10000U;
  2836                           
  2837                           ;incstack = 0
  2838                           ; Regs used in _BlinkUSBStatus: [wreg+status,2+status,0]
  2839  04D9  0021               	movlb	1	; select bank1
  2840  04DA  0835               	movf	BlinkUSBStatus@led_count^(0+128),w
  2841  04DB  0436               	iorwf	(BlinkUSBStatus@led_count+1)^(0+128),w
  2842  04DC  1D03               	btfss	3,2
  2843  04DD  2CE2               	goto	l662
  2844  04DE  3010               	movlw	16
  2845  04DF  00B5               	movwf	BlinkUSBStatus@led_count^(0+128)
  2846  04E0  3027               	movlw	39
  2847  04E1  00B6               	movwf	(BlinkUSBStatus@led_count^(0+128)+1)
  2848  04E2                     l662:	
  2849                           
  2850                           ;main.c: 177: led_count--;
  2851  04E2  3001               	movlw	1
  2852  04E3  02B5               	subwf	BlinkUSBStatus@led_count^(0+128),f
  2853  04E4  3000               	movlw	0
  2854  04E5  3BB6               	subwfb	(BlinkUSBStatus@led_count+1)^(0+128),f
  2855                           
  2856                           ;main.c: 184: if(UCONbits.SUSPND==1)
  2857  04E6  003D               	movlb	29	; select bank29
  2858  04E7  1C8E               	btfss	14,1	;volatile
  2859  04E8  2CFF               	goto	l3741
  2860                           
  2861                           ;main.c: 185: {
  2862                           ;main.c: 186: if(led_count==0)
  2863  04E9  0021               	movlb	1	; select bank1
  2864  04EA  0835               	movf	BlinkUSBStatus@led_count^(0+128),w
  2865  04EB  0436               	iorwf	(BlinkUSBStatus@led_count+1)^(0+128),w
  2866  04EC  1D03               	btfss	3,2
  2867  04ED  0008               	return
  2868                           
  2869                           ;main.c: 187: {
  2870                           ;main.c: 188: LATCbits.LATC0 = !LATCbits.LATC0;
  2871  04EE  1003               	clrc
  2872  04EF  0022               	movlb	2	; select bank2
  2873  04F0  1C0E               	btfss	14,0	;volatile
  2874  04F1  1403               	setc
  2875  04F2  1C03               	btfss	3,0
  2876  04F3  2CF7               	goto	u3480
  2877  04F4  0022               	movlb	2	; select bank2
  2878  04F5  140E               	bsf	14,0	;volatile
  2879  04F6  2CF9               	goto	l3737
  2880  04F7                     u3480:	
  2881  04F7  0022               	movlb	2	; select bank2
  2882  04F8  100E               	bcf	14,0	;volatile
  2883  04F9                     l3737:	
  2884                           
  2885                           ;main.c: 189: if(LATCbits.LATC0) LATCbits.LATC1 = 0;
  2886  04F9  1C0E               	btfss	14,0	;volatile
  2887  04FA  2CFD               	goto	l665
  2888  04FB  108E               	bcf	14,1	;volatile
  2889  04FC  0008               	return
  2890  04FD                     l665:	
  2891                           
  2892                           ;main.c: 190: else LATCbits.LATC1 = 1;
  2893  04FD  148E               	bsf	14,1	;volatile
  2894                           
  2895                           ;main.c: 191: }
  2896                           ;main.c: 192: }
  2897  04FE  0008               	return
  2898  04FF                     l3741:	
  2899                           
  2900                           ;main.c: 193: else
  2901                           ;main.c: 194: {
  2902                           ;main.c: 195: if(USBDeviceState==DETACHED_STATE)
  2903  04FF  0021               	movlb	1	; select bank1
  2904  0500  0853               	movf	_USBDeviceState^(0+128),w	;volatile
  2905  0501  1D03               	btfss	3,2
  2906  0502  2D07               	goto	l3745
  2907                           
  2908                           ;main.c: 196: {
  2909                           ;main.c: 197: {LATCbits.LATC0 = 1;LATCbits.LATC1 = 1;};
  2910  0503  0022               	movlb	2	; select bank2
  2911  0504  140E               	bsf	14,0	;volatile
  2912  0505  148E               	bsf	14,1	;volatile
  2913                           
  2914                           ;main.c: 198: }
  2915  0506  0008               	return
  2916  0507                     l3745:	
  2917                           
  2918                           ;main.c: 199: else if(USBDeviceState==ATTACHED_STATE)
  2919  0507  0021               	movlb	1	; select bank1
  2920  0508  0353               	decf	_USBDeviceState^(0+128),w	;volatile
  2921  0509  1D03               	btfss	3,2
  2922  050A  2D0F               	goto	l3749
  2923                           
  2924                           ;main.c: 200: {
  2925                           ;main.c: 201: {LATCbits.LATC0 = 0;LATCbits.LATC1 = 0;};
  2926  050B  0022               	movlb	2	; select bank2
  2927  050C  100E               	bcf	14,0	;volatile
  2928  050D  108E               	bcf	14,1	;volatile
  2929                           
  2930                           ;main.c: 202: }
  2931  050E  0008               	return
  2932  050F                     l3749:	
  2933                           
  2934                           ;main.c: 203: else if(USBDeviceState==POWERED_STATE)
  2935  050F  3002               	movlw	2
  2936  0510  0021               	movlb	1	; select bank1
  2937  0511  0653               	xorwf	_USBDeviceState^(0+128),w	;volatile
  2938  0512  1D03               	btfss	3,2
  2939  0513  2D18               	goto	l3753
  2940                           
  2941                           ;main.c: 204: {
  2942                           ;main.c: 205: {LATCbits.LATC0 = 0;LATCbits.LATC1 = 1;};
  2943  0514  0022               	movlb	2	; select bank2
  2944  0515  100E               	bcf	14,0	;volatile
  2945  0516  148E               	bsf	14,1	;volatile
  2946                           
  2947                           ;main.c: 206: }
  2948  0517  0008               	return
  2949  0518                     l3753:	
  2950                           
  2951                           ;main.c: 207: else if(USBDeviceState==DEFAULT_STATE)
  2952  0518  3004               	movlw	4
  2953  0519  0021               	movlb	1	; select bank1
  2954  051A  0653               	xorwf	_USBDeviceState^(0+128),w	;volatile
  2955  051B  1D03               	btfss	3,2
  2956  051C  2D21               	goto	l3757
  2957                           
  2958                           ;main.c: 208: {
  2959                           ;main.c: 209: {LATCbits.LATC0 = 1;LATCbits.LATC1 = 0;};
  2960  051D  0022               	movlb	2	; select bank2
  2961  051E  140E               	bsf	14,0	;volatile
  2962  051F  108E               	bcf	14,1	;volatile
  2963                           
  2964                           ;main.c: 210: }
  2965  0520  0008               	return
  2966  0521                     l3757:	
  2967                           
  2968                           ;main.c: 211: else if(USBDeviceState==ADDRESS_STATE)
  2969  0521  3010               	movlw	16
  2970  0522  0021               	movlb	1	; select bank1
  2971  0523  0653               	xorwf	_USBDeviceState^(0+128),w	;volatile
  2972  0524  1D03               	btfss	3,2
  2973  0525  2D37               	goto	l3765
  2974                           
  2975                           ;main.c: 212: {
  2976                           ;main.c: 213: if(led_count==0)
  2977  0526  0835               	movf	BlinkUSBStatus@led_count^(0+128),w
  2978  0527  0436               	iorwf	(BlinkUSBStatus@led_count+1)^(0+128),w
  2979  0528  1D03               	btfss	3,2
  2980  0529  0008               	return
  2981                           
  2982                           ;main.c: 214: {
  2983                           ;main.c: 215: LATCbits.LATC0 = !LATCbits.LATC0;
  2984  052A  1003               	clrc
  2985  052B  0022               	movlb	2	; select bank2
  2986  052C  1C0E               	btfss	14,0	;volatile
  2987  052D  1403               	setc
  2988  052E  1C03               	btfss	3,0
  2989  052F  2D33               	goto	u3570
  2990  0530  0022               	movlb	2	; select bank2
  2991  0531  140E               	bsf	14,0	;volatile
  2992  0532  2D35               	goto	l3763
  2993  0533                     u3570:	
  2994  0533  0022               	movlb	2	; select bank2
  2995  0534  100E               	bcf	14,0	;volatile
  2996  0535                     l3763:	
  2997                           
  2998                           ;main.c: 216: LATCbits.LATC1 = 1;
  2999  0535  148E               	bsf	14,1	;volatile
  3000                           
  3001                           ;main.c: 217: }
  3002                           ;main.c: 218: }
  3003  0536  0008               	return
  3004  0537                     l3765:	
  3005                           
  3006                           ;main.c: 219: else if(USBDeviceState==CONFIGURED_STATE)
  3007  0537  3020               	movlw	32
  3008  0538  0021               	movlb	1	; select bank1
  3009  0539  0653               	xorwf	_USBDeviceState^(0+128),w	;volatile
  3010  053A  1D03               	btfss	3,2
  3011  053B  0008               	return
  3012                           
  3013                           ;main.c: 220: {
  3014                           ;main.c: 221: if(led_count==0)
  3015  053C  0835               	movf	BlinkUSBStatus@led_count^(0+128),w
  3016  053D  0436               	iorwf	(BlinkUSBStatus@led_count+1)^(0+128),w
  3017  053E  1D03               	btfss	3,2
  3018  053F  0008               	return
  3019                           
  3020                           ;main.c: 222: {
  3021                           ;main.c: 223: if(LATCbits.LATC3)
  3022  0540  0022               	movlb	2	; select bank2
  3023  0541  1D8E               	btfss	14,3	;volatile
  3024  0542  2D4E               	goto	l681
  3025                           
  3026                           ;main.c: 224: {
  3027                           ;main.c: 225: if(LATCbits.LATC0)
  3028  0543  1C0E               	btfss	14,0	;volatile
  3029  0544  2D47               	goto	l3777
  3030                           
  3031                           ;main.c: 226: {
  3032                           ;main.c: 227: LATCbits.LATC0 = 1;
  3033  0545  140E               	bsf	14,0	;volatile
  3034  0546  2D51               	goto	l3783
  3035  0547                     l3777:	
  3036                           ;main.c: 229: }
  3037                           
  3038                           ;main.c: 228: receiving=0;
  3039                           
  3040                           
  3041                           ;main.c: 230: else if(receiving)
  3042  0547  0021               	movlb	1	; select bank1
  3043  0548  0837               	movf	_receiving^(0+128),w
  3044  0549  1903               	btfsc	3,2
  3045  054A  2D5A               	goto	l685
  3046                           
  3047                           ;main.c: 231: LATCbits.LATC0 = 0;
  3048  054B  0022               	movlb	2	; select bank2
  3049  054C  100E               	bcf	14,0	;volatile
  3050                           
  3051                           ;main.c: 232: }
  3052  054D  2D5A               	goto	l685
  3053  054E                     l681:	
  3054                           
  3055                           ;main.c: 233: else
  3056                           ;main.c: 234: {
  3057                           ;main.c: 235: if(!LATCbits.LATC0)
  3058  054E  180E               	btfsc	14,0	;volatile
  3059  054F  2D54               	goto	l3785
  3060                           
  3061                           ;main.c: 236: {
  3062                           ;main.c: 237: LATCbits.LATC0 = 0;
  3063  0550  100E               	bcf	14,0	;volatile
  3064  0551                     l3783:	
  3065                           
  3066                           ;main.c: 238: receiving=0;
  3067  0551  0021               	movlb	1	; select bank1
  3068  0552  01B7               	clrf	_receiving^(0+128)
  3069                           
  3070                           ;main.c: 239: }
  3071  0553  2D5A               	goto	l685
  3072  0554                     l3785:	
  3073                           
  3074                           ;main.c: 240: else if(receiving)
  3075  0554  0021               	movlb	1	; select bank1
  3076  0555  0837               	movf	_receiving^(0+128),w
  3077  0556  1903               	btfsc	3,2
  3078  0557  2D5A               	goto	l685
  3079                           
  3080                           ;main.c: 241: LATCbits.LATC0 = 1;
  3081  0558  0022               	movlb	2	; select bank2
  3082  0559  140E               	bsf	14,0	;volatile
  3083  055A                     l685:	
  3084                           
  3085                           ;main.c: 242: }
  3086                           ;main.c: 243: if(LATCbits.LATC1)
  3087  055A  0022               	movlb	2	; select bank2
  3088  055B  1C8E               	btfss	14,1	;volatile
  3089  055C  2D61               	goto	l3793
  3090                           
  3091                           ;main.c: 244: {
  3092                           ;main.c: 245: LATCbits.LATC1 = 1;
  3093  055D  148E               	bsf	14,1	;volatile
  3094                           
  3095                           ;main.c: 246: sending=0;
  3096  055E  0021               	movlb	1	; select bank1
  3097  055F  01B8               	clrf	_sending^(0+128)
  3098                           
  3099                           ;main.c: 247: }
  3100  0560  0008               	return
  3101  0561                     l3793:	
  3102                           
  3103                           ;main.c: 248: else if(sending)
  3104  0561  0021               	movlb	1	; select bank1
  3105  0562  0838               	movf	_sending^(0+128),w
  3106  0563  1903               	btfsc	3,2
  3107  0564  0008               	return
  3108                           
  3109                           ;main.c: 249: LATCbits.LATC1 = 0;
  3110  0565  0022               	movlb	2	; select bank2
  3111  0566  108E               	bcf	14,1	;volatile
  3112  0567  0008               	return
  3113  0568                     __end_of_BlinkUSBStatus:	
  3114                           
  3115                           	psect	text10
  3116  09CF                     __ptext10:	
  3117 ;; *************** function _InitializeSystem *****************
  3118 ;; Defined at:
  3119 ;;		line 53 in file "../main.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;		None
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;		None
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  1    wreg      void 
  3126 ;; Registers used:
  3127 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3137 ;;Total ram usage:        0 bytes
  3138 ;; Hardware stack levels used:    1
  3139 ;; Hardware stack levels required when called:   13
  3140 ;; This function calls:
  3141 ;;		_USBDeviceInit
  3142 ;;		_UserInit
  3143 ;; This function is called by:
  3144 ;;		_main
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           
  3149                           ;psect for function _InitializeSystem
  3150  09CF                     _InitializeSystem:	
  3151                           
  3152                           ;main.c: 55: ANSELA=0x00;
  3153                           
  3154                           ;incstack = 0
  3155                           ; Regs used in _InitializeSystem: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3156  09CF  0023               	movlb	3	; select bank3
  3157  09D0  018C               	clrf	12	;volatile
  3158                           
  3159                           ;main.c: 56: ANSELC=0x00;
  3160  09D1  018E               	clrf	14	;volatile
  3161                           
  3162                           ;main.c: 57: OSCTUNE=0;
  3163  09D2  0021               	movlb	1	; select bank1
  3164  09D3  0198               	clrf	24	;volatile
  3165                           
  3166                           ;main.c: 58: OSCCON=0xFC;
  3167  09D4  30FC               	movlw	252
  3168  09D5  0099               	movwf	25	;volatile
  3169                           
  3170                           ;main.c: 59: ACTCON=0x90;
  3171  09D6  3090               	movlw	144
  3172  09D7  0027               	movlb	7	; select bank7
  3173  09D8  009B               	movwf	27	;volatile
  3174                           
  3175                           ;main.c: 60: UserInit();
  3176  09D9  318A  22C2  3189   	fcall	_UserInit
  3177                           
  3178                           ;main.c: 61: USBDeviceInit();
  3179  09DC  3183  239C         	fcall	_USBDeviceInit
  3180  09DE  0008               	return
  3181  09DF                     __end_of_InitializeSystem:	
  3182                           
  3183                           	psect	text11
  3184  0AC2                     __ptext11:	
  3185 ;; *************** function _UserInit *****************
  3186 ;; Defined at:
  3187 ;;		line 64 in file "../main.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;		None
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;  i               1   11[BANK1 ] unsigned char 
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  1    wreg      void 
  3194 ;; Registers used:
  3195 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3202 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3203 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3204 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3205 ;;Total ram usage:        2 bytes
  3206 ;; Hardware stack levels used:    1
  3207 ;; Hardware stack levels required when called:   12
  3208 ;; This function calls:
  3209 ;;		_InitializeUSART
  3210 ;; This function is called by:
  3211 ;;		_InitializeSystem
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           
  3216                           ;psect for function _UserInit
  3217  0AC2                     _UserInit:	
  3218                           
  3219                           ;main.c: 66: uint8_t i;
  3220                           ;main.c: 67: InitializeUSART();
  3221                           
  3222                           ;incstack = 0
  3223                           ; Regs used in _UserInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3224  0AC2  3189  21DF  318A   	fcall	_InitializeUSART
  3225                           
  3226                           ;main.c: 68: for(i=0; i<sizeof (USB_Out_Buffer); i++) USB_Out_Buffer[i]=0;
  3227  0AC5  0021               	movlb	1	; select bank1
  3228  0AC6  01E3               	clrf	UserInit@i^(0+128)
  3229  0AC7  3040               	movlw	64
  3230  0AC8  0263               	subwf	UserInit@i^(0+128),w
  3231  0AC9  1803               	btfsc	3,0
  3232  0ACA  2AD9               	goto	l3703
  3233  0ACB                     l3697:	
  3234  0ACB  0863               	movf	UserInit@i^(0+128),w
  3235  0ACC  3EA0               	addlw	(low (_USB_Out_Buffer| (0+256)))& (0+255)
  3236  0ACD  0086               	movwf	6
  3237  0ACE  3001               	movlw	1	; select bank3/4
  3238  0ACF  0087               	movwf	7
  3239  0AD0  0181               	clrf	1
  3240  0AD1  3001               	movlw	1
  3241  0AD2  00E2               	movwf	??_UserInit^(0+128)
  3242  0AD3  0862               	movf	??_UserInit^(0+128),w
  3243  0AD4  07E3               	addwf	UserInit@i^(0+128),f
  3244  0AD5  3040               	movlw	64
  3245  0AD6  0263               	subwf	UserInit@i^(0+128),w
  3246  0AD7  1C03               	skipc
  3247  0AD8  2ACB               	goto	l3697
  3248  0AD9                     l3703:	
  3249                           
  3250                           ;main.c: 69: NextUSBOut=0;
  3251  0AD9  01BC               	clrf	_NextUSBOut^(0+128)
  3252                           
  3253                           ;main.c: 70: LastRS232Out=0;
  3254  0ADA  01BB               	clrf	_LastRS232Out^(0+128)
  3255                           
  3256                           ;main.c: 71: lastTransmission=0;
  3257  0ADB  0022               	movlb	2	; select bank2
  3258  0ADC  01BE               	clrf	_lastTransmission^(0+256)
  3259                           
  3260                           ;main.c: 72: LATC &= 0xFC; TRISC &= 0xFC;
  3261  0ADD  30FC               	movlw	252
  3262  0ADE  0021               	movlb	1	; select bank1
  3263  0ADF  00E2               	movwf	??_UserInit^(0+128)
  3264  0AE0  0862               	movf	??_UserInit^(0+128),w
  3265  0AE1  0022               	movlb	2	; select bank2
  3266  0AE2  058E               	andwf	14,f	;volatile
  3267  0AE3  30FC               	movlw	252
  3268  0AE4  0021               	movlb	1	; select bank1
  3269  0AE5  00E2               	movwf	??_UserInit^(0+128)
  3270  0AE6  0862               	movf	??_UserInit^(0+128),w
  3271  0AE7  058E               	andwf	14,f	;volatile
  3272  0AE8  0008               	return
  3273  0AE9                     __end_of_UserInit:	
  3274                           
  3275                           	psect	text12
  3276  09DF                     __ptext12:	
  3277 ;; *************** function _InitializeUSART *****************
  3278 ;; Defined at:
  3279 ;;		line 75 in file "../main.c"
  3280 ;; Parameters:    Size  Location     Type
  3281 ;;		None
  3282 ;; Auto vars:     Size  Location     Type
  3283 ;;  c               1    9[BANK1 ] unsigned char 
  3284 ;; Return value:  Size  Location     Type
  3285 ;;                  1    wreg      void 
  3286 ;; Registers used:
  3287 ;;		wreg
  3288 ;; Tracked objects:
  3289 ;;		On entry : 0/0
  3290 ;;		On exit  : 0/0
  3291 ;;		Unchanged: 0/0
  3292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3294 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3295 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3296 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3297 ;;Total ram usage:        2 bytes
  3298 ;; Hardware stack levels used:    1
  3299 ;; Hardware stack levels required when called:   11
  3300 ;; This function calls:
  3301 ;;		Nothing
  3302 ;; This function is called by:
  3303 ;;		_UserInit
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           
  3308                           ;psect for function _InitializeUSART
  3309  09DF                     _InitializeUSART:	
  3310                           
  3311                           ;main.c: 77: uint8_t c;
  3312                           ;main.c: 79: TRISCbits.TRISC5=1;
  3313                           
  3314                           ;incstack = 0
  3315                           ; Regs used in _InitializeUSART: [wreg]
  3316  09DF  0021               	movlb	1	; select bank1
  3317  09E0  168E               	bsf	14,5	;volatile
  3318                           
  3319                           ;main.c: 80: TRISCbits.TRISC4=0;
  3320  09E1  120E               	bcf	14,4	;volatile
  3321                           
  3322                           ;main.c: 81: TXSTA=0x24;
  3323  09E2  3024               	movlw	36
  3324  09E3  0023               	movlb	3	; select bank3
  3325  09E4  009E               	movwf	30	;volatile
  3326                           
  3327                           ;main.c: 82: RCSTA=0x90;
  3328  09E5  3090               	movlw	144
  3329  09E6  009D               	movwf	29	;volatile
  3330                           
  3331                           ;main.c: 83: SPBRGL=0x71;
  3332  09E7  3071               	movlw	113
  3333  09E8  009B               	movwf	27	;volatile
  3334                           
  3335                           ;main.c: 84: SPBRGH=0x02;
  3336  09E9  3002               	movlw	2
  3337  09EA  009C               	movwf	28	;volatile
  3338                           
  3339                           ;main.c: 85: BAUDCON=0x08;
  3340  09EB  3008               	movlw	8
  3341  09EC  009F               	movwf	31	;volatile
  3342                           
  3343                           ;main.c: 86: c=RCREG;
  3344  09ED  0819               	movf	25,w	;volatile
  3345  09EE  0021               	movlb	1	; select bank1
  3346  09EF  00E0               	movwf	??_InitializeUSART^(0+128)
  3347  09F0  0860               	movf	??_InitializeUSART^(0+128),w
  3348  09F1  00E1               	movwf	InitializeUSART@c^(0+128)
  3349  09F2  0008               	return
  3350  09F3                     __end_of_InitializeUSART:	
  3351                           
  3352                           	psect	text13
  3353  039C                     __ptext13:	
  3354 ;; *************** function _USBDeviceInit *****************
  3355 ;; Defined at:
  3356 ;;		line 466 in file "../Microchip/USB/usb_device.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;		None
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;  p               2    9[BANK1 ] PTR unsigned char 
  3361 ;;		 -> UEP1(1), 
  3362 ;;  i               1   11[BANK1 ] unsigned char 
  3363 ;;  i               1   12[BANK1 ] unsigned char 
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  1    wreg      void 
  3366 ;; Registers used:
  3367 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3374 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3375 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3376 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3377 ;;Total ram usage:        5 bytes
  3378 ;; Hardware stack levels used:    1
  3379 ;; Hardware stack levels required when called:   11
  3380 ;; This function calls:
  3381 ;;		Nothing
  3382 ;; This function is called by:
  3383 ;;		_InitializeSystem
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387                           
  3388                           ;psect for function _USBDeviceInit
  3389  039C                     _USBDeviceInit:	
  3390                           
  3391                           ;usb_device.c: 468: BYTE i;
  3392                           ;usb_device.c: 470: {PIE2bits.USBIE = 0;};
  3393                           
  3394                           ;incstack = 0
  3395                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  3396  039C  0021               	movlb	1	; select bank1
  3397  039D  1112               	bcf	18,2	;volatile
  3398                           
  3399                           ;usb_device.c: 473: UEIR = 0;;
  3400  039E  003D               	movlb	29	; select bank29
  3401  039F  0193               	clrf	19	;volatile
  3402                           
  3403                           ;usb_device.c: 476: UIR = 0;;
  3404  03A0  0190               	clrf	16	;volatile
  3405                           
  3406                           ;usb_device.c: 479: UEP0 = 0;
  3407  03A1  0198               	clrf	24	;volatile
  3408                           
  3409                           ;usb_device.c: 481: { BYTE i; BYTE* p = (BYTE*)&UEP1; for(i=0;i<2;i++) *p++ = 0; };
  3410  03A2  300E               	movlw	14
  3411  03A3  0021               	movlb	1	; select bank1
  3412  03A4  00E2               	movwf	(USBDeviceInit@p+1)^(0+128)
  3413  03A5  3099               	movlw	153
  3414  03A6  00E1               	movwf	USBDeviceInit@p^(0+128)
  3415  03A7  01E3               	clrf	USBDeviceInit@i_740^(0+128)
  3416  03A8  3002               	movlw	2
  3417  03A9  0263               	subwf	USBDeviceInit@i_740^(0+128),w
  3418  03AA  1803               	btfsc	3,0
  3419  03AB  2BBD               	goto	l3449
  3420  03AC                     l3441:	
  3421  03AC  0861               	movf	USBDeviceInit@p^(0+128),w
  3422  03AD  0086               	movwf	6
  3423  03AE  0862               	movf	(USBDeviceInit@p+1)^(0+128),w
  3424  03AF  0087               	movwf	7
  3425  03B0  0181               	clrf	1
  3426  03B1  3001               	movlw	1
  3427  03B2  07E1               	addwf	USBDeviceInit@p^(0+128),f
  3428  03B3  3000               	movlw	0
  3429  03B4  3DE2               	addwfc	(USBDeviceInit@p+1)^(0+128),f
  3430  03B5  3001               	movlw	1
  3431  03B6  00E0               	movwf	??_USBDeviceInit^(0+128)
  3432  03B7  0860               	movf	??_USBDeviceInit^(0+128),w
  3433  03B8  07E3               	addwf	USBDeviceInit@i_740^(0+128),f
  3434  03B9  3002               	movlw	2
  3435  03BA  0263               	subwf	USBDeviceInit@i_740^(0+128),w
  3436  03BB  1C03               	skipc
  3437  03BC  2BAC               	goto	l3441
  3438  03BD                     l3449:	
  3439                           
  3440                           ;usb_device.c: 483: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  3441  03BD  3016               	movlw	22
  3442  03BE  003D               	movlb	29	; select bank29
  3443  03BF  0091               	movwf	17	;volatile
  3444  03C0  309F               	movlw	159
  3445  03C1  0097               	movwf	23	;volatile
  3446  03C2  307B               	movlw	123
  3447  03C3  0092               	movwf	18	;volatile
  3448                           
  3449                           ;usb_device.c: 486: ;
  3450                           ;usb_device.c: 489: ;
  3451                           ;usb_device.c: 492: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  3452  03C4  0021               	movlb	1	; select bank1
  3453  03C5  01E4               	clrf	USBDeviceInit@i^(0+128)
  3454  03C6  300C               	movlw	12
  3455  03C7  0264               	subwf	USBDeviceInit@i^(0+128),w
  3456  03C8  1803               	btfsc	3,0
  3457  03C9  2BE3               	goto	l130
  3458  03CA                     l3457:	
  3459                           
  3460                           ;usb_device.c: 493: {
  3461                           ;usb_device.c: 494: BDT[i].Val = 0x00;
  3462  03CA  0864               	movf	USBDeviceInit@i^(0+128),w
  3463  03CB  00E0               	movwf	??_USBDeviceInit^(0+128)
  3464  03CC  3001               	movlw	1
  3465  03CD                     u3115:	
  3466  03CD  35E0               	lslf	??_USBDeviceInit^(0+128),f
  3467  03CE  3EFF               	addlw	-1
  3468  03CF  1D03               	skipz
  3469  03D0  2BCD               	goto	u3115
  3470  03D1  3560               	lslf	??_USBDeviceInit^(0+128),w
  3471  03D2  3E20               	addlw	32
  3472  03D3  0086               	movwf	6
  3473  03D4  0187               	clrf	7
  3474  03D5  3000               	movlw	0
  3475  03D6  3FC0               	movwi [0]fsr1
  3476  03D7  3000               	movlw	0
  3477  03D8  3FC1               	movwi [1]fsr1
  3478  03D9  3FC2               	movwi [2]fsr1
  3479  03DA  3FC3               	movwi [3]fsr1
  3480  03DB  3001               	movlw	1
  3481  03DC  00E0               	movwf	??_USBDeviceInit^(0+128)
  3482  03DD  0860               	movf	??_USBDeviceInit^(0+128),w
  3483  03DE  07E4               	addwf	USBDeviceInit@i^(0+128),f
  3484  03DF  300C               	movlw	12
  3485  03E0  0264               	subwf	USBDeviceInit@i^(0+128),w
  3486  03E1  1C03               	skipc
  3487  03E2  2BCA               	goto	l3457
  3488  03E3                     l130:	
  3489                           
  3490                           ;usb_device.c: 495: }
  3491                           ;usb_device.c: 498: UCONbits.PPBRST = 1;
  3492  03E3  003D               	movlb	29	; select bank29
  3493  03E4  170E               	bsf	14,6	;volatile
  3494                           
  3495                           ;usb_device.c: 501: UADDR = 0x00;
  3496  03E5  0196               	clrf	22	;volatile
  3497                           
  3498                           ;usb_device.c: 504: UCONbits.PKTDIS = 0;
  3499  03E6  120E               	bcf	14,4	;volatile
  3500                           
  3501                           ;usb_device.c: 507: UCONbits.PPBRST = 0;
  3502  03E7  130E               	bcf	14,6	;volatile
  3503  03E8                     l3477:	
  3504                           ;usb_device.c: 510: while(UIRbits.TRNIF == 1)
  3505                           
  3506  03E8  003D               	movlb	29	; select bank29
  3507  03E9  1D90               	btfss	16,3	;volatile
  3508  03EA  2BF7               	goto	l3479
  3509                           
  3510                           ;usb_device.c: 511: {
  3511                           ;usb_device.c: 512: (UIR &= 0xF7);
  3512  03EB  30F7               	movlw	247
  3513  03EC  0021               	movlb	1	; select bank1
  3514  03ED  00E0               	movwf	??_USBDeviceInit^(0+128)
  3515  03EE  0860               	movf	??_USBDeviceInit^(0+128),w
  3516  03EF  003D               	movlb	29	; select bank29
  3517  03F0  0590               	andwf	16,f	;volatile
  3518                           
  3519                           ;usb_device.c: 514: inPipes[0].info.Val = 0;
  3520  03F1  0021               	movlb	1	; select bank1
  3521  03F2  01A9               	clrf	(_inPipes^(0+128)+2)	;volatile
  3522                           
  3523                           ;usb_device.c: 515: outPipes[0].info.Val = 0;
  3524  03F3  01A2               	clrf	(_outPipes^(0+128)+2)	;volatile
  3525                           
  3526                           ;usb_device.c: 516: outPipes[0].wCount.Val = 0;
  3527  03F4  01A3               	clrf	(_outPipes^(0+128)+3)	;volatile
  3528  03F5  01A4               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
  3529  03F6  2BE8               	goto	l3477
  3530  03F7                     l3479:	
  3531                           
  3532                           ;usb_device.c: 517: }
  3533                           ;usb_device.c: 521: USBStatusStageEnabledFlag1 = TRUE;
  3534  03F7  3001               	movlw	1
  3535  03F8  0021               	movlb	1	; select bank1
  3536  03F9  00E0               	movwf	??_USBDeviceInit^(0+128)
  3537  03FA  0860               	movf	??_USBDeviceInit^(0+128),w
  3538  03FB  00C7               	movwf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  3539                           
  3540                           ;usb_device.c: 522: USBStatusStageEnabledFlag2 = TRUE;
  3541  03FC  3001               	movlw	1
  3542  03FD  00E0               	movwf	??_USBDeviceInit^(0+128)
  3543  03FE  0860               	movf	??_USBDeviceInit^(0+128),w
  3544  03FF  00C6               	movwf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  3545                           
  3546                           ;usb_device.c: 524: USBDeferINDataStagePackets = FALSE;
  3547  0400  01C5               	clrf	_USBDeferINDataStagePackets^(0+128)	;volatile
  3548                           
  3549                           ;usb_device.c: 525: USBDeferOUTDataStagePackets = FALSE;
  3550  0401  01C4               	clrf	_USBDeferOUTDataStagePackets^(0+128)	;volatile
  3551                           
  3552                           ;usb_device.c: 526: USBBusIsSuspended = FALSE;
  3553  0402  01CC               	clrf	_USBBusIsSuspended^(0+128)	;volatile
  3554                           
  3555                           ;usb_device.c: 530: for(i = 0; i < (BYTE)(2+1u); i++)
  3556  0403  01E4               	clrf	USBDeviceInit@i^(0+128)
  3557  0404  3003               	movlw	3
  3558  0405  0264               	subwf	USBDeviceInit@i^(0+128),w
  3559  0406  1803               	btfsc	3,0
  3560  0407  2C25               	goto	l3497
  3561  0408                     l3491:	
  3562                           
  3563                           ;usb_device.c: 531: {
  3564                           ;usb_device.c: 532: pBDTEntryIn[i] = 0u;
  3565  0408  0864               	movf	USBDeviceInit@i^(0+128),w
  3566  0409  3EB2               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  3567  040A  0086               	movwf	6
  3568  040B  0187               	clrf	7
  3569  040C  0181               	clrf	1
  3570                           
  3571                           ;usb_device.c: 533: pBDTEntryOut[i] = 0u;
  3572  040D  0864               	movf	USBDeviceInit@i^(0+128),w
  3573  040E  3E35               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  3574  040F  0086               	movwf	6
  3575  0410  3001               	movlw	1	; select bank2/3
  3576  0411  0087               	movwf	7
  3577  0412  0181               	clrf	1
  3578                           
  3579                           ;usb_device.c: 534: ep_data_in[i].Val = 0u;
  3580  0413  0864               	movf	USBDeviceInit@i^(0+128),w
  3581  0414  3EAF               	addlw	(low (_ep_data_in| 0))& (0+255)
  3582  0415  0086               	movwf	6
  3583  0416  0187               	clrf	7
  3584  0417  0181               	clrf	1
  3585                           
  3586                           ;usb_device.c: 535: ep_data_out[i].Val = 0u;
  3587  0418  0864               	movf	USBDeviceInit@i^(0+128),w
  3588  0419  3EAC               	addlw	(low (_ep_data_out| 0))& (0+255)
  3589  041A  0086               	movwf	6
  3590  041B  0187               	clrf	7
  3591  041C  0181               	clrf	1
  3592  041D  3001               	movlw	1
  3593  041E  00E0               	movwf	??_USBDeviceInit^(0+128)
  3594  041F  0860               	movf	??_USBDeviceInit^(0+128),w
  3595  0420  07E4               	addwf	USBDeviceInit@i^(0+128),f
  3596  0421  3003               	movlw	3
  3597  0422  0264               	subwf	USBDeviceInit@i^(0+128),w
  3598  0423  1C03               	skipc
  3599  0424  2C08               	goto	l3491
  3600  0425                     l3497:	
  3601                           
  3602                           ;usb_device.c: 536: }
  3603                           ;usb_device.c: 539: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  3604  0425  3028               	movlw	40
  3605  0426  00E0               	movwf	??_USBDeviceInit^(0+128)
  3606  0427  0860               	movf	??_USBDeviceInit^(0+128),w
  3607  0428  00B2               	movwf	_pBDTEntryIn^(0+128)
  3608                           
  3609                           ;usb_device.c: 541: UEP0 = 0x06|0x10;
  3610  0429  3016               	movlw	22
  3611  042A  003D               	movlb	29	; select bank29
  3612  042B  0098               	movwf	24	;volatile
  3613                           
  3614                           ;usb_device.c: 543: BDT[0].ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  3615  042C  3000               	movlw	0
  3616  042D  0020               	movlb	0	; select bank0
  3617  042E  00A3               	movwf	35	;volatile
  3618  042F  3050               	movlw	80
  3619  0430  00A2               	movwf	34	;volatile
  3620                           
  3621                           ;usb_device.c: 544: BDT[0].CNT = 8;
  3622  0431  3008               	movlw	8
  3623  0432  00A1               	movwf	33	;volatile
  3624                           
  3625                           ;usb_device.c: 545: BDT[0].STAT.Val = 0x80|0x00|0x04;
  3626  0433  3084               	movlw	132
  3627  0434  0021               	movlb	1	; select bank1
  3628  0435  00E0               	movwf	??_USBDeviceInit^(0+128)
  3629  0436  0860               	movf	??_USBDeviceInit^(0+128),w
  3630  0437  0020               	movlb	0	; select bank0
  3631  0438  00A0               	movwf	32	;volatile
  3632                           
  3633                           ;usb_device.c: 548: USBActiveConfiguration = 0;
  3634  0439  0021               	movlb	1	; select bank1
  3635  043A  01D7               	clrf	_USBActiveConfiguration^(0+128)	;volatile
  3636                           
  3637                           ;usb_device.c: 551: USBDeviceState = DETACHED_STATE;
  3638  043B  01D3               	clrf	_USBDeviceState^(0+128)	;volatile
  3639  043C  0008               	return
  3640  043D                     __end_of_USBDeviceInit:	
  3641                           
  3642                           	psect	intentry
  3643  0004                     __pintentry:	
  3644 ;; *************** function _ISRCode *****************
  3645 ;; Defined at:
  3646 ;;		line 41 in file "../main.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;		None
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;		None
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  1    wreg      void 
  3653 ;; Registers used:
  3654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3662 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3663 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3664 ;;Total ram usage:        1 bytes
  3665 ;; Hardware stack levels used:    1
  3666 ;; Hardware stack levels required when called:   10
  3667 ;; This function calls:
  3668 ;;		_USBDeviceTasks
  3669 ;; This function is called by:
  3670 ;;		Interrupt level 1
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674  0004                     _ISRCode:	
  3675                           
  3676                           ;incstack = 0
  3677  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3678                           
  3679                           ; Regs used in _ISRCode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3680  0005  3180               	pagesel	$
  3681  0006  0020               	movlb	0	; select bank0
  3682  0007  087F               	movf	127,w
  3683  0008  0021               	movlb	1	; select bank1
  3684  0009  00DF               	movwf	??_ISRCode^(0+128)
  3685                           
  3686                           ;main.c: 43: USBDeviceTasks();
  3687  000A  3181  213B         	fcall	_USBDeviceTasks
  3688  000C  0021               	movlb	1	; select bank1
  3689  000D  085F               	movf	??_ISRCode^(0+128),w
  3690  000E  0020               	movlb	0	; select bank0
  3691  000F  00FF               	movwf	127
  3692  0010  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3693  0011  0009               	retfie
  3694  0012                     __end_of_ISRCode:	
  3695                           
  3696                           	psect	text15
  3697  013B                     __ptext15:	
  3698 ;; *************** function _USBDeviceTasks *****************
  3699 ;; Defined at:
  3700 ;;		line 660 in file "../Microchip/USB/usb_device.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;		None
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;  i               1    6[BANK1 ] unsigned char 
  3705 ;; Return value:  Size  Location     Type
  3706 ;;                  1    wreg      void 
  3707 ;; Registers used:
  3708 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3715 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3716 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3717 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3718 ;;Total ram usage:        3 bytes
  3719 ;; Hardware stack levels used:    1
  3720 ;; Hardware stack levels required when called:    9
  3721 ;; This function calls:
  3722 ;;		_USBCtrlEPAllowStatusStage
  3723 ;;		_USBCtrlEPService
  3724 ;;		_USBStallHandler
  3725 ;;		_USBSuspend
  3726 ;;		_USBWakeFromSuspend
  3727 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3728 ;;		i1_USBDeviceInit
  3729 ;; This function is called by:
  3730 ;;		_ISRCode
  3731 ;; This function uses a non-reentrant model
  3732 ;;
  3733                           
  3734                           
  3735                           ;psect for function _USBDeviceTasks
  3736  013B                     _USBDeviceTasks:	
  3737                           
  3738                           ;usb_device.c: 670: BYTE i;
  3739                           ;usb_device.c: 781: if(USBDeviceState == ATTACHED_STATE)
  3740                           
  3741                           ;incstack = 0
  3742                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3743  013B  0021               	movlb	1	; select bank1
  3744  013C  0353               	decf	_USBDeviceState^(0+128),w	;volatile
  3745  013D  1D03               	btfss	3,2
  3746  013E  294A               	goto	i1l3885
  3747                           
  3748                           ;usb_device.c: 782: {
  3749                           ;usb_device.c: 792: if(!UCONbits.SE0)
  3750  013F  003D               	movlb	29	; select bank29
  3751  0140  1A8E               	btfsc	14,5	;volatile
  3752  0141  294A               	goto	i1l3885
  3753                           
  3754                           ;usb_device.c: 793: {
  3755                           ;usb_device.c: 794: UIR = 0;;
  3756  0142  0190               	clrf	16	;volatile
  3757                           
  3758                           ;usb_device.c: 798: UIEbits.URSTIE = 1;
  3759  0143  1412               	bsf	18,0	;volatile
  3760                           
  3761                           ;usb_device.c: 799: UIEbits.IDLEIE = 1;
  3762  0144  1612               	bsf	18,4	;volatile
  3763                           
  3764                           ;usb_device.c: 800: USBDeviceState = POWERED_STATE;
  3765  0145  3002               	movlw	2
  3766  0146  0021               	movlb	1	; select bank1
  3767  0147  00DC               	movwf	??_USBDeviceTasks^(0+128)
  3768  0148  085C               	movf	??_USBDeviceTasks^(0+128),w
  3769  0149  00D3               	movwf	_USBDeviceState^(0+128)	;volatile
  3770  014A                     i1l3885:	
  3771                           
  3772                           ;usb_device.c: 801: }
  3773                           ;usb_device.c: 802: }
  3774                           ;usb_device.c: 818: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  3775  014A  003D               	movlb	29	; select bank29
  3776  014B  1910               	btfsc	16,2	;volatile
  3777  014C  1D12               	btfss	18,2	;volatile
  3778  014D  2957               	goto	i1l3893
  3779                           
  3780                           ;usb_device.c: 819: {
  3781                           ;usb_device.c: 820: (UIR &= 0xFB);
  3782  014E  30FB               	movlw	251
  3783  014F  0021               	movlb	1	; select bank1
  3784  0150  00DC               	movwf	??_USBDeviceTasks^(0+128)
  3785  0151  085C               	movf	??_USBDeviceTasks^(0+128),w
  3786  0152  003D               	movlb	29	; select bank29
  3787  0153  0590               	andwf	16,f	;volatile
  3788                           
  3789                           ;usb_device.c: 824: USBWakeFromSuspend();
  3790  0154  3189  21F3  3181   	fcall	_USBWakeFromSuspend
  3791  0157                     i1l3893:	
  3792                           
  3793                           ;usb_device.c: 826: }
  3794                           ;usb_device.c: 831: if(UCONbits.SUSPND==1)
  3795  0157  003D               	movlb	29	; select bank29
  3796  0158  1C8E               	btfss	14,1	;volatile
  3797  0159  295D               	goto	i1l142
  3798                           
  3799                           ;usb_device.c: 832: {
  3800                           ;usb_device.c: 833: PIR2bits.USBIF = 0;;
  3801  015A  0020               	movlb	0	; select bank0
  3802  015B  1112               	bcf	18,2	;volatile
  3803                           
  3804                           ;usb_device.c: 834: return;
  3805  015C  0008               	return
  3806  015D                     i1l142:	
  3807                           
  3808                           ;usb_device.c: 835: }
  3809                           ;usb_device.c: 847: if(UIRbits.URSTIF && UIEbits.URSTIE)
  3810  015D  1810               	btfsc	16,0	;volatile
  3811  015E  1C12               	btfss	18,0	;volatile
  3812  015F  296E               	goto	i1l3907
  3813                           
  3814                           ;usb_device.c: 848: {
  3815                           ;usb_device.c: 849: USBDeviceInit();
  3816  0160  3184  243D  3181   	fcall	i1_USBDeviceInit
  3817                           
  3818                           ;usb_device.c: 853: {PIE2bits.USBIE = 1;};
  3819  0163  0021               	movlb	1	; select bank1
  3820  0164  1512               	bsf	18,2	;volatile
  3821                           
  3822                           ;usb_device.c: 855: USBDeviceState = DEFAULT_STATE;
  3823  0165  3004               	movlw	4
  3824  0166  00DC               	movwf	??_USBDeviceTasks^(0+128)
  3825  0167  085C               	movf	??_USBDeviceTasks^(0+128),w
  3826  0168  00D3               	movwf	_USBDeviceState^(0+128)	;volatile
  3827                           
  3828                           ;usb_device.c: 865: (UIR &= 0xFE);
  3829  0169  30FE               	movlw	254
  3830  016A  00DC               	movwf	??_USBDeviceTasks^(0+128)
  3831  016B  085C               	movf	??_USBDeviceTasks^(0+128),w
  3832  016C  003D               	movlb	29	; select bank29
  3833  016D  0590               	andwf	16,f	;volatile
  3834  016E                     i1l3907:	
  3835                           
  3836                           ;usb_device.c: 866: }
  3837                           ;usb_device.c: 871: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  3838  016E  1A10               	btfsc	16,4	;volatile
  3839  016F  1E12               	btfss	18,4	;volatile
  3840  0170  297A               	goto	i1l3915
  3841                           
  3842                           ;usb_device.c: 872: {
  3843                           ;usb_device.c: 877: USBSuspend();
  3844  0171  318A  2234  3181   	fcall	_USBSuspend
  3845                           
  3846                           ;usb_device.c: 880: (UIR &= 0xEF);
  3847  0174  30EF               	movlw	239
  3848  0175  0021               	movlb	1	; select bank1
  3849  0176  00DC               	movwf	??_USBDeviceTasks^(0+128)
  3850  0177  085C               	movf	??_USBDeviceTasks^(0+128),w
  3851  0178  003D               	movlb	29	; select bank29
  3852  0179  0590               	andwf	16,f	;volatile
  3853  017A                     i1l3915:	
  3854                           
  3855                           ;usb_device.c: 881: }
  3856                           ;usb_device.c: 883: if(UIRbits.SOFIF)
  3857  017A  1F10               	btfss	16,6	;volatile
  3858  017B  299D               	goto	i1l3929
  3859                           
  3860                           ;usb_device.c: 884: {
  3861                           ;usb_device.c: 885: if(UIEbits.SOFIE)
  3862  017C  1F12               	btfss	18,6	;volatile
  3863  017D  298B               	goto	i1l3921
  3864                           
  3865                           ;usb_device.c: 886: {
  3866                           ;usb_device.c: 887: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  3867  017E  3073               	movlw	115
  3868  017F  0020               	movlb	0	; select bank0
  3869  0180  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  3870  0181  3000               	movlw	0
  3871  0182  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  3872  0183  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  3873  0184  3001               	movlw	1
  3874  0185  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  3875  0186  3000               	movlw	0
  3876  0187  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  3877  0188  3187  27BB  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3878  018B                     i1l3921:	
  3879                           
  3880                           ;usb_device.c: 888: }
  3881                           ;usb_device.c: 889: (UIR &= 0xBF);
  3882  018B  30BF               	movlw	191
  3883  018C  0021               	movlb	1	; select bank1
  3884  018D  00DC               	movwf	??_USBDeviceTasks^(0+128)
  3885  018E  085C               	movf	??_USBDeviceTasks^(0+128),w
  3886  018F  003D               	movlb	29	; select bank29
  3887  0190  0590               	andwf	16,f	;volatile
  3888                           
  3889                           ;usb_device.c: 914: if(USBStatusStageTimeoutCounter != 0u)
  3890  0191  0021               	movlb	1	; select bank1
  3891  0192  0849               	movf	_USBStatusStageTimeoutCounter^(0+128),w	;volatile
  3892  0193  1903               	btfsc	3,2
  3893  0194  2997               	goto	i1l148
  3894                           
  3895                           ;usb_device.c: 915: {
  3896                           ;usb_device.c: 916: USBStatusStageTimeoutCounter--;
  3897  0195  3001               	movlw	1
  3898  0196  02C9               	subwf	_USBStatusStageTimeoutCounter^(0+128),f	;volatile
  3899  0197                     i1l148:	
  3900                           
  3901                           ;usb_device.c: 917: }
  3902                           ;usb_device.c: 923: if(USBStatusStageTimeoutCounter == 0)
  3903  0197  0849               	movf	_USBStatusStageTimeoutCounter^(0+128),w	;volatile
  3904  0198  1D03               	btfss	3,2
  3905  0199  299D               	goto	i1l3929
  3906                           
  3907                           ;usb_device.c: 924: {
  3908                           ;usb_device.c: 925: USBCtrlEPAllowStatusStage();
  3909  019A  318D  259F  3181   	fcall	_USBCtrlEPAllowStatusStage
  3910  019D                     i1l3929:	
  3911                           
  3912                           ;usb_device.c: 926: }
  3913                           ;usb_device.c: 928: }
  3914                           ;usb_device.c: 930: if(UIRbits.STALLIF && UIEbits.STALLIE)
  3915  019D  003D               	movlb	29	; select bank29
  3916  019E  1A90               	btfsc	16,5	;volatile
  3917  019F  1E92               	btfss	18,5	;volatile
  3918  01A0  29A4               	goto	i1l3935
  3919                           
  3920                           ;usb_device.c: 931: {
  3921                           ;usb_device.c: 932: USBStallHandler();
  3922  01A1  318A  22A2  3181   	fcall	_USBStallHandler
  3923  01A4                     i1l3935:	
  3924                           
  3925                           ;usb_device.c: 933: }
  3926                           ;usb_device.c: 935: if(UIRbits.UERRIF && UIEbits.UERRIE)
  3927  01A4  003D               	movlb	29	; select bank29
  3928  01A5  1890               	btfsc	16,1	;volatile
  3929  01A6  1C92               	btfss	18,1	;volatile
  3930  01A7  29B7               	goto	i1l3943
  3931                           
  3932                           ;usb_device.c: 936: {
  3933                           ;usb_device.c: 937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  3934  01A8  30FF               	movlw	255
  3935  01A9  0020               	movlb	0	; select bank0
  3936  01AA  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  3937  01AB  307F               	movlw	127
  3938  01AC  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  3939  01AD  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  3940  01AE  3001               	movlw	1
  3941  01AF  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  3942  01B0  3000               	movlw	0
  3943  01B1  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  3944  01B2  3187  27BB  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3945                           
  3946                           ;usb_device.c: 938: UEIR = 0;;
  3947  01B5  003D               	movlb	29	; select bank29
  3948  01B6  0193               	clrf	19	;volatile
  3949  01B7                     i1l3943:	
  3950                           
  3951                           ;usb_device.c: 946: }
  3952                           ;usb_device.c: 953: if(USBDeviceState < DEFAULT_STATE)
  3953  01B7  3004               	movlw	4
  3954  01B8  0021               	movlb	1	; select bank1
  3955  01B9  0253               	subwf	_USBDeviceState^(0+128),w	;volatile
  3956  01BA  1803               	skipnc
  3957  01BB  29BF               	goto	i1l152
  3958                           
  3959                           ;usb_device.c: 954: {
  3960                           ;usb_device.c: 955: PIR2bits.USBIF = 0;;
  3961  01BC  0020               	movlb	0	; select bank0
  3962  01BD  1112               	bcf	18,2	;volatile
  3963                           
  3964                           ;usb_device.c: 956: return;
  3965  01BE  0008               	return
  3966  01BF                     i1l152:	
  3967                           
  3968                           ;usb_device.c: 957: }
  3969                           ;usb_device.c: 962: if(UIEbits.TRNIE)
  3970  01BF  003D               	movlb	29	; select bank29
  3971  01C0  1D92               	btfss	18,3	;volatile
  3972  01C1  2A12               	goto	i1l153
  3973                           
  3974                           ;usb_device.c: 963: {
  3975                           ;usb_device.c: 964: for(i = 0; i < 4u; i++)
  3976  01C2  0021               	movlb	1	; select bank1
  3977  01C3  01DE               	clrf	USBDeviceTasks@i^(0+128)
  3978  01C4  3004               	movlw	4
  3979  01C5  025E               	subwf	USBDeviceTasks@i^(0+128),w
  3980  01C6  1803               	btfsc	3,0
  3981  01C7  2A12               	goto	i1l153
  3982  01C8                     i1l154:	
  3983                           
  3984                           ;usb_device.c: 965: {
  3985                           ;usb_device.c: 966: if(UIRbits.TRNIF)
  3986  01C8  003D               	movlb	29	; select bank29
  3987  01C9  1D90               	btfss	16,3	;volatile
  3988  01CA  2A12               	goto	i1l153
  3989                           
  3990                           ;usb_device.c: 967: {
  3991                           ;usb_device.c: 969: USTATcopy.Val = USTAT;
  3992  01CB  080F               	movf	15,w	;volatile
  3993  01CC  0021               	movlb	1	; select bank1
  3994  01CD  00DC               	movwf	??_USBDeviceTasks^(0+128)
  3995  01CE  085C               	movf	??_USBDeviceTasks^(0+128),w
  3996  01CF  00D6               	movwf	_USTATcopy^(0+128)	;volatile
  3997                           
  3998                           ;usb_device.c: 970: endpoint_number = USTATcopy.endpoint_number;
  3999  01D0  0C56               	rrf	_USTATcopy^(0+128),w	;volatile
  4000  01D1  00DC               	movwf	??_USBDeviceTasks^(0+128)
  4001  01D2  0CDC               	rrf	??_USBDeviceTasks^(0+128),f
  4002  01D3  0C5C               	rrf	??_USBDeviceTasks^(0+128),w
  4003  01D4  390F               	andlw	15
  4004  01D5  00DD               	movwf	(??_USBDeviceTasks+1)^(0+128)
  4005  01D6  085D               	movf	(??_USBDeviceTasks+1)^(0+128),w
  4006  01D7  00CB               	movwf	_endpoint_number^(0+128)	;volatile
  4007                           
  4008                           ;usb_device.c: 972: (UIR &= 0xF7);
  4009  01D8  30F7               	movlw	247
  4010  01D9  00DC               	movwf	??_USBDeviceTasks^(0+128)
  4011  01DA  085C               	movf	??_USBDeviceTasks^(0+128),w
  4012  01DB  003D               	movlb	29	; select bank29
  4013  01DC  0590               	andwf	16,f	;volatile
  4014                           
  4015                           ;usb_device.c: 977: if(USTATcopy.direction == 0)
  4016  01DD  0021               	movlb	1	; select bank1
  4017  01DE  1956               	btfsc	_USTATcopy^(0+128),2	;volatile
  4018  01DF  29E3               	goto	i1l3963
  4019                           
  4020                           ;usb_device.c: 978: {
  4021                           ;usb_device.c: 979: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  4022  01E0  084B               	movf	_endpoint_number^(0+128),w	;volatile
  4023  01E1  3EAC               	addlw	(low (_ep_data_out| 0))& (0+255)
  4024  01E2  29E5               	goto	L5
  4025  01E3                     i1l3963:	
  4026                           ;usb_device.c: 980: }
  4027                           
  4028                           
  4029                           ;usb_device.c: 981: else
  4030                           ;usb_device.c: 982: {
  4031                           ;usb_device.c: 983: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  4032  01E3  084B               	movf	_endpoint_number^(0+128),w	;volatile
  4033  01E4  3EAF               	addlw	(low (_ep_data_in| 0))& (0+255)
  4034  01E5                     L5:	
  4035  01E5  0086               	movwf	6
  4036  01E6  0187               	clrf	7
  4037  01E7  0801               	movf	1,w
  4038  01E8  3901               	andlw	1
  4039  01E9  00DC               	movwf	??_USBDeviceTasks^(0+128)
  4040  01EA  3001               	movlw	1
  4041  01EB  06DC               	xorwf	??_USBDeviceTasks^(0+128),f
  4042  01EC  0801               	movf	1,w
  4043  01ED  065C               	xorwf	??_USBDeviceTasks^(0+128),w
  4044  01EE  39FE               	andlw	-2
  4045  01EF  065C               	xorwf	??_USBDeviceTasks^(0+128),w
  4046  01F0  0081               	movwf	1
  4047                           
  4048                           ;usb_device.c: 984: }
  4049                           ;usb_device.c: 989: if(endpoint_number == 0)
  4050  01F1  084B               	movf	_endpoint_number^(0+128),w	;volatile
  4051  01F2  1D03               	btfss	3,2
  4052  01F3  29F8               	goto	i1l3969
  4053                           
  4054                           ;usb_device.c: 990: {
  4055                           ;usb_device.c: 991: USBCtrlEPService();
  4056  01F4  318F  2721  3181   	fcall	_USBCtrlEPService
  4057                           
  4058                           ;usb_device.c: 992: }
  4059  01F7  2A09               	goto	i1l3971
  4060  01F8                     i1l3969:	
  4061                           
  4062                           ;usb_device.c: 993: else
  4063                           ;usb_device.c: 994: {
  4064                           ;usb_device.c: 995: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(BYTE*)&USTATcopy.Val
      +                          ,0);
  4065  01F8  3072               	movlw	114
  4066  01F9  0020               	movlb	0	; select bank0
  4067  01FA  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4068  01FB  3000               	movlw	0
  4069  01FC  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4070  01FD  30D6               	movlw	(low (_USTATcopy| 0))& (0+255)
  4071  01FE  0021               	movlb	1	; select bank1
  4072  01FF  00DC               	movwf	??_USBDeviceTasks^(0+128)
  4073  0200  085C               	movf	??_USBDeviceTasks^(0+128),w
  4074  0201  0020               	movlb	0	; select bank0
  4075  0202  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4076  0203  3000               	movlw	0
  4077  0204  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4078  0205  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4079  0206  3187  27BB  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4080  0209                     i1l3971:	
  4081                           ;usb_device.c: 998: else
  4082                           ;usb_device.c: 999: break;
  4083                           
  4084                           ;usb_device.c: 996: }
  4085                           ;usb_device.c: 997: }
  4086                           
  4087  0209  3001               	movlw	1
  4088  020A  0021               	movlb	1	; select bank1
  4089  020B  00DC               	movwf	??_USBDeviceTasks^(0+128)
  4090  020C  085C               	movf	??_USBDeviceTasks^(0+128),w
  4091  020D  07DE               	addwf	USBDeviceTasks@i^(0+128),f
  4092  020E  3004               	movlw	4
  4093  020F  025E               	subwf	USBDeviceTasks@i^(0+128),w
  4094  0210  1C03               	skipc
  4095  0211  29C8               	goto	i1l154
  4096  0212                     i1l153:	
  4097                           
  4098                           ;usb_device.c: 1000: }
  4099                           ;usb_device.c: 1001: }
  4100                           ;usb_device.c: 1003: PIR2bits.USBIF = 0;;
  4101  0212  0020               	movlb	0	; select bank0
  4102  0213  1112               	bcf	18,2	;volatile
  4103  0214  0008               	return
  4104  0215                     __end_of_USBDeviceTasks:	
  4105                           
  4106                           	psect	text16
  4107  043D                     __ptext16:	
  4108 ;; *************** function i1_USBDeviceInit *****************
  4109 ;; Defined at:
  4110 ;;		line 466 in file "../Microchip/USB/usb_device.c"
  4111 ;; Parameters:    Size  Location     Type
  4112 ;;		None
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;  USBDeviceIni    2    1[COMMON] PTR unsigned char 
  4115 ;;		 -> UEP1(1), 
  4116 ;;  USBDeviceIni    1    4[COMMON] unsigned char 
  4117 ;;  USBDeviceIni    1    3[COMMON] unsigned char 
  4118 ;; Return value:  Size  Location     Type
  4119 ;;                  1    wreg      void 
  4120 ;; Registers used:
  4121 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4122 ;; Tracked objects:
  4123 ;;		On entry : 0/0
  4124 ;;		On exit  : 0/0
  4125 ;;		Unchanged: 0/0
  4126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4128 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4129 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4130 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4131 ;;Total ram usage:        5 bytes
  4132 ;; Hardware stack levels used:    1
  4133 ;; This function calls:
  4134 ;;		Nothing
  4135 ;; This function is called by:
  4136 ;;		_USBDeviceTasks
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           
  4141                           ;psect for function i1_USBDeviceInit
  4142  043D                     i1_USBDeviceInit:	
  4143                           
  4144                           ;usb_device.c: 468: BYTE i;
  4145                           ;usb_device.c: 470: {PIE2bits.USBIE = 0;};
  4146                           
  4147                           ;incstack = 0
  4148                           ; Regs used in i1_USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  4149  043D  0021               	movlb	1	; select bank1
  4150  043E  1112               	bcf	18,2	;volatile
  4151                           
  4152                           ;usb_device.c: 473: UEIR = 0;;
  4153  043F  003D               	movlb	29	; select bank29
  4154  0440  0193               	clrf	19	;volatile
  4155                           
  4156                           ;usb_device.c: 476: UIR = 0;;
  4157  0441  0190               	clrf	16	;volatile
  4158                           
  4159                           ;usb_device.c: 479: UEP0 = 0;
  4160  0442  0198               	clrf	24	;volatile
  4161                           
  4162                           ;usb_device.c: 481: { BYTE i; BYTE* p = (BYTE*)&UEP1; for(i=0;i<2;i++) *p++ = 0; };
  4163  0443  300E               	movlw	14
  4164  0444  00F2               	movwf	i1USBDeviceInit@p+1
  4165  0445  3099               	movlw	153
  4166  0446  00F1               	movwf	i1USBDeviceInit@p
  4167  0447  01F3               	clrf	i1USBDeviceInit@i_740
  4168  0448  3002               	movlw	2
  4169  0449  0273               	subwf	i1USBDeviceInit@i_740,w
  4170  044A  1803               	btfsc	3,0
  4171  044B  2C5D               	goto	i1l3815
  4172  044C                     i1l3807:	
  4173  044C  0871               	movf	i1USBDeviceInit@p,w
  4174  044D  0086               	movwf	6
  4175  044E  0872               	movf	i1USBDeviceInit@p+1,w
  4176  044F  0087               	movwf	7
  4177  0450  0181               	clrf	1
  4178  0451  3001               	movlw	1
  4179  0452  07F1               	addwf	i1USBDeviceInit@p,f
  4180  0453  3000               	movlw	0
  4181  0454  3DF2               	addwfc	i1USBDeviceInit@p+1,f
  4182  0455  3001               	movlw	1
  4183  0456  00F0               	movwf	??i1_USBDeviceInit
  4184  0457  0870               	movf	??i1_USBDeviceInit,w
  4185  0458  07F3               	addwf	i1USBDeviceInit@i_740,f
  4186  0459  3002               	movlw	2
  4187  045A  0273               	subwf	i1USBDeviceInit@i_740,w
  4188  045B  1C03               	skipc
  4189  045C  2C4C               	goto	i1l3807
  4190  045D                     i1l3815:	
  4191                           
  4192                           ;usb_device.c: 483: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  4193  045D  3016               	movlw	22
  4194  045E  003D               	movlb	29	; select bank29
  4195  045F  0091               	movwf	17	;volatile
  4196  0460  309F               	movlw	159
  4197  0461  0097               	movwf	23	;volatile
  4198  0462  307B               	movlw	123
  4199  0463  0092               	movwf	18	;volatile
  4200                           
  4201                           ;usb_device.c: 486: ;
  4202                           ;usb_device.c: 489: ;
  4203                           ;usb_device.c: 492: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  4204  0464  01F4               	clrf	i1USBDeviceInit@i
  4205  0465  300C               	movlw	12
  4206  0466  0274               	subwf	i1USBDeviceInit@i,w
  4207  0467  1803               	btfsc	3,0
  4208  0468  2C82               	goto	i1l130
  4209  0469                     i1l3823:	
  4210                           
  4211                           ;usb_device.c: 493: {
  4212                           ;usb_device.c: 494: BDT[i].Val = 0x00;
  4213  0469  0874               	movf	i1USBDeviceInit@i,w
  4214  046A  00F0               	movwf	??i1_USBDeviceInit
  4215  046B  3001               	movlw	1
  4216  046C                     u371_25:	
  4217  046C  35F0               	lslf	??i1_USBDeviceInit,f
  4218  046D  3EFF               	addlw	-1
  4219  046E  1D03               	skipz
  4220  046F  2C6C               	goto	u371_25
  4221  0470  3570               	lslf	??i1_USBDeviceInit,w
  4222  0471  3E20               	addlw	32
  4223  0472  0086               	movwf	6
  4224  0473  0187               	clrf	7
  4225  0474  3000               	movlw	0
  4226  0475  3FC0               	movwi [0]fsr1
  4227  0476  3000               	movlw	0
  4228  0477  3FC1               	movwi [1]fsr1
  4229  0478  3FC2               	movwi [2]fsr1
  4230  0479  3FC3               	movwi [3]fsr1
  4231  047A  3001               	movlw	1
  4232  047B  00F0               	movwf	??i1_USBDeviceInit
  4233  047C  0870               	movf	??i1_USBDeviceInit,w
  4234  047D  07F4               	addwf	i1USBDeviceInit@i,f
  4235  047E  300C               	movlw	12
  4236  047F  0274               	subwf	i1USBDeviceInit@i,w
  4237  0480  1C03               	skipc
  4238  0481  2C69               	goto	i1l3823
  4239  0482                     i1l130:	
  4240                           
  4241                           ;usb_device.c: 495: }
  4242                           ;usb_device.c: 498: UCONbits.PPBRST = 1;
  4243  0482  003D               	movlb	29	; select bank29
  4244  0483  170E               	bsf	14,6	;volatile
  4245                           
  4246                           ;usb_device.c: 501: UADDR = 0x00;
  4247  0484  0196               	clrf	22	;volatile
  4248                           
  4249                           ;usb_device.c: 504: UCONbits.PKTDIS = 0;
  4250  0485  120E               	bcf	14,4	;volatile
  4251                           
  4252                           ;usb_device.c: 507: UCONbits.PPBRST = 0;
  4253  0486  130E               	bcf	14,6	;volatile
  4254  0487                     i1l3843:	
  4255                           ;usb_device.c: 510: while(UIRbits.TRNIF == 1)
  4256                           
  4257  0487  003D               	movlb	29	; select bank29
  4258  0488  1D90               	btfss	16,3	;volatile
  4259  0489  2C94               	goto	i1l3845
  4260                           
  4261                           ;usb_device.c: 511: {
  4262                           ;usb_device.c: 512: (UIR &= 0xF7);
  4263  048A  30F7               	movlw	247
  4264  048B  00F0               	movwf	??i1_USBDeviceInit
  4265  048C  0870               	movf	??i1_USBDeviceInit,w
  4266  048D  0590               	andwf	16,f	;volatile
  4267                           
  4268                           ;usb_device.c: 514: inPipes[0].info.Val = 0;
  4269  048E  0021               	movlb	1	; select bank1
  4270  048F  01A9               	clrf	(_inPipes^(0+128)+2)	;volatile
  4271                           
  4272                           ;usb_device.c: 515: outPipes[0].info.Val = 0;
  4273  0490  01A2               	clrf	(_outPipes^(0+128)+2)	;volatile
  4274                           
  4275                           ;usb_device.c: 516: outPipes[0].wCount.Val = 0;
  4276  0491  01A3               	clrf	(_outPipes^(0+128)+3)	;volatile
  4277  0492  01A4               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
  4278  0493  2C87               	goto	i1l3843
  4279  0494                     i1l3845:	
  4280                           
  4281                           ;usb_device.c: 517: }
  4282                           ;usb_device.c: 521: USBStatusStageEnabledFlag1 = TRUE;
  4283  0494  3001               	movlw	1
  4284  0495  00F0               	movwf	??i1_USBDeviceInit
  4285  0496  0870               	movf	??i1_USBDeviceInit,w
  4286  0497  0021               	movlb	1	; select bank1
  4287  0498  00C7               	movwf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  4288                           
  4289                           ;usb_device.c: 522: USBStatusStageEnabledFlag2 = TRUE;
  4290  0499  3001               	movlw	1
  4291  049A  00F0               	movwf	??i1_USBDeviceInit
  4292  049B  0870               	movf	??i1_USBDeviceInit,w
  4293  049C  00C6               	movwf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  4294                           
  4295                           ;usb_device.c: 524: USBDeferINDataStagePackets = FALSE;
  4296  049D  01C5               	clrf	_USBDeferINDataStagePackets^(0+128)	;volatile
  4297                           
  4298                           ;usb_device.c: 525: USBDeferOUTDataStagePackets = FALSE;
  4299  049E  01C4               	clrf	_USBDeferOUTDataStagePackets^(0+128)	;volatile
  4300                           
  4301                           ;usb_device.c: 526: USBBusIsSuspended = FALSE;
  4302  049F  01CC               	clrf	_USBBusIsSuspended^(0+128)	;volatile
  4303                           
  4304                           ;usb_device.c: 530: for(i = 0; i < (BYTE)(2+1u); i++)
  4305  04A0  01F4               	clrf	i1USBDeviceInit@i
  4306  04A1  3003               	movlw	3
  4307  04A2  0274               	subwf	i1USBDeviceInit@i,w
  4308  04A3  1803               	btfsc	3,0
  4309  04A4  2CC2               	goto	i1l3863
  4310  04A5                     i1l3857:	
  4311                           
  4312                           ;usb_device.c: 531: {
  4313                           ;usb_device.c: 532: pBDTEntryIn[i] = 0u;
  4314  04A5  0874               	movf	i1USBDeviceInit@i,w
  4315  04A6  3EB2               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  4316  04A7  0086               	movwf	6
  4317  04A8  0187               	clrf	7
  4318  04A9  0181               	clrf	1
  4319                           
  4320                           ;usb_device.c: 533: pBDTEntryOut[i] = 0u;
  4321  04AA  0874               	movf	i1USBDeviceInit@i,w
  4322  04AB  3E35               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  4323  04AC  0086               	movwf	6
  4324  04AD  3001               	movlw	1	; select bank2/3
  4325  04AE  0087               	movwf	7
  4326  04AF  0181               	clrf	1
  4327                           
  4328                           ;usb_device.c: 534: ep_data_in[i].Val = 0u;
  4329  04B0  0874               	movf	i1USBDeviceInit@i,w
  4330  04B1  3EAF               	addlw	(low (_ep_data_in| 0))& (0+255)
  4331  04B2  0086               	movwf	6
  4332  04B3  0187               	clrf	7
  4333  04B4  0181               	clrf	1
  4334                           
  4335                           ;usb_device.c: 535: ep_data_out[i].Val = 0u;
  4336  04B5  0874               	movf	i1USBDeviceInit@i,w
  4337  04B6  3EAC               	addlw	(low (_ep_data_out| 0))& (0+255)
  4338  04B7  0086               	movwf	6
  4339  04B8  0187               	clrf	7
  4340  04B9  0181               	clrf	1
  4341  04BA  3001               	movlw	1
  4342  04BB  00F0               	movwf	??i1_USBDeviceInit
  4343  04BC  0870               	movf	??i1_USBDeviceInit,w
  4344  04BD  07F4               	addwf	i1USBDeviceInit@i,f
  4345  04BE  3003               	movlw	3
  4346  04BF  0274               	subwf	i1USBDeviceInit@i,w
  4347  04C0  1C03               	skipc
  4348  04C1  2CA5               	goto	i1l3857
  4349  04C2                     i1l3863:	
  4350                           
  4351                           ;usb_device.c: 536: }
  4352                           ;usb_device.c: 539: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  4353  04C2  3028               	movlw	40
  4354  04C3  00F0               	movwf	??i1_USBDeviceInit
  4355  04C4  0870               	movf	??i1_USBDeviceInit,w
  4356  04C5  0021               	movlb	1	; select bank1
  4357  04C6  00B2               	movwf	_pBDTEntryIn^(0+128)
  4358                           
  4359                           ;usb_device.c: 541: UEP0 = 0x06|0x10;
  4360  04C7  3016               	movlw	22
  4361  04C8  003D               	movlb	29	; select bank29
  4362  04C9  0098               	movwf	24	;volatile
  4363                           
  4364                           ;usb_device.c: 543: BDT[0].ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  4365  04CA  3000               	movlw	0
  4366  04CB  0020               	movlb	0	; select bank0
  4367  04CC  00A3               	movwf	35	;volatile
  4368  04CD  3050               	movlw	80
  4369  04CE  00A2               	movwf	34	;volatile
  4370                           
  4371                           ;usb_device.c: 544: BDT[0].CNT = 8;
  4372  04CF  3008               	movlw	8
  4373  04D0  00A1               	movwf	33	;volatile
  4374                           
  4375                           ;usb_device.c: 545: BDT[0].STAT.Val = 0x80|0x00|0x04;
  4376  04D1  3084               	movlw	132
  4377  04D2  00F0               	movwf	??i1_USBDeviceInit
  4378  04D3  0870               	movf	??i1_USBDeviceInit,w
  4379  04D4  00A0               	movwf	32	;volatile
  4380                           
  4381                           ;usb_device.c: 548: USBActiveConfiguration = 0;
  4382  04D5  0021               	movlb	1	; select bank1
  4383  04D6  01D7               	clrf	_USBActiveConfiguration^(0+128)	;volatile
  4384                           
  4385                           ;usb_device.c: 551: USBDeviceState = DETACHED_STATE;
  4386  04D7  01D3               	clrf	_USBDeviceState^(0+128)	;volatile
  4387  04D8  0008               	return
  4388  04D9                     __end_ofi1_USBDeviceInit:	
  4389                           
  4390                           	psect	text17
  4391  09F3                     __ptext17:	
  4392 ;; *************** function _USBWakeFromSuspend *****************
  4393 ;; Defined at:
  4394 ;;		line 2455 in file "../Microchip/USB/usb_device.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;		None
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;		None
  4399 ;; Return value:  Size  Location     Type
  4400 ;;                  1    wreg      void 
  4401 ;; Registers used:
  4402 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4403 ;; Tracked objects:
  4404 ;;		On entry : 0/0
  4405 ;;		On exit  : 0/0
  4406 ;;		Unchanged: 0/0
  4407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4410 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4411 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4412 ;;Total ram usage:        1 bytes
  4413 ;; Hardware stack levels used:    1
  4414 ;; Hardware stack levels required when called:    5
  4415 ;; This function calls:
  4416 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4417 ;; This function is called by:
  4418 ;;		_USBDeviceTasks
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422                           
  4423                           ;psect for function _USBWakeFromSuspend
  4424  09F3                     _USBWakeFromSuspend:	
  4425                           
  4426                           ;usb_device.c: 2457: USBBusIsSuspended = FALSE;
  4427                           
  4428                           ;incstack = 0
  4429                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4430  09F3  0021               	movlb	1	; select bank1
  4431  09F4  01CC               	clrf	_USBBusIsSuspended^(0+128)	;volatile
  4432                           
  4433                           ;usb_device.c: 2463: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  4434  09F5  3074               	movlw	116
  4435  09F6  0020               	movlb	0	; select bank0
  4436  09F7  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4437  09F8  3000               	movlw	0
  4438  09F9  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4439  09FA  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4440  09FB  3000               	movlw	0
  4441  09FC  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4442  09FD  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4443  09FE  3187  27BB         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4444                           
  4445                           ;usb_device.c: 2470: UCONbits.SUSPND = 0;
  4446  0A00  003D               	movlb	29	; select bank29
  4447  0A01  108E               	bcf	14,1	;volatile
  4448                           
  4449                           ;usb_device.c: 2475: UIEbits.ACTVIE = 0;
  4450  0A02  1112               	bcf	18,2	;volatile
  4451                           
  4452                           ;usb_device.c: 2495: {
  4453                           ;usb_device.c: 2496: (UIR &= 0xFB);
  4454  0A03  30FB               	movlw	251
  4455  0A04  00FD               	movwf	??_USBWakeFromSuspend
  4456  0A05  087D               	movf	??_USBWakeFromSuspend,w
  4457  0A06  0590               	andwf	16,f	;volatile
  4458  0A07  0008               	return
  4459  0A08                     __end_of_USBWakeFromSuspend:	
  4460                           
  4461                           	psect	text18
  4462  0A34                     __ptext18:	
  4463 ;; *************** function _USBSuspend *****************
  4464 ;; Defined at:
  4465 ;;		line 2398 in file "../Microchip/USB/usb_device.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;		None
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;		None
  4470 ;; Return value:  Size  Location     Type
  4471 ;;                  1    wreg      void 
  4472 ;; Registers used:
  4473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4481 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4482 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4483 ;;Total ram usage:        1 bytes
  4484 ;; Hardware stack levels used:    1
  4485 ;; Hardware stack levels required when called:    5
  4486 ;; This function calls:
  4487 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4488 ;; This function is called by:
  4489 ;;		_USBDeviceTasks
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493                           
  4494                           ;psect for function _USBSuspend
  4495  0A34                     _USBSuspend:	
  4496                           
  4497                           ;usb_device.c: 2423: UIEbits.ACTVIE = 1;
  4498                           
  4499                           ;incstack = 0
  4500                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4501  0A34  003D               	movlb	29	; select bank29
  4502  0A35  1512               	bsf	18,2	;volatile
  4503                           
  4504                           ;usb_device.c: 2424: (UIR &= 0xEF);
  4505  0A36  30EF               	movlw	239
  4506  0A37  00FD               	movwf	??_USBSuspend
  4507  0A38  087D               	movf	??_USBSuspend,w
  4508  0A39  0590               	andwf	16,f	;volatile
  4509                           
  4510                           ;usb_device.c: 2427: UCONbits.SUSPND = 1;
  4511  0A3A  148E               	bsf	14,1	;volatile
  4512                           
  4513                           ;usb_device.c: 2430: USBBusIsSuspended = TRUE;
  4514  0A3B  3001               	movlw	1
  4515  0A3C  00FD               	movwf	??_USBSuspend
  4516  0A3D  087D               	movf	??_USBSuspend,w
  4517  0A3E  0021               	movlb	1	; select bank1
  4518  0A3F  00CC               	movwf	_USBBusIsSuspended^(0+128)	;volatile
  4519                           
  4520                           ;usb_device.c: 2437: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  4521  0A40  3075               	movlw	117
  4522  0A41  0020               	movlb	0	; select bank0
  4523  0A42  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4524  0A43  3000               	movlw	0
  4525  0A44  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4526  0A45  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4527  0A46  3000               	movlw	0
  4528  0A47  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4529  0A48  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4530  0A49  3187  27BB         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4531  0A4B  0008               	return
  4532  0A4C                     __end_of_USBSuspend:	
  4533                           
  4534                           	psect	text19
  4535  0AA2                     __ptext19:	
  4536 ;; *************** function _USBStallHandler *****************
  4537 ;; Defined at:
  4538 ;;		line 2355 in file "../Microchip/USB/usb_device.c"
  4539 ;; Parameters:    Size  Location     Type
  4540 ;;		None
  4541 ;; Auto vars:     Size  Location     Type
  4542 ;;		None
  4543 ;; Return value:  Size  Location     Type
  4544 ;;                  1    wreg      void 
  4545 ;; Registers used:
  4546 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4547 ;; Tracked objects:
  4548 ;;		On entry : 0/0
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4554 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4555 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4556 ;;Total ram usage:        1 bytes
  4557 ;; Hardware stack levels used:    1
  4558 ;; This function calls:
  4559 ;;		Nothing
  4560 ;; This function is called by:
  4561 ;;		_USBDeviceTasks
  4562 ;; This function uses a non-reentrant model
  4563 ;;
  4564                           
  4565                           
  4566                           ;psect for function _USBStallHandler
  4567  0AA2                     _USBStallHandler:	
  4568                           
  4569                           ;usb_device.c: 2368: if(UEP0bits.EPSTALL == 1)
  4570                           
  4571                           ;incstack = 0
  4572                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  4573  0AA2  003D               	movlb	29	; select bank29
  4574  0AA3  1C18               	btfss	24,0	;volatile
  4575  0AA4  2ABD               	goto	i1l3537
  4576                           
  4577                           ;usb_device.c: 2369: {
  4578                           ;usb_device.c: 2371: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  4579  0AA5  0021               	movlb	1	; select bank1
  4580  0AA6  0852               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4581  0AA7  0086               	movwf	6
  4582  0AA8  0187               	clrf	7
  4583  0AA9  3080               	movlw	128
  4584  0AAA  0601               	xorwf	1,w
  4585  0AAB  1D03               	btfss	3,2
  4586  0AAC  2ABB               	goto	i1l3535
  4587  0AAD  0832               	movf	_pBDTEntryIn^(0+128),w
  4588  0AAE  0086               	movwf	6
  4589  0AAF  0187               	clrf	7
  4590  0AB0  3084               	movlw	132
  4591  0AB1  0601               	xorwf	1,w
  4592  0AB2  1D03               	btfss	3,2
  4593  0AB3  2ABB               	goto	i1l3535
  4594                           
  4595                           ;usb_device.c: 2372: {
  4596                           ;usb_device.c: 2374: pBDTEntryEP0OutCurrent->STAT.Val = 0x80|0x00|(0x08 & 0x08)|0x04;
  4597  0AB4  308C               	movlw	140
  4598  0AB5  00F0               	movwf	??_USBStallHandler
  4599  0AB6  0852               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4600  0AB7  0086               	movwf	6
  4601  0AB8  0187               	clrf	7
  4602  0AB9  0870               	movf	??_USBStallHandler,w
  4603  0ABA  0081               	movwf	1
  4604  0ABB                     i1l3535:	
  4605                           
  4606                           ;usb_device.c: 2375: }
  4607                           ;usb_device.c: 2376: UEP0bits.EPSTALL = 0;
  4608  0ABB  003D               	movlb	29	; select bank29
  4609  0ABC  1018               	bcf	24,0	;volatile
  4610  0ABD                     i1l3537:	
  4611                           
  4612                           ;usb_device.c: 2377: }
  4613                           ;usb_device.c: 2379: (UIR &= 0xDF);
  4614  0ABD  30DF               	movlw	223
  4615  0ABE  00F0               	movwf	??_USBStallHandler
  4616  0ABF  0870               	movf	??_USBStallHandler,w
  4617  0AC0  0590               	andwf	16,f	;volatile
  4618  0AC1  0008               	return
  4619  0AC2                     __end_of_USBStallHandler:	
  4620                           
  4621                           	psect	text20
  4622  0F21                     __ptext20:	
  4623 ;; *************** function _USBCtrlEPService *****************
  4624 ;; Defined at:
  4625 ;;		line 2522 in file "../Microchip/USB/usb_device.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;		None
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;  setup_cnt       1    3[BANK1 ] unsigned char 
  4630 ;; Return value:  Size  Location     Type
  4631 ;;                  1    wreg      void 
  4632 ;; Registers used:
  4633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4640 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4641 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4642 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4643 ;;Total ram usage:        4 bytes
  4644 ;; Hardware stack levels used:    1
  4645 ;; Hardware stack levels required when called:    8
  4646 ;; This function calls:
  4647 ;;		_USBCtrlTrfInHandler
  4648 ;;		_USBCtrlTrfOutHandler
  4649 ;;		_USBCtrlTrfSetupHandler
  4650 ;; This function is called by:
  4651 ;;		_USBDeviceTasks
  4652 ;; This function uses a non-reentrant model
  4653 ;;
  4654                           
  4655                           
  4656                           ;psect for function _USBCtrlEPService
  4657  0F21                     _USBCtrlEPService:	
  4658                           
  4659                           ;usb_device.c: 2528: USBStatusStageTimeoutCounter = (BYTE)45;
  4660                           
  4661                           ;incstack = 0
  4662                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4663  0F21  302D               	movlw	45
  4664  0F22  0021               	movlb	1	; select bank1
  4665  0F23  00D8               	movwf	??_USBCtrlEPService^(0+128)
  4666  0F24  0858               	movf	??_USBCtrlEPService^(0+128),w
  4667  0F25  00C9               	movwf	_USBStatusStageTimeoutCounter^(0+128)	;volatile
  4668                           
  4669                           ;usb_device.c: 2532: if((USTATcopy.Val & ~0x02) == 0x00)
  4670  0F26  0856               	movf	_USTATcopy^(0+128),w	;volatile
  4671  0F27  39FD               	andlw	253
  4672  0F28  1D03               	btfss	3,2
  4673  0F29  2F84               	goto	i1l3569
  4674                           
  4675                           ;usb_device.c: 2533: {
  4676                           ;usb_device.c: 2536: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  4677  0F2A  3656               	lsrf	_USTATcopy^(0+128),w	;volatile
  4678  0F2B  393F               	andlw	63
  4679  0F2C  00D8               	movwf	??_USBCtrlEPService^(0+128)
  4680  0F2D  3001               	movlw	1
  4681  0F2E                     u320_25:	
  4682  0F2E  35D8               	lslf	??_USBCtrlEPService^(0+128),f
  4683  0F2F  3EFF               	addlw	-1
  4684  0F30  1D03               	skipz
  4685  0F31  2F2E               	goto	u320_25
  4686  0F32  3558               	lslf	??_USBCtrlEPService^(0+128),w
  4687  0F33  3E20               	addlw	32
  4688  0F34  00D9               	movwf	(??_USBCtrlEPService+1)^(0+128)
  4689  0F35  0859               	movf	(??_USBCtrlEPService+1)^(0+128),w
  4690  0F36  00D2               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  4691                           
  4692                           ;usb_device.c: 2544: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  4693  0F37  0852               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4694  0F38  00D8               	movwf	??_USBCtrlEPService^(0+128)
  4695  0F39  0858               	movf	??_USBCtrlEPService^(0+128),w
  4696  0F3A  00D1               	movwf	_pBDTEntryEP0OutNext^(0+128)
  4697                           
  4698                           ;usb_device.c: 2546: ((BYTE_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  4699  0F3B  3004               	movlw	4
  4700  0F3C  00D8               	movwf	??_USBCtrlEPService^(0+128)
  4701  0F3D  0858               	movf	??_USBCtrlEPService^(0+128),w
  4702  0F3E  06D1               	xorwf	_pBDTEntryEP0OutNext^(0+128),f
  4703                           
  4704                           ;usb_device.c: 2549: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  4705  0F3F  0852               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4706  0F40  0086               	movwf	6
  4707  0F41  0187               	clrf	7
  4708  0F42  0C01               	rrf	1,w
  4709  0F43  0C89               	rrf	9,f
  4710  0F44  390F               	andlw	15
  4711  0F45  3A0D               	xorlw	13
  4712  0F46  1D03               	skipz
  4713  0F47  2F81               	goto	i1l3567
  4714                           
  4715                           ;usb_device.c: 2550: {
  4716                           ;usb_device.c: 2551: unsigned char setup_cnt;
  4717                           ;usb_device.c: 2557: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
  4718  0F48  01DB               	clrf	USBCtrlEPService@setup_cnt^(0+128)
  4719  0F49  3008               	movlw	8
  4720  0F4A  025B               	subwf	USBCtrlEPService@setup_cnt^(0+128),w
  4721  0F4B  1803               	btfsc	3,0
  4722  0F4C  2F72               	goto	i1l3563
  4723  0F4D                     i1l3557:	
  4724                           
  4725                           ;usb_device.c: 2558: {
  4726                           ;usb_device.c: 2559: *(BYTE*)((BYTE*)&SetupPkt + setup_cnt) = *(BYTE*)((void *)(pBDTEntr
      +                          yEP0OutCurrent->ADR));
  4727  0F4D  0852               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4728  0F4E  3E02               	addlw	2
  4729  0F4F  0086               	movwf	6
  4730  0F50  0187               	clrf	7
  4731  0F51  3F40               	moviw [0]fsr1
  4732  0F52  00D8               	movwf	??_USBCtrlEPService^(0+128)
  4733  0F53  3F41               	moviw [1]fsr1
  4734  0F54  00D9               	movwf	(??_USBCtrlEPService^(0+128)+1)
  4735  0F55  0858               	movf	??_USBCtrlEPService^(0+128),w
  4736  0F56  0086               	movwf	6
  4737  0F57  0859               	movf	(??_USBCtrlEPService+1)^(0+128),w
  4738  0F58  0087               	movwf	7
  4739  0F59  0801               	movf	1,w
  4740  0F5A  00DA               	movwf	(??_USBCtrlEPService+2)^(0+128)
  4741  0F5B  085B               	movf	USBCtrlEPService@setup_cnt^(0+128),w
  4742  0F5C  3E50               	addlw	80
  4743  0F5D  0086               	movwf	6
  4744  0F5E  0187               	clrf	7
  4745  0F5F  085A               	movf	(??_USBCtrlEPService+2)^(0+128),w
  4746  0F60  0081               	movwf	1
  4747                           
  4748                           ;usb_device.c: 2560: pBDTEntryEP0OutCurrent->ADR++;
  4749  0F61  0852               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4750  0F62  3E02               	addlw	2
  4751  0F63  0086               	movwf	6
  4752  0F64  0187               	clrf	7
  4753  0F65  3001               	movlw	1
  4754  0F66  0781               	addwf	1,f
  4755  0F67  3141               	addfsr 1,1
  4756  0F68  1803               	skipnc
  4757  0F69  0A81               	incf	1,f
  4758  0F6A  3001               	movlw	1
  4759  0F6B  00D8               	movwf	??_USBCtrlEPService^(0+128)
  4760  0F6C  0858               	movf	??_USBCtrlEPService^(0+128),w
  4761  0F6D  07DB               	addwf	USBCtrlEPService@setup_cnt^(0+128),f
  4762  0F6E  3008               	movlw	8
  4763  0F6F  025B               	subwf	USBCtrlEPService@setup_cnt^(0+128),w
  4764  0F70  1C03               	skipc
  4765  0F71  2F4D               	goto	i1l3557
  4766  0F72                     i1l3563:	
  4767                           
  4768                           ;usb_device.c: 2561: }
  4769                           ;usb_device.c: 2562: pBDTEntryEP0OutCurrent->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  4770  0F72  3050               	movlw	80
  4771  0F73  00D8               	movwf	??_USBCtrlEPService^(0+128)
  4772  0F74  3000               	movlw	0
  4773  0F75  00D9               	movwf	(??_USBCtrlEPService^(0+128)+1)
  4774  0F76  0852               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4775  0F77  3E02               	addlw	2
  4776  0F78  0086               	movwf	6
  4777  0F79  0187               	clrf	7
  4778  0F7A  0858               	movf	??_USBCtrlEPService^(0+128),w
  4779  0F7B  3FC0               	movwi [0]fsr1
  4780  0F7C  0859               	movf	(??_USBCtrlEPService^(0+128)+1),w
  4781  0F7D  3FC1               	movwi [1]fsr1
  4782                           
  4783                           ;usb_device.c: 2565: USBCtrlTrfSetupHandler();
  4784  0F7E  318B  23D0         	fcall	_USBCtrlTrfSetupHandler
  4785                           
  4786                           ;usb_device.c: 2566: }
  4787  0F80  0008               	return
  4788  0F81                     i1l3567:	
  4789                           
  4790                           ;usb_device.c: 2567: else
  4791                           ;usb_device.c: 2568: {
  4792                           ;usb_device.c: 2570: USBCtrlTrfOutHandler();
  4793  0F81  318A  22E9         	fcall	_USBCtrlTrfOutHandler
  4794                           
  4795                           ;usb_device.c: 2571: }
  4796                           ;usb_device.c: 2572: }
  4797  0F83  0008               	return
  4798  0F84                     i1l3569:	
  4799                           
  4800                           ;usb_device.c: 2573: else if((USTATcopy.Val & ~0x02) == 0x04)
  4801  0F84  30FD               	movlw	253
  4802  0F85  0021               	movlb	1	; select bank1
  4803  0F86  0556               	andwf	_USTATcopy^(0+128),w	;volatile
  4804  0F87  00D8               	movwf	??_USBCtrlEPService^(0+128)
  4805  0F88  3004               	movlw	4
  4806  0F89  0658               	xorwf	??_USBCtrlEPService^(0+128),w
  4807  0F8A  1D03               	btfss	3,2
  4808  0F8B  0008               	return
  4809                           
  4810                           ;usb_device.c: 2574: {
  4811                           ;usb_device.c: 2577: USBCtrlTrfInHandler();
  4812  0F8C  318F  278F         	fcall	_USBCtrlTrfInHandler
  4813  0F8E  0008               	return
  4814  0F8F                     __end_of_USBCtrlEPService:	
  4815                           
  4816                           	psect	text21
  4817  0BD0                     __ptext21:	
  4818 ;; *************** function _USBCtrlTrfSetupHandler *****************
  4819 ;; Defined at:
  4820 ;;		line 2622 in file "../Microchip/USB/usb_device.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;		None
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;		None
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  1    wreg      void 
  4827 ;; Registers used:
  4828 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4836 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4837 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4838 ;;Total ram usage:        1 bytes
  4839 ;; Hardware stack levels used:    1
  4840 ;; Hardware stack levels required when called:    7
  4841 ;; This function calls:
  4842 ;;		_USBCheckStdRequest
  4843 ;;		_USBCtrlEPServiceComplete
  4844 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4845 ;; This function is called by:
  4846 ;;		_USBCtrlEPService
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           
  4851                           ;psect for function _USBCtrlTrfSetupHandler
  4852  0BD0                     _USBCtrlTrfSetupHandler:	
  4853                           
  4854                           ;usb_device.c: 2627: shortPacketStatus = 0;
  4855                           
  4856                           ;incstack = 0
  4857                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4858  0BD0  0021               	movlb	1	; select bank1
  4859  0BD1  01D0               	clrf	_shortPacketStatus^(0+128)	;volatile
  4860                           
  4861                           ;usb_device.c: 2628: USBDeferStatusStagePacket = FALSE;
  4862  0BD2  01C8               	clrf	_USBDeferStatusStagePacket^(0+128)	;volatile
  4863                           
  4864                           ;usb_device.c: 2629: USBDeferINDataStagePackets = FALSE;
  4865  0BD3  01C5               	clrf	_USBDeferINDataStagePackets^(0+128)	;volatile
  4866                           
  4867                           ;usb_device.c: 2630: USBDeferOUTDataStagePackets = FALSE;
  4868  0BD4  01C4               	clrf	_USBDeferOUTDataStagePackets^(0+128)	;volatile
  4869                           
  4870                           ;usb_device.c: 2631: BothEP0OutUOWNsSet = FALSE;
  4871  0BD5  01CA               	clrf	_BothEP0OutUOWNsSet^(0+128)	;volatile
  4872                           
  4873                           ;usb_device.c: 2632: controlTransferState = 0;
  4874  0BD6  01CF               	clrf	_controlTransferState^(0+128)	;volatile
  4875                           
  4876                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  4877  0BD7  307F               	movlw	127
  4878  0BD8  0020               	movlb	0	; select bank0
  4879  0BD9  00EF               	movwf	??_USBCtrlTrfSetupHandler
  4880  0BDA  0021               	movlb	1	; select bank1
  4881  0BDB  0832               	movf	_pBDTEntryIn^(0+128),w
  4882  0BDC  0086               	movwf	6
  4883  0BDD  0187               	clrf	7
  4884  0BDE  0020               	movlb	0	; select bank0
  4885  0BDF  086F               	movf	??_USBCtrlTrfSetupHandler,w
  4886  0BE0  0581               	andwf	1,f
  4887                           
  4888                           ;usb_device.c: 2642: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  4889  0BE1  3004               	movlw	4
  4890  0BE2  00EF               	movwf	??_USBCtrlTrfSetupHandler
  4891  0BE3  086F               	movf	??_USBCtrlTrfSetupHandler,w
  4892  0BE4  0021               	movlb	1	; select bank1
  4893  0BE5  06B2               	xorwf	_pBDTEntryIn^(0+128),f
  4894                           
  4895                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  4896  0BE6  307F               	movlw	127
  4897  0BE7  0020               	movlb	0	; select bank0
  4898  0BE8  00EF               	movwf	??_USBCtrlTrfSetupHandler
  4899  0BE9  0021               	movlb	1	; select bank1
  4900  0BEA  0832               	movf	_pBDTEntryIn^(0+128),w
  4901  0BEB  0086               	movwf	6
  4902  0BEC  0187               	clrf	7
  4903  0BED  0020               	movlb	0	; select bank0
  4904  0BEE  086F               	movf	??_USBCtrlTrfSetupHandler,w
  4905  0BEF  0581               	andwf	1,f
  4906                           
  4907                           ;usb_device.c: 2644: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  4908  0BF0  3004               	movlw	4
  4909  0BF1  00EF               	movwf	??_USBCtrlTrfSetupHandler
  4910  0BF2  086F               	movf	??_USBCtrlTrfSetupHandler,w
  4911  0BF3  0021               	movlb	1	; select bank1
  4912  0BF4  06B2               	xorwf	_pBDTEntryIn^(0+128),f
  4913                           
  4914                           ;usb_device.c: 2645: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  4915  0BF5  307F               	movlw	127
  4916  0BF6  0020               	movlb	0	; select bank0
  4917  0BF7  00EF               	movwf	??_USBCtrlTrfSetupHandler
  4918  0BF8  0021               	movlb	1	; select bank1
  4919  0BF9  0851               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4920  0BFA  0086               	movwf	6
  4921  0BFB  0187               	clrf	7
  4922  0BFC  0020               	movlb	0	; select bank0
  4923  0BFD  086F               	movf	??_USBCtrlTrfSetupHandler,w
  4924  0BFE  0581               	andwf	1,f
  4925                           
  4926                           ;usb_device.c: 2647: inPipes[0].info.Val = 0;
  4927  0BFF  0021               	movlb	1	; select bank1
  4928  0C00  01A9               	clrf	(_inPipes^(0+128)+2)	;volatile
  4929                           
  4930                           ;usb_device.c: 2648: inPipes[0].wCount.Val = 0;
  4931  0C01  01AA               	clrf	(_inPipes^(0+128)+3)	;volatile
  4932  0C02  01AB               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  4933                           
  4934                           ;usb_device.c: 2649: outPipes[0].info.Val = 0;
  4935  0C03  01A2               	clrf	(_outPipes^(0+128)+2)	;volatile
  4936                           
  4937                           ;usb_device.c: 2650: outPipes[0].wCount.Val = 0;
  4938  0C04  01A3               	clrf	(_outPipes^(0+128)+3)	;volatile
  4939  0C05  01A4               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
  4940                           
  4941                           ;usb_device.c: 2656: USBCheckStdRequest();
  4942  0C06  318D  25FB  318B   	fcall	_USBCheckStdRequest
  4943                           
  4944                           ;usb_device.c: 2657: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  4945  0C09  3003               	movlw	3
  4946  0C0A  0020               	movlb	0	; select bank0
  4947  0C0B  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4948  0C0C  3000               	movlw	0
  4949  0C0D  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4950  0C0E  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4951  0C0F  3000               	movlw	0
  4952  0C10  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4953  0C11  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4954  0C12  3187  27BB  318B   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4955                           
  4956                           ;usb_device.c: 2670: USBCtrlEPServiceComplete();
  4957  0C15  3186  26D5         	fcall	_USBCtrlEPServiceComplete
  4958  0C17  0008               	return
  4959  0C18                     __end_of_USBCtrlTrfSetupHandler:	
  4960                           
  4961                           	psect	text22
  4962  06D5                     __ptext22:	
  4963 ;; *************** function _USBCtrlEPServiceComplete *****************
  4964 ;; Defined at:
  4965 ;;		line 1785 in file "../Microchip/USB/usb_device.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;		None
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;		None
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      void 
  4972 ;; Registers used:
  4973 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4981 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4982 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4983 ;;Total ram usage:        2 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; Hardware stack levels required when called:    2
  4986 ;; This function calls:
  4987 ;;		_USBCtrlEPAllowDataStage
  4988 ;;		_USBCtrlEPAllowStatusStage
  4989 ;; This function is called by:
  4990 ;;		_USBCtrlTrfSetupHandler
  4991 ;; This function uses a non-reentrant model
  4992 ;;
  4993                           
  4994                           
  4995                           ;psect for function _USBCtrlEPServiceComplete
  4996  06D5                     _USBCtrlEPServiceComplete:	
  4997                           
  4998                           ;usb_device.c: 1791: UCONbits.PKTDIS = 0;
  4999                           
  5000                           ;incstack = 0
  5001                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5002  06D5  003D               	movlb	29	; select bank29
  5003  06D6  120E               	bcf	14,4	;volatile
  5004                           
  5005                           ;usb_device.c: 1797: if(inPipes[0].info.bits.busy == 0)
  5006  06D7  0021               	movlb	1	; select bank1
  5007  06D8  1BA9               	btfsc	(_inPipes^(0+128)+2),7	;volatile
  5008  06D9  2F0B               	goto	i1l216
  5009                           
  5010                           ;usb_device.c: 1798: {
  5011                           ;usb_device.c: 1799: if(outPipes[0].info.bits.busy == 1)
  5012  06DA  1FA2               	btfss	(_outPipes^(0+128)+2),7	;volatile
  5013  06DB  2EE9               	goto	i1l3191
  5014                           
  5015                           ;usb_device.c: 1800: {
  5016                           ;usb_device.c: 1801: controlTransferState = 2;
  5017  06DC  3002               	movlw	2
  5018  06DD  00F7               	movwf	??_USBCtrlEPServiceComplete
  5019  06DE  0877               	movf	??_USBCtrlEPServiceComplete,w
  5020  06DF  00CF               	movwf	_controlTransferState^(0+128)	;volatile
  5021                           
  5022                           ;usb_device.c: 1812: if(USBDeferOUTDataStagePackets == FALSE)
  5023  06E0  0844               	movf	_USBDeferOUTDataStagePackets^(0+128),w	;volatile
  5024  06E1  1D03               	btfss	3,2
  5025  06E2  2EE5               	goto	i1l3187
  5026                           
  5027                           ;usb_device.c: 1813: {
  5028                           ;usb_device.c: 1814: USBCtrlEPAllowDataStage();
  5029  06E3  318C  2418         	fcall	_USBCtrlEPAllowDataStage
  5030  06E5                     i1l3187:	
  5031                           
  5032                           ;usb_device.c: 1815: }
  5033                           ;usb_device.c: 1819: USBStatusStageEnabledFlag2 = FALSE;
  5034  06E5  0021               	movlb	1	; select bank1
  5035  06E6  01C6               	clrf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  5036                           
  5037                           ;usb_device.c: 1820: USBStatusStageEnabledFlag1 = FALSE;
  5038  06E7  01C7               	clrf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  5039                           
  5040                           ;usb_device.c: 1821: }
  5041  06E8  0008               	return
  5042  06E9                     i1l3191:	
  5043                           
  5044                           ;usb_device.c: 1822: else
  5045                           ;usb_device.c: 1823: {
  5046                           ;usb_device.c: 1828: pBDTEntryEP0OutNext->CNT = 8;
  5047  06E9  3008               	movlw	8
  5048  06EA  00F7               	movwf	??_USBCtrlEPServiceComplete
  5049  06EB  0A51               	incf	_pBDTEntryEP0OutNext^(0+128),w
  5050  06EC  0086               	movwf	6
  5051  06ED  0187               	clrf	7
  5052  06EE  0877               	movf	??_USBCtrlEPServiceComplete,w
  5053  06EF  0081               	movwf	1
  5054                           
  5055                           ;usb_device.c: 1829: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  5056  06F0  3050               	movlw	80
  5057  06F1  00F7               	movwf	??_USBCtrlEPServiceComplete
  5058  06F2  3000               	movlw	0
  5059  06F3  00F8               	movwf	??_USBCtrlEPServiceComplete+1
  5060  06F4  0851               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5061  06F5  3E02               	addlw	2
  5062  06F6  0086               	movwf	6
  5063  06F7  0187               	clrf	7
  5064  06F8  0877               	movf	??_USBCtrlEPServiceComplete,w
  5065  06F9  3FC0               	movwi [0]fsr1
  5066  06FA  0878               	movf	??_USBCtrlEPServiceComplete+1,w
  5067  06FB  3FC1               	movwi [1]fsr1
  5068                           
  5069                           ;usb_device.c: 1830: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|(0x08 & 0x08)|0x04;
  5070  06FC  308C               	movlw	140
  5071  06FD  00F7               	movwf	??_USBCtrlEPServiceComplete
  5072  06FE  0851               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5073  06FF  0086               	movwf	6
  5074  0700  0187               	clrf	7
  5075  0701  0877               	movf	??_USBCtrlEPServiceComplete,w
  5076  0702  0081               	movwf	1
  5077                           
  5078                           ;usb_device.c: 1831: pBDTEntryIn[0]->STAT.Val = 0x80|0x04;
  5079  0703  3084               	movlw	132
  5080  0704  00F7               	movwf	??_USBCtrlEPServiceComplete
  5081  0705  0832               	movf	_pBDTEntryIn^(0+128),w
  5082  0706  0086               	movwf	6
  5083  0707  0187               	clrf	7
  5084  0708  0877               	movf	??_USBCtrlEPServiceComplete,w
  5085  0709  0081               	movwf	1
  5086                           
  5087                           ;usb_device.c: 1832: }
  5088                           ;usb_device.c: 1833: }
  5089  070A  0008               	return
  5090  070B                     i1l216:	
  5091                           
  5092                           ;usb_device.c: 1834: else
  5093                           ;usb_device.c: 1835: {
  5094                           ;usb_device.c: 1836: if(SetupPkt.DataDir == (0x80>>7))
  5095  070B  0020               	movlb	0	; select bank0
  5096  070C  1FD0               	btfss	80,7	;volatile
  5097  070D  2F22               	goto	i1l3213
  5098                           
  5099                           ;usb_device.c: 1837: {
  5100                           ;usb_device.c: 1838: controlTransferState = 1;
  5101  070E  3001               	movlw	1
  5102  070F  00F7               	movwf	??_USBCtrlEPServiceComplete
  5103  0710  0877               	movf	??_USBCtrlEPServiceComplete,w
  5104  0711  0021               	movlb	1	; select bank1
  5105  0712  00CF               	movwf	_controlTransferState^(0+128)	;volatile
  5106                           
  5107                           ;usb_device.c: 1852: if(USBDeferINDataStagePackets == FALSE)
  5108  0713  0845               	movf	_USBDeferINDataStagePackets^(0+128),w	;volatile
  5109  0714  1D03               	btfss	3,2
  5110  0715  2F19               	goto	i1l3205
  5111                           
  5112                           ;usb_device.c: 1853: {
  5113                           ;usb_device.c: 1854: USBCtrlEPAllowDataStage();
  5114  0716  318C  2418  3186   	fcall	_USBCtrlEPAllowDataStage
  5115  0719                     i1l3205:	
  5116                           
  5117                           ;usb_device.c: 1855: }
  5118                           ;usb_device.c: 1877: USBStatusStageEnabledFlag2 = FALSE;
  5119  0719  0021               	movlb	1	; select bank1
  5120  071A  01C6               	clrf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  5121                           
  5122                           ;usb_device.c: 1878: USBStatusStageEnabledFlag1 = FALSE;
  5123  071B  01C7               	clrf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  5124                           
  5125                           ;usb_device.c: 1879: if(USBDeferStatusStagePacket == FALSE)
  5126  071C  0848               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
  5127  071D  1D03               	btfss	3,2
  5128  071E  0008               	return
  5129                           
  5130                           ;usb_device.c: 1880: {
  5131                           ;usb_device.c: 1881: USBCtrlEPAllowStatusStage();
  5132  071F  318D  259F         	fcall	_USBCtrlEPAllowStatusStage
  5133                           
  5134                           ;usb_device.c: 1882: }
  5135                           ;usb_device.c: 1883: }
  5136  0721  0008               	return
  5137  0722                     i1l3213:	
  5138                           
  5139                           ;usb_device.c: 1884: else
  5140                           ;usb_device.c: 1885: {
  5141                           ;usb_device.c: 1896: controlTransferState = 2;
  5142  0722  3002               	movlw	2
  5143  0723  00F7               	movwf	??_USBCtrlEPServiceComplete
  5144  0724  0877               	movf	??_USBCtrlEPServiceComplete,w
  5145  0725  0021               	movlb	1	; select bank1
  5146  0726  00CF               	movwf	_controlTransferState^(0+128)	;volatile
  5147                           
  5148                           ;usb_device.c: 1899: pBDTEntryEP0OutNext->CNT = 8;
  5149  0727  3008               	movlw	8
  5150  0728  00F7               	movwf	??_USBCtrlEPServiceComplete
  5151  0729  0A51               	incf	_pBDTEntryEP0OutNext^(0+128),w
  5152  072A  0086               	movwf	6
  5153  072B  0187               	clrf	7
  5154  072C  0877               	movf	??_USBCtrlEPServiceComplete,w
  5155  072D  0081               	movwf	1
  5156                           
  5157                           ;usb_device.c: 1900: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  5158  072E  3050               	movlw	80
  5159  072F  00F7               	movwf	??_USBCtrlEPServiceComplete
  5160  0730  3000               	movlw	0
  5161  0731  00F8               	movwf	??_USBCtrlEPServiceComplete+1
  5162  0732  0851               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5163  0733  3E02               	addlw	2
  5164  0734  0086               	movwf	6
  5165  0735  0187               	clrf	7
  5166  0736  0877               	movf	??_USBCtrlEPServiceComplete,w
  5167  0737  3FC0               	movwi [0]fsr1
  5168  0738  0878               	movf	??_USBCtrlEPServiceComplete+1,w
  5169  0739  3FC1               	movwi [1]fsr1
  5170                           
  5171                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x04;
  5172  073A  3084               	movlw	132
  5173  073B  00F7               	movwf	??_USBCtrlEPServiceComplete
  5174  073C  0851               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5175  073D  0086               	movwf	6
  5176  073E  0187               	clrf	7
  5177  073F  0877               	movf	??_USBCtrlEPServiceComplete,w
  5178  0740  0081               	movwf	1
  5179                           
  5180                           ;usb_device.c: 1904: USBStatusStageEnabledFlag2 = FALSE;
  5181  0741  01C6               	clrf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  5182                           
  5183                           ;usb_device.c: 1905: USBStatusStageEnabledFlag1 = FALSE;
  5184  0742  01C7               	clrf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  5185                           
  5186                           ;usb_device.c: 1906: if(USBDeferStatusStagePacket == FALSE)
  5187  0743  0848               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
  5188  0744  1D03               	btfss	3,2
  5189  0745  0008               	return
  5190                           
  5191                           ;usb_device.c: 1907: {
  5192                           ;usb_device.c: 1908: USBCtrlEPAllowStatusStage();
  5193  0746  318D  259F         	fcall	_USBCtrlEPAllowStatusStage
  5194  0748  0008               	return
  5195  0749                     __end_of_USBCtrlEPServiceComplete:	
  5196                           
  5197                           	psect	text23
  5198  0C18                     __ptext23:	
  5199 ;; *************** function _USBCtrlEPAllowDataStage *****************
  5200 ;; Defined at:
  5201 ;;		line 1659 in file "../Microchip/USB/usb_device.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;		None
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;		None
  5206 ;; Return value:  Size  Location     Type
  5207 ;;                  1    wreg      void 
  5208 ;; Registers used:
  5209 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5210 ;; Tracked objects:
  5211 ;;		On entry : 0/0
  5212 ;;		On exit  : 0/0
  5213 ;;		Unchanged: 0/0
  5214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5217 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5218 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5219 ;;Total ram usage:        2 bytes
  5220 ;; Hardware stack levels used:    1
  5221 ;; Hardware stack levels required when called:    1
  5222 ;; This function calls:
  5223 ;;		_USBCtrlTrfTxService
  5224 ;; This function is called by:
  5225 ;;		_USBCtrlEPServiceComplete
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229                           
  5230                           ;psect for function _USBCtrlEPAllowDataStage
  5231  0C18                     _USBCtrlEPAllowDataStage:	
  5232                           
  5233                           ;usb_device.c: 1661: USBDeferINDataStagePackets = FALSE;
  5234                           
  5235                           ;incstack = 0
  5236                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5237  0C18  0021               	movlb	1	; select bank1
  5238  0C19  01C5               	clrf	_USBDeferINDataStagePackets^(0+128)	;volatile
  5239                           
  5240                           ;usb_device.c: 1662: USBDeferOUTDataStagePackets = FALSE;
  5241  0C1A  01C4               	clrf	_USBDeferOUTDataStagePackets^(0+128)	;volatile
  5242                           
  5243                           ;usb_device.c: 1664: if(controlTransferState == 2)
  5244  0C1B  3002               	movlw	2
  5245  0C1C  064F               	xorwf	_controlTransferState^(0+128),w	;volatile
  5246  0C1D  1D03               	btfss	3,2
  5247  0C1E  2C3A               	goto	i1l2973
  5248                           
  5249                           ;usb_device.c: 1665: {
  5250                           ;usb_device.c: 1667: pBDTEntryEP0OutNext->CNT = 8;
  5251  0C1F  3008               	movlw	8
  5252  0C20  00F5               	movwf	??_USBCtrlEPAllowDataStage
  5253  0C21  0A51               	incf	_pBDTEntryEP0OutNext^(0+128),w
  5254  0C22  0086               	movwf	6
  5255  0C23  0187               	clrf	7
  5256  0C24  0875               	movf	??_USBCtrlEPAllowDataStage,w
  5257  0C25  0081               	movwf	1
  5258                           
  5259                           ;usb_device.c: 1668: pBDTEntryEP0OutNext->ADR = (((WORD)(&CtrlTrfData))& 0x7FFF);
  5260  0C26  3058               	movlw	88
  5261  0C27  00F5               	movwf	??_USBCtrlEPAllowDataStage
  5262  0C28  3000               	movlw	0
  5263  0C29  00F6               	movwf	??_USBCtrlEPAllowDataStage+1
  5264  0C2A  0851               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5265  0C2B  3E02               	addlw	2
  5266  0C2C  0086               	movwf	6
  5267  0C2D  0187               	clrf	7
  5268  0C2E  0875               	movf	??_USBCtrlEPAllowDataStage,w
  5269  0C2F  3FC0               	movwi [0]fsr1
  5270  0C30  0876               	movf	??_USBCtrlEPAllowDataStage+1,w
  5271  0C31  3FC1               	movwi [1]fsr1
  5272                           
  5273                           ;usb_device.c: 1669: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x40|(0x08 & 0x08);
  5274  0C32  30C8               	movlw	200
  5275  0C33  00F5               	movwf	??_USBCtrlEPAllowDataStage
  5276  0C34  0851               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5277  0C35  0086               	movwf	6
  5278  0C36  0187               	clrf	7
  5279  0C37  0875               	movf	??_USBCtrlEPAllowDataStage,w
  5280  0C38  0081               	movwf	1
  5281                           
  5282                           ;usb_device.c: 1670: }
  5283  0C39  0008               	return
  5284  0C3A                     i1l2973:	
  5285                           
  5286                           ;usb_device.c: 1671: else
  5287                           ;usb_device.c: 1672: {
  5288                           ;usb_device.c: 1675: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  5289  0C3A  082B               	movf	((_inPipes+1)^(0+128)+3),w	;volatile
  5290  0C3B  0020               	movlb	0	; select bank0
  5291  0C3C  0257               	subwf	87,w	;volatile
  5292  0C3D  1D03               	skipz
  5293  0C3E  2C43               	goto	u250_25
  5294  0C3F  0021               	movlb	1	; select bank1
  5295  0C40  082A               	movf	(_inPipes^(0+128)+3),w	;volatile
  5296  0C41  0020               	movlb	0	; select bank0
  5297  0C42  0256               	subwf	86,w	;volatile
  5298  0C43                     u250_25:	
  5299  0C43  1803               	skipnc
  5300  0C44  2C4C               	goto	i1l2977
  5301                           
  5302                           ;usb_device.c: 1676: {
  5303                           ;usb_device.c: 1677: inPipes[0].wCount.Val = SetupPkt.wLength;
  5304  0C45  0857               	movf	87,w	;volatile
  5305  0C46  0021               	movlb	1	; select bank1
  5306  0C47  00AB               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  5307  0C48  0020               	movlb	0	; select bank0
  5308  0C49  0856               	movf	86,w	;volatile
  5309  0C4A  0021               	movlb	1	; select bank1
  5310  0C4B  00AA               	movwf	(_inPipes^(0+128)+3)	;volatile
  5311  0C4C                     i1l2977:	
  5312                           
  5313                           ;usb_device.c: 1678: }
  5314                           ;usb_device.c: 1679: USBCtrlTrfTxService();
  5315  0C4C  3187  2749         	fcall	_USBCtrlTrfTxService
  5316                           
  5317                           ;usb_device.c: 1684: pBDTEntryIn[0]->ADR = (((WORD)(&CtrlTrfData))& 0x7FFF);
  5318  0C4E  3058               	movlw	88
  5319  0C4F  00F5               	movwf	??_USBCtrlEPAllowDataStage
  5320  0C50  3000               	movlw	0
  5321  0C51  00F6               	movwf	??_USBCtrlEPAllowDataStage+1
  5322  0C52  0021               	movlb	1	; select bank1
  5323  0C53  0832               	movf	_pBDTEntryIn^(0+128),w
  5324  0C54  3E02               	addlw	2
  5325  0C55  0086               	movwf	6
  5326  0C56  0187               	clrf	7
  5327  0C57  0875               	movf	??_USBCtrlEPAllowDataStage,w
  5328  0C58  3FC0               	movwi [0]fsr1
  5329  0C59  0876               	movf	??_USBCtrlEPAllowDataStage+1,w
  5330  0C5A  3FC1               	movwi [1]fsr1
  5331                           
  5332                           ;usb_device.c: 1685: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|(0x08 & 0x08);
  5333  0C5B  30C8               	movlw	200
  5334  0C5C  00F5               	movwf	??_USBCtrlEPAllowDataStage
  5335  0C5D  0832               	movf	_pBDTEntryIn^(0+128),w
  5336  0C5E  0086               	movwf	6
  5337  0C5F  0187               	clrf	7
  5338  0C60  0875               	movf	??_USBCtrlEPAllowDataStage,w
  5339  0C61  0081               	movwf	1
  5340  0C62  0008               	return
  5341  0C63                     __end_of_USBCtrlEPAllowDataStage:	
  5342                           
  5343                           	psect	text24
  5344  0DFB                     __ptext24:	
  5345 ;; *************** function _USBCheckStdRequest *****************
  5346 ;; Defined at:
  5347 ;;		line 2838 in file "../Microchip/USB/usb_device.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;		None
  5350 ;; Auto vars:     Size  Location     Type
  5351 ;;		None
  5352 ;; Return value:  Size  Location     Type
  5353 ;;                  1    wreg      void 
  5354 ;; Registers used:
  5355 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5356 ;; Tracked objects:
  5357 ;;		On entry : 0/0
  5358 ;;		On exit  : 0/0
  5359 ;;		Unchanged: 0/0
  5360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5363 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5364 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5365 ;;Total ram usage:        1 bytes
  5366 ;; Hardware stack levels used:    1
  5367 ;; Hardware stack levels required when called:    6
  5368 ;; This function calls:
  5369 ;;		_USBStdFeatureReqHandler
  5370 ;;		_USBStdGetDscHandler
  5371 ;;		_USBStdGetStatusHandler
  5372 ;;		_USBStdSetCfgHandler
  5373 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5374 ;; This function is called by:
  5375 ;;		_USBCtrlTrfSetupHandler
  5376 ;; This function uses a non-reentrant model
  5377 ;;
  5378                           
  5379                           
  5380                           ;psect for function _USBCheckStdRequest
  5381  0DFB                     _USBCheckStdRequest:	
  5382                           
  5383                           ;usb_device.c: 2840: if(SetupPkt.RequestType != (0x00>>5)) return;
  5384                           
  5385                           ;incstack = 0
  5386                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5387  0DFB  0020               	movlb	0	; select bank0
  5388  0DFC  0E50               	swapf	80,w	;volatile
  5389  0DFD  0C89               	rrf	9,f
  5390  0DFE  3903               	andlw	3
  5391  0DFF  3A00               	xorlw	0
  5392  0E00  1D03               	btfss	3,2
  5393  0E01  0008               	return
  5394  0E02  2E4D               	goto	i1l3311
  5395  0E03                     i1l340:	
  5396                           ;usb_device.c: 2843: {
  5397                           ;usb_device.c: 2844: case 5:
  5398                           
  5399                           ;usb_device.c: 2842: switch(SetupPkt.bRequest)
  5400                           
  5401                           
  5402                           ;usb_device.c: 2845: inPipes[0].info.bits.busy = 1;
  5403  0E03  0021               	movlb	1	; select bank1
  5404  0E04  17A9               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5405                           
  5406                           ;usb_device.c: 2846: USBDeviceState = ADR_PENDING_STATE;
  5407  0E05  3008               	movlw	8
  5408  0E06  0020               	movlb	0	; select bank0
  5409  0E07  00EE               	movwf	??_USBCheckStdRequest
  5410  0E08  086E               	movf	??_USBCheckStdRequest,w
  5411  0E09  0021               	movlb	1	; select bank1
  5412  0E0A  00D3               	movwf	_USBDeviceState^(0+128)	;volatile
  5413                           
  5414                           ;usb_device.c: 2848: break;
  5415  0E0B  0008               	return
  5416  0E0C                     i1l3281:	
  5417                           ;usb_device.c: 2849: case 6:
  5418                           
  5419                           
  5420                           ;usb_device.c: 2850: USBStdGetDscHandler();
  5421  0E0C  3185  25E7         	fcall	_USBStdGetDscHandler
  5422                           
  5423                           ;usb_device.c: 2851: break;
  5424  0E0E  0008               	return
  5425  0E0F                     i1l3283:	
  5426                           ;usb_device.c: 2852: case 9:
  5427                           
  5428                           
  5429                           ;usb_device.c: 2853: USBStdSetCfgHandler();
  5430  0E0F  3185  2568         	fcall	_USBStdSetCfgHandler
  5431                           
  5432                           ;usb_device.c: 2854: break;
  5433  0E11  0008               	return
  5434  0E12                     i1l3285:	
  5435                           ;usb_device.c: 2855: case 8:
  5436                           
  5437                           
  5438                           ;usb_device.c: 2856: inPipes[0].pSrc.bRam = (BYTE*)&USBActiveConfiguration;
  5439  0E12  30D7               	movlw	low _USBActiveConfiguration
  5440  0E13  0021               	movlb	1	; select bank1
  5441  0E14  00A7               	movwf	_inPipes^(0+128)	;volatile
  5442  0E15  3000               	movlw	high _USBActiveConfiguration
  5443  0E16  00A8               	movwf	(_inPipes+1)^(0+128)	;volatile
  5444                           
  5445                           ;usb_device.c: 2857: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5446  0E17  1429               	bsf	(_inPipes^(0+128)+2),0	;volatile
  5447                           
  5448                           ;usb_device.c: 2858: inPipes[0].wCount.v[0] = 1;
  5449  0E18  3001               	movlw	1
  5450  0E19  0020               	movlb	0	; select bank0
  5451  0E1A  00EE               	movwf	??_USBCheckStdRequest
  5452  0E1B  086E               	movf	??_USBCheckStdRequest,w
  5453  0E1C  0021               	movlb	1	; select bank1
  5454  0E1D  00AA               	movwf	(_inPipes^(0+128)+3)	;volatile
  5455                           
  5456                           ;usb_device.c: 2859: inPipes[0].info.bits.busy = 1;
  5457  0E1E  17A9               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5458                           
  5459                           ;usb_device.c: 2860: break;
  5460  0E1F  0008               	return
  5461  0E20                     i1l3293:	
  5462                           ;usb_device.c: 2861: case 0:
  5463                           
  5464                           
  5465                           ;usb_device.c: 2862: USBStdGetStatusHandler();
  5466  0E20  318C  24FE         	fcall	_USBStdGetStatusHandler
  5467                           
  5468                           ;usb_device.c: 2863: break;
  5469  0E22  0008               	return
  5470  0E23                     i1l3295:	
  5471                           ;usb_device.c: 2864: case 1:
  5472                           
  5473                           
  5474                           ;usb_device.c: 2865: case 3:
  5475                           ;usb_device.c: 2866: USBStdFeatureReqHandler();
  5476  0E23  3180  2037         	fcall	_USBStdFeatureReqHandler
  5477                           
  5478                           ;usb_device.c: 2867: break;
  5479  0E25  0008               	return
  5480  0E26                     i1l3297:	
  5481                           ;usb_device.c: 2868: case 10:
  5482                           
  5483                           
  5484                           ;usb_device.c: 2869: inPipes[0].pSrc.bRam = (BYTE*)&USBAlternateInterface[SetupPkt.bIntf
      +                          ID];
  5485  0E26  0020               	movlb	0	; select bank0
  5486  0E27  0854               	movf	84,w	;volatile
  5487  0E28  3ED4               	addlw	(low (_USBAlternateInterface| 0))& (0+255)
  5488  0E29  0021               	movlb	1	; select bank1
  5489  0E2A  00A7               	movwf	_inPipes^(0+128)	;volatile
  5490  0E2B  3000               	movlw	0
  5491  0E2C  00A8               	movwf	(_inPipes+1)^(0+128)	;volatile
  5492                           
  5493                           ;usb_device.c: 2870: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5494  0E2D  1429               	bsf	(_inPipes^(0+128)+2),0	;volatile
  5495                           
  5496                           ;usb_device.c: 2871: inPipes[0].wCount.v[0] = 1;
  5497  0E2E  3001               	movlw	1
  5498  0E2F  0020               	movlb	0	; select bank0
  5499  0E30  00EE               	movwf	??_USBCheckStdRequest
  5500  0E31  086E               	movf	??_USBCheckStdRequest,w
  5501  0E32  0021               	movlb	1	; select bank1
  5502  0E33  00AA               	movwf	(_inPipes^(0+128)+3)	;volatile
  5503                           
  5504                           ;usb_device.c: 2872: inPipes[0].info.bits.busy = 1;
  5505  0E34  17A9               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5506                           
  5507                           ;usb_device.c: 2873: break;
  5508  0E35  0008               	return
  5509  0E36                     i1l349:	
  5510                           ;usb_device.c: 2874: case 11:
  5511                           
  5512                           
  5513                           ;usb_device.c: 2875: inPipes[0].info.bits.busy = 1;
  5514  0E36  0021               	movlb	1	; select bank1
  5515  0E37  17A9               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5516                           
  5517                           ;usb_device.c: 2876: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  5518  0E38  0020               	movlb	0	; select bank0
  5519  0E39  0852               	movf	82,w	;volatile
  5520  0E3A  00EE               	movwf	??_USBCheckStdRequest
  5521  0E3B  0854               	movf	84,w	;volatile
  5522  0E3C  3ED4               	addlw	(low (_USBAlternateInterface| 0))& (0+255)
  5523  0E3D  0086               	movwf	6
  5524  0E3E  0187               	clrf	7
  5525  0E3F  086E               	movf	??_USBCheckStdRequest,w
  5526  0E40  0081               	movwf	1
  5527                           
  5528                           ;usb_device.c: 2877: break;
  5529  0E41  0008               	return
  5530  0E42                     i1l3307:	
  5531                           ;usb_device.c: 2878: case 7:
  5532                           
  5533                           
  5534                           ;usb_device.c: 2879: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  5535  0E42  3002               	movlw	2
  5536  0E43  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5537  0E44  3000               	movlw	0
  5538  0E45  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5539  0E46  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5540  0E47  3000               	movlw	0
  5541  0E48  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5542  0E49  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5543  0E4A  3187  27BB         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5544                           
  5545                           ;usb_device.c: 2884: }
  5546                           
  5547                           ;usb_device.c: 2883: break;
  5548                           
  5549                           ;usb_device.c: 2882: default:
  5550                           
  5551                           ;usb_device.c: 2881: case 12:
  5552                           
  5553                           ;usb_device.c: 2880: break;
  5554  0E4C  0008               	return
  5555  0E4D                     i1l3311:	
  5556  0E4D  0020               	movlb	0	; select bank0
  5557  0E4E  0851               	movf	81,w	;volatile
  5558                           
  5559                           ; Switch size 1, requested type "space"
  5560                           ; Number of cases is 11, Range of values is 0 to 12
  5561                           ; switch strategies available:
  5562                           ; Name         Instructions Cycles
  5563                           ; direct_byte           32     6 (fixed)
  5564                           ; simple_byte           34    18 (average)
  5565                           ; jumptable            260     6 (fixed)
  5566                           ;	Chosen strategy is direct_byte
  5567  0E4F  0084               	movwf	4
  5568  0E50  300D               	movlw	13
  5569  0E51  0204               	subwf	4,w
  5570  0E52  1803               	skipnc
  5571  0E53  0008               	return
  5572  0E54  3188               	movlp	high i1S4501
  5573  0E55  3504               	lslf	4,w
  5574  0E56  3E00               	addlw	low i1S4501
  5575  0E57  0082               	movwf	2
  5576  0E58                     i1l338:	
  5577  0E58  0008               	return
  5578  0E59                     __end_of_USBCheckStdRequest:	
  5579                           
  5580                           	psect	swtext1
  5581  0800                     __pswtext1:	
  5582  0800                     i1S4501:	
  5583  0800  318E  2E20         	ljmp	i1l3293
  5584  0802  318E  2E23         	ljmp	i1l3295
  5585  0804  318E  2E58         	ljmp	i1l338
  5586  0806  318E  2E23         	ljmp	i1l3295
  5587  0808  318E  2E58         	ljmp	i1l338
  5588  080A  318E  2E03         	ljmp	i1l340
  5589  080C  318E  2E0C         	ljmp	i1l3281
  5590  080E  318E  2E42         	ljmp	i1l3307
  5591  0810  318E  2E12         	ljmp	i1l3285
  5592  0812  318E  2E0F         	ljmp	i1l3283
  5593  0814  318E  2E26         	ljmp	i1l3297
  5594  0816  318E  2E36         	ljmp	i1l349
  5595  0818  318E  2E58         	ljmp	i1l338
  5596                           
  5597                           	psect	text25
  5598  0568                     __ptext25:	
  5599 ;; *************** function _USBStdSetCfgHandler *****************
  5600 ;; Defined at:
  5601 ;;		line 2131 in file "../Microchip/USB/usb_device.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;		None
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;  p               2    8[BANK0 ] PTR unsigned char 
  5606 ;;		 -> UEP1(1), 
  5607 ;;  i               1   10[BANK0 ] unsigned char 
  5608 ;;  i               1   11[BANK0 ] unsigned char 
  5609 ;; Return value:  Size  Location     Type
  5610 ;;                  1    wreg      void 
  5611 ;; Registers used:
  5612 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5613 ;; Tracked objects:
  5614 ;;		On entry : 0/0
  5615 ;;		On exit  : 0/0
  5616 ;;		Unchanged: 0/0
  5617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5619 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5620 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5621 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5622 ;;Total ram usage:        5 bytes
  5623 ;; Hardware stack levels used:    1
  5624 ;; Hardware stack levels required when called:    5
  5625 ;; This function calls:
  5626 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5627 ;;		_memset
  5628 ;; This function is called by:
  5629 ;;		_USBCheckStdRequest
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           
  5634                           ;psect for function _USBStdSetCfgHandler
  5635  0568                     _USBStdSetCfgHandler:	
  5636                           
  5637                           ;usb_device.c: 2133: BYTE i;
  5638                           ;usb_device.c: 2136: inPipes[0].info.bits.busy = 1;
  5639                           
  5640                           ;incstack = 0
  5641                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5642  0568  0021               	movlb	1	; select bank1
  5643  0569  17A9               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5644                           
  5645                           ;usb_device.c: 2139: { BYTE i; BYTE* p = (BYTE*)&UEP1; for(i=0;i<2;i++) *p++ = 0; };
  5646  056A  300E               	movlw	14
  5647  056B  0020               	movlb	0	; select bank0
  5648  056C  00E9               	movwf	USBStdSetCfgHandler@p+1
  5649  056D  3099               	movlw	153
  5650  056E  00E8               	movwf	USBStdSetCfgHandler@p
  5651  056F  01EA               	clrf	USBStdSetCfgHandler@i_1844
  5652  0570  3002               	movlw	2
  5653  0571  026A               	subwf	USBStdSetCfgHandler@i_1844,w
  5654  0572  1803               	btfsc	3,0
  5655  0573  2D85               	goto	i1l2999
  5656  0574                     i1l2991:	
  5657  0574  0868               	movf	USBStdSetCfgHandler@p,w
  5658  0575  0086               	movwf	6
  5659  0576  0869               	movf	USBStdSetCfgHandler@p+1,w
  5660  0577  0087               	movwf	7
  5661  0578  0181               	clrf	1
  5662  0579  3001               	movlw	1
  5663  057A  07E8               	addwf	USBStdSetCfgHandler@p,f
  5664  057B  3000               	movlw	0
  5665  057C  3DE9               	addwfc	USBStdSetCfgHandler@p+1,f
  5666  057D  3001               	movlw	1
  5667  057E  00FD               	movwf	??_USBStdSetCfgHandler
  5668  057F  087D               	movf	??_USBStdSetCfgHandler,w
  5669  0580  07EA               	addwf	USBStdSetCfgHandler@i_1844,f
  5670  0581  3002               	movlw	2
  5671  0582  026A               	subwf	USBStdSetCfgHandler@i_1844,w
  5672  0583  1C03               	skipc
  5673  0584  2D74               	goto	i1l2991
  5674  0585                     i1l2999:	
  5675                           
  5676                           ;usb_device.c: 2142: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  5677  0585  3000               	movlw	0
  5678  0586  00F0               	movwf	memset@c
  5679  0587  00F1               	movwf	memset@c+1
  5680  0588  3030               	movlw	48
  5681  0589  00F2               	movwf	memset@n
  5682  058A  3000               	movlw	0
  5683  058B  00F3               	movwf	memset@n+1
  5684  058C  3020               	movlw	32
  5685  058D  318A  224C  3185   	fcall	_memset
  5686                           
  5687                           ;usb_device.c: 2145: UCONbits.PPBRST = 1;
  5688  0590  003D               	movlb	29	; select bank29
  5689  0591  170E               	bsf	14,6	;volatile
  5690                           
  5691                           ;usb_device.c: 2150: for(i = 0; i < (BYTE)(2+1u); i++)
  5692  0592  0020               	movlb	0	; select bank0
  5693  0593  01EB               	clrf	USBStdSetCfgHandler@i
  5694  0594  3003               	movlw	3
  5695  0595  026B               	subwf	USBStdSetCfgHandler@i,w
  5696  0596  1803               	btfsc	3,0
  5697  0597  2DAA               	goto	i1l3015
  5698  0598                     i1l3009:	
  5699                           
  5700                           ;usb_device.c: 2151: {
  5701                           ;usb_device.c: 2152: ep_data_in[i].Val = 0u;
  5702  0598  086B               	movf	USBStdSetCfgHandler@i,w
  5703  0599  3EAF               	addlw	(low (_ep_data_in| 0))& (0+255)
  5704  059A  0086               	movwf	6
  5705  059B  0187               	clrf	7
  5706  059C  0181               	clrf	1
  5707                           
  5708                           ;usb_device.c: 2153: ep_data_out[i].Val = 0u;
  5709  059D  086B               	movf	USBStdSetCfgHandler@i,w
  5710  059E  3EAC               	addlw	(low (_ep_data_out| 0))& (0+255)
  5711  059F  0086               	movwf	6
  5712  05A0  0187               	clrf	7
  5713  05A1  0181               	clrf	1
  5714  05A2  3001               	movlw	1
  5715  05A3  00FD               	movwf	??_USBStdSetCfgHandler
  5716  05A4  087D               	movf	??_USBStdSetCfgHandler,w
  5717  05A5  07EB               	addwf	USBStdSetCfgHandler@i,f
  5718  05A6  3003               	movlw	3
  5719  05A7  026B               	subwf	USBStdSetCfgHandler@i,w
  5720  05A8  1C03               	skipc
  5721  05A9  2D98               	goto	i1l3009
  5722  05AA                     i1l3015:	
  5723                           
  5724                           ;usb_device.c: 2154: }
  5725                           ;usb_device.c: 2157: memset((void*)&USBAlternateInterface,0x00,2);
  5726  05AA  3000               	movlw	0
  5727  05AB  00F0               	movwf	memset@c
  5728  05AC  00F1               	movwf	memset@c+1
  5729  05AD  3002               	movlw	2
  5730  05AE  00F2               	movwf	memset@n
  5731  05AF  3000               	movlw	0
  5732  05B0  00F3               	movwf	memset@n+1
  5733  05B1  30D4               	movlw	(low (_USBAlternateInterface| 0))& (0+255)
  5734  05B2  318A  224C  3185   	fcall	_memset
  5735                           
  5736                           ;usb_device.c: 2160: UCONbits.PPBRST = 0;
  5737  05B5  003D               	movlb	29	; select bank29
  5738  05B6  130E               	bcf	14,6	;volatile
  5739                           
  5740                           ;usb_device.c: 2162: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  5741  05B7  3028               	movlw	40
  5742  05B8  00FD               	movwf	??_USBStdSetCfgHandler
  5743  05B9  087D               	movf	??_USBStdSetCfgHandler,w
  5744  05BA  0021               	movlb	1	; select bank1
  5745  05BB  00B2               	movwf	_pBDTEntryIn^(0+128)
  5746                           
  5747                           ;usb_device.c: 2165: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  5748  05BC  3020               	movlw	32
  5749  05BD  00FD               	movwf	??_USBStdSetCfgHandler
  5750  05BE  087D               	movf	??_USBStdSetCfgHandler,w
  5751  05BF  00D2               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  5752                           
  5753                           ;usb_device.c: 2166: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5754  05C0  0852               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5755  05C1  00FD               	movwf	??_USBStdSetCfgHandler
  5756  05C2  087D               	movf	??_USBStdSetCfgHandler,w
  5757  05C3  00D1               	movwf	_pBDTEntryEP0OutNext^(0+128)
  5758                           
  5759                           ;usb_device.c: 2169: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  5760  05C4  0020               	movlb	0	; select bank0
  5761  05C5  0852               	movf	82,w	;volatile
  5762  05C6  00FD               	movwf	??_USBStdSetCfgHandler
  5763  05C7  087D               	movf	??_USBStdSetCfgHandler,w
  5764  05C8  0021               	movlb	1	; select bank1
  5765  05C9  00D7               	movwf	_USBActiveConfiguration^(0+128)	;volatile
  5766                           
  5767                           ;usb_device.c: 2172: if(USBActiveConfiguration == 0)
  5768  05CA  0857               	movf	_USBActiveConfiguration^(0+128),w	;volatile
  5769  05CB  1D03               	btfss	3,2
  5770  05CC  2DD2               	goto	i1l3031
  5771                           
  5772                           ;usb_device.c: 2173: {
  5773                           ;usb_device.c: 2175: USBDeviceState = ADDRESS_STATE;
  5774  05CD  3010               	movlw	16
  5775  05CE  00FD               	movwf	??_USBStdSetCfgHandler
  5776  05CF  087D               	movf	??_USBStdSetCfgHandler,w
  5777  05D0  00D3               	movwf	_USBDeviceState^(0+128)	;volatile
  5778                           
  5779                           ;usb_device.c: 2176: }
  5780  05D1  0008               	return
  5781  05D2                     i1l3031:	
  5782                           
  5783                           ;usb_device.c: 2177: else
  5784                           ;usb_device.c: 2178: {
  5785                           ;usb_device.c: 2180: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  5786  05D2  3001               	movlw	1
  5787  05D3  0020               	movlb	0	; select bank0
  5788  05D4  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5789  05D5  3000               	movlw	0
  5790  05D6  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5791  05D7  30D7               	movlw	(low (_USBActiveConfiguration| 0))& (0+255)
  5792  05D8  00FD               	movwf	??_USBStdSetCfgHandler
  5793  05D9  087D               	movf	??_USBStdSetCfgHandler,w
  5794  05DA  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5795  05DB  3001               	movlw	1
  5796  05DC  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5797  05DD  3000               	movlw	0
  5798  05DE  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5799  05DF  3187  27BB         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5800                           
  5801                           ;usb_device.c: 2185: USBDeviceState = CONFIGURED_STATE;
  5802  05E1  3020               	movlw	32
  5803  05E2  00FD               	movwf	??_USBStdSetCfgHandler
  5804  05E3  087D               	movf	??_USBStdSetCfgHandler,w
  5805  05E4  0021               	movlb	1	; select bank1
  5806  05E5  00D3               	movwf	_USBDeviceState^(0+128)	;volatile
  5807  05E6  0008               	return
  5808  05E7                     __end_of_USBStdSetCfgHandler:	
  5809                           
  5810                           	psect	text26
  5811  0A4C                     __ptext26:	
  5812 ;; *************** function _memset *****************
  5813 ;; Defined at:
  5814 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;  p1              1    wreg     PTR void 
  5817 ;;		 -> USBAlternateInterface(2), BDT(48), 
  5818 ;;  c               2    0[COMMON] int 
  5819 ;;  n               2    2[COMMON] unsigned int 
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;  p1              1    6[COMMON] PTR void 
  5822 ;;		 -> USBAlternateInterface(2), BDT(48), 
  5823 ;;  p               1    5[COMMON] PTR unsigned char 
  5824 ;;		 -> USBAlternateInterface(2), BDT(48), 
  5825 ;; Return value:  Size  Location     Type
  5826 ;;                  1    wreg      PTR void 
  5827 ;; Registers used:
  5828 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5829 ;; Tracked objects:
  5830 ;;		On entry : 0/0
  5831 ;;		On exit  : 0/0
  5832 ;;		Unchanged: 0/0
  5833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5834 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5835 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5836 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5837 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5838 ;;Total ram usage:        7 bytes
  5839 ;; Hardware stack levels used:    1
  5840 ;; This function calls:
  5841 ;;		Nothing
  5842 ;; This function is called by:
  5843 ;;		_USBStdSetCfgHandler
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           
  5848                           ;psect for function _memset
  5849  0A4C                     _memset:	
  5850                           
  5851                           ;incstack = 0
  5852                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  5853                           ;memset@p1 stored from wreg
  5854  0A4C  00F6               	movwf	memset@p1
  5855  0A4D  0876               	movf	memset@p1,w
  5856  0A4E  00F4               	movwf	??_memset
  5857  0A4F  0874               	movf	??_memset,w
  5858  0A50  00F5               	movwf	memset@p
  5859  0A51                     i1l2905:	
  5860  0A51  3001               	movlw	1
  5861  0A52  02F2               	subwf	memset@n,f
  5862  0A53  3000               	movlw	0
  5863  0A54  3BF3               	subwfb	memset@n+1,f
  5864  0A55  0A72               	incf	memset@n,w
  5865  0A56  1903               	btfsc	3,2
  5866  0A57  0A73               	incf	memset@n+1,w
  5867  0A58  1903               	btfsc	3,2
  5868  0A59  0008               	return
  5869  0A5A  0870               	movf	memset@c,w
  5870  0A5B  00F4               	movwf	??_memset
  5871  0A5C  0875               	movf	memset@p,w
  5872  0A5D  0086               	movwf	6
  5873  0A5E  0187               	clrf	7
  5874  0A5F  0874               	movf	??_memset,w
  5875  0A60  0081               	movwf	1
  5876  0A61  3001               	movlw	1
  5877  0A62  00F4               	movwf	??_memset
  5878  0A63  0874               	movf	??_memset,w
  5879  0A64  07F5               	addwf	memset@p,f
  5880  0A65  2A51               	goto	i1l2905
  5881  0A66                     __end_of_memset:	
  5882                           ;	Return value of _memset is never used
  5883                           
  5884                           
  5885                           	psect	text27
  5886  0CFE                     __ptext27:	
  5887 ;; *************** function _USBStdGetStatusHandler *****************
  5888 ;; Defined at:
  5889 ;;		line 2282 in file "../Microchip/USB/usb_device.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;		None
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;  p               1    1[COMMON] PTR struct __BDT
  5894 ;;		 -> NULL(0), BDT(48), 
  5895 ;; Return value:  Size  Location     Type
  5896 ;;                  1    wreg      void 
  5897 ;; Registers used:
  5898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5899 ;; Tracked objects:
  5900 ;;		On entry : 0/0
  5901 ;;		On exit  : 0/0
  5902 ;;		Unchanged: 0/0
  5903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5905 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5906 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5907 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5908 ;;Total ram usage:        2 bytes
  5909 ;; Hardware stack levels used:    1
  5910 ;; This function calls:
  5911 ;;		Nothing
  5912 ;; This function is called by:
  5913 ;;		_USBCheckStdRequest
  5914 ;; This function uses a non-reentrant model
  5915 ;;
  5916                           
  5917                           
  5918                           ;psect for function _USBStdGetStatusHandler
  5919  0CFE                     _USBStdGetStatusHandler:	
  5920                           
  5921                           ;usb_device.c: 2284: CtrlTrfData[0] = 0;
  5922                           
  5923                           ;incstack = 0
  5924                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  5925  0CFE  0020               	movlb	0	; select bank0
  5926  0CFF  01D8               	clrf	88	;volatile
  5927                           
  5928                           ;usb_device.c: 2285: CtrlTrfData[1] = 0;
  5929  0D00  01D9               	clrf	89	;volatile
  5930                           
  5931                           ;usb_device.c: 2287: switch(SetupPkt.Recipient)
  5932  0D01  2D34               	goto	i1l3081
  5933  0D02                     i1l279:	
  5934                           ;usb_device.c: 2288: {
  5935                           ;usb_device.c: 2289: case (0x00):
  5936                           
  5937                           
  5938                           ;usb_device.c: 2295: if(1 == 1)
  5939  0D02  0021               	movlb	1	; select bank1
  5940  0D03  17A9               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5941                           
  5942                           ;usb_device.c: 2296: {
  5943                           ;usb_device.c: 2297: CtrlTrfData[0]|=0x01;
  5944  0D04  0020               	movlb	0	; select bank0
  5945  0D05  1458               	bsf	88,0	;volatile
  5946                           
  5947                           ;usb_device.c: 2298: }
  5948                           ;usb_device.c: 2300: if(RemoteWakeup == TRUE)
  5949  0D06  0021               	movlb	1	; select bank1
  5950  0D07  034D               	decf	_RemoteWakeup^(0+128),w	;volatile
  5951  0D08  1D03               	btfss	3,2
  5952  0D09  2D40               	goto	i1l282
  5953                           
  5954                           ;usb_device.c: 2301: {
  5955                           ;usb_device.c: 2302: CtrlTrfData[0]|=0x02;
  5956  0D0A  0020               	movlb	0	; select bank0
  5957  0D0B  14D8               	bsf	88,1	;volatile
  5958                           
  5959                           ;usb_device.c: 2303: }
  5960                           ;usb_device.c: 2304: break;
  5961  0D0C  2D40               	goto	i1l282
  5962  0D0D                     i1l283:	
  5963                           ;usb_device.c: 2305: case (0x01):
  5964                           
  5965                           
  5966                           ;usb_device.c: 2306: inPipes[0].info.bits.busy = 1;
  5967  0D0D  0021               	movlb	1	; select bank1
  5968  0D0E  17A9               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5969                           
  5970                           ;usb_device.c: 2307: break;
  5971  0D0F  2D40               	goto	i1l282
  5972  0D10                     i1l284:	
  5973                           ;usb_device.c: 2308: case (0x02):
  5974                           
  5975                           
  5976                           ;usb_device.c: 2309: inPipes[0].info.bits.busy = 1;
  5977  0D10  0021               	movlb	1	; select bank1
  5978  0D11  17A9               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5979                           
  5980                           ;usb_device.c: 2313: {
  5981                           ;usb_device.c: 2314: BDT_ENTRY *p;
  5982                           ;usb_device.c: 2316: if(SetupPkt.EPDir == 0)
  5983  0D12  0020               	movlb	0	; select bank0
  5984  0D13  1BD4               	btfsc	84,7	;volatile
  5985  0D14  2D1C               	goto	i1l3071
  5986                           
  5987                           ;usb_device.c: 2317: {
  5988                           ;usb_device.c: 2318: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  5989  0D15  0854               	movf	84,w	;volatile
  5990  0D16  390F               	andlw	15
  5991  0D17  3E35               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  5992  0D18  0086               	movwf	6
  5993  0D19  3001               	movlw	1	; select bank2/3
  5994  0D1A  0087               	movwf	7
  5995  0D1B  2D21               	goto	L6
  5996  0D1C                     i1l3071:	
  5997                           ;usb_device.c: 2319: }
  5998                           
  5999                           
  6000                           ;usb_device.c: 2320: else
  6001                           ;usb_device.c: 2321: {
  6002                           ;usb_device.c: 2322: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6003  0D1C  0854               	movf	84,w	;volatile
  6004  0D1D  390F               	andlw	15
  6005  0D1E  3EB2               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  6006  0D1F  0086               	movwf	6
  6007  0D20  0187               	clrf	7
  6008  0D21                     L6:	
  6009  0D21  0801               	movf	1,w
  6010  0D22  00F0               	movwf	??_USBStdGetStatusHandler
  6011  0D23  0870               	movf	??_USBStdGetStatusHandler,w
  6012  0D24  00F1               	movwf	USBStdGetStatusHandler@p
  6013                           
  6014                           ;usb_device.c: 2323: }
  6015                           ;usb_device.c: 2325: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  6016  0D25  0871               	movf	USBStdGetStatusHandler@p,w
  6017  0D26  0086               	movwf	6
  6018  0D27  0187               	clrf	7
  6019  0D28  1F81               	btfss	1,7
  6020  0D29  2D40               	goto	i1l282
  6021  0D2A  0871               	movf	USBStdGetStatusHandler@p,w
  6022  0D2B  0086               	movwf	6
  6023  0D2C  0187               	clrf	7
  6024  0D2D  1D01               	btfss	1,2
  6025  0D2E  2D40               	goto	i1l282
  6026                           
  6027                           ;usb_device.c: 2326: CtrlTrfData[0]=0x01;
  6028  0D2F  3001               	movlw	1
  6029  0D30  00F0               	movwf	??_USBStdGetStatusHandler
  6030  0D31  0870               	movf	??_USBStdGetStatusHandler,w
  6031  0D32  00D8               	movwf	88	;volatile
  6032                           
  6033                           ;usb_device.c: 2328: }
  6034                           ;usb_device.c: 2329: }
  6035                           
  6036                           ;usb_device.c: 2327: break;
  6037  0D33  2D40               	goto	i1l282
  6038  0D34                     i1l3081:	
  6039  0D34  0850               	movf	80,w	;volatile
  6040  0D35  391F               	andlw	31
  6041                           
  6042                           ; Switch size 1, requested type "space"
  6043                           ; Number of cases is 3, Range of values is 0 to 2
  6044                           ; switch strategies available:
  6045                           ; Name         Instructions Cycles
  6046                           ; simple_byte           10     6 (average)
  6047                           ; direct_byte           12     6 (fixed)
  6048                           ; jumptable            260     6 (fixed)
  6049                           ;	Chosen strategy is simple_byte
  6050  0D36  3A00               	xorlw	0	; case 0
  6051  0D37  1903               	skipnz
  6052  0D38  2D02               	goto	i1l279
  6053  0D39  3A01               	xorlw	1	; case 1
  6054  0D3A  1903               	skipnz
  6055  0D3B  2D0D               	goto	i1l283
  6056  0D3C  3A03               	xorlw	3	; case 2
  6057  0D3D  1903               	skipnz
  6058  0D3E  2D10               	goto	i1l284
  6059  0D3F  2D40               	goto	i1l282
  6060  0D40                     i1l282:	
  6061                           
  6062                           ;usb_device.c: 2331: if(inPipes[0].info.bits.busy == 1)
  6063  0D40  0021               	movlb	1	; select bank1
  6064  0D41  1FA9               	btfss	(_inPipes^(0+128)+2),7	;volatile
  6065  0D42  0008               	return
  6066                           
  6067                           ;usb_device.c: 2332: {
  6068                           ;usb_device.c: 2333: inPipes[0].pSrc.bRam = (BYTE*)&CtrlTrfData;
  6069  0D43  3058               	movlw	88
  6070  0D44  00A7               	movwf	_inPipes^(0+128)	;volatile
  6071  0D45  3000               	movlw	0
  6072  0D46  00A8               	movwf	(_inPipes+1)^(0+128)	;volatile
  6073                           
  6074                           ;usb_device.c: 2334: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6075  0D47  1429               	bsf	(_inPipes^(0+128)+2),0	;volatile
  6076                           
  6077                           ;usb_device.c: 2335: inPipes[0].wCount.v[0] = 2;
  6078  0D48  3002               	movlw	2
  6079  0D49  00F0               	movwf	??_USBStdGetStatusHandler
  6080  0D4A  0870               	movf	??_USBStdGetStatusHandler,w
  6081  0D4B  00AA               	movwf	(_inPipes^(0+128)+3)	;volatile
  6082  0D4C  0008               	return
  6083  0D4D                     __end_of_USBStdGetStatusHandler:	
  6084                           
  6085                           	psect	text28
  6086  05E7                     __ptext28:	
  6087 ;; *************** function _USBStdGetDscHandler *****************
  6088 ;; Defined at:
  6089 ;;		line 2206 in file "../Microchip/USB/usb_device.c"
  6090 ;; Parameters:    Size  Location     Type
  6091 ;;		None
  6092 ;; Auto vars:     Size  Location     Type
  6093 ;;		None
  6094 ;; Return value:  Size  Location     Type
  6095 ;;                  1    wreg      void 
  6096 ;; Registers used:
  6097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6098 ;; Tracked objects:
  6099 ;;		On entry : 0/0
  6100 ;;		On exit  : 0/0
  6101 ;;		Unchanged: 0/0
  6102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6105 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6106 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6107 ;;Total ram usage:        3 bytes
  6108 ;; Hardware stack levels used:    1
  6109 ;; This function calls:
  6110 ;;		Nothing
  6111 ;; This function is called by:
  6112 ;;		_USBCheckStdRequest
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115                           
  6116                           
  6117                           ;psect for function _USBStdGetDscHandler
  6118  05E7                     _USBStdGetDscHandler:	
  6119                           
  6120                           ;usb_device.c: 2208: if(SetupPkt.bmRequestType == 0x80)
  6121                           
  6122                           ;incstack = 0
  6123                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  6124  05E7  3080               	movlw	128
  6125  05E8  0020               	movlb	0	; select bank0
  6126  05E9  0650               	xorwf	80,w	;volatile
  6127  05EA  1D03               	btfss	3,2
  6128  05EB  0008               	return
  6129                           
  6130                           ;usb_device.c: 2209: {
  6131                           ;usb_device.c: 2210: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  6132  05EC  30C0               	movlw	192
  6133  05ED  00F0               	movwf	??_USBStdGetDscHandler
  6134  05EE  0870               	movf	??_USBStdGetDscHandler,w
  6135  05EF  0021               	movlb	1	; select bank1
  6136  05F0  00A9               	movwf	(_inPipes^(0+128)+2)	;volatile
  6137                           
  6138                           ;usb_device.c: 2212: switch(SetupPkt.bDescriptorType)
  6139  05F1  2E53               	goto	i1l3061
  6140  05F2                     i1l3039:	
  6141                           ;usb_device.c: 2213: {
  6142                           ;usb_device.c: 2214: case 0x01:
  6143                           
  6144                           
  6145                           ;usb_device.c: 2218: inPipes[0].pSrc.bRom = (const BYTE*)&device_dsc;
  6146  05F2  30AB               	movlw	low (_device_dsc| (0+32768))
  6147  05F3  0021               	movlb	1	; select bank1
  6148  05F4  00A7               	movwf	_inPipes^(0+128)	;volatile
  6149  05F5  3090               	movlw	high (_device_dsc| (0+32768))
  6150  05F6  00A8               	movwf	(_inPipes^(0+128)+1)	;volatile
  6151                           
  6152                           ;usb_device.c: 2220: inPipes[0].wCount.Val = sizeof(device_dsc);
  6153  05F7  3000               	movlw	0
  6154  05F8  00AB               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  6155  05F9  3012               	movlw	18
  6156  05FA  00AA               	movwf	(_inPipes^(0+128)+3)	;volatile
  6157                           
  6158                           ;usb_device.c: 2221: break;
  6159  05FB  0008               	return
  6160  05FC                     i1l3043:	
  6161                           ;usb_device.c: 2222: case 0x02:
  6162                           
  6163                           
  6164                           ;usb_device.c: 2226: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  6165  05FC  0020               	movlb	0	; select bank0
  6166  05FD  0852               	movf	82,w	;volatile
  6167  05FE  00F0               	movwf	??_USBStdGetDscHandler
  6168  05FF  01F1               	clrf	??_USBStdGetDscHandler+1
  6169  0600  35F0               	lslf	??_USBStdGetDscHandler,f
  6170  0601  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  6171  0602  30C7               	movlw	low (_USB_CD_Ptr| (0+32768))
  6172  0603  0770               	addwf	??_USBStdGetDscHandler,w
  6173  0604  0084               	movwf	4
  6174  0605  3090               	movlw	high (_USB_CD_Ptr| (0+32768))
  6175  0606  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  6176  0607  0085               	movwf	5
  6177  0608  3F00               	moviw [0]fsr0
  6178  0609  0021               	movlb	1	; select bank1
  6179  060A  00A7               	movwf	_inPipes^(0+128)	;volatile
  6180  060B  3F01               	moviw [1]fsr0
  6181  060C  00A8               	movwf	(_inPipes+1)^(0+128)	;volatile
  6182                           
  6183                           ;usb_device.c: 2232: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  6184  060D  0828               	movf	(_inPipes+1)^(0+128),w	;volatile
  6185  060E  00F1               	movwf	??_USBStdGetDscHandler+1
  6186  060F  0827               	movf	_inPipes^(0+128),w	;volatile
  6187  0610  00F0               	movwf	??_USBStdGetDscHandler
  6188  0611  3002               	movlw	2
  6189  0612  0770               	addwf	??_USBStdGetDscHandler,w
  6190  0613  0084               	movwf	4
  6191  0614  0871               	movf	??_USBStdGetDscHandler+1,w
  6192  0615  1803               	skipnc
  6193  0616  0A71               	incf	??_USBStdGetDscHandler+1,w
  6194  0617  0085               	movwf	5
  6195  0618  0800               	movf	0,w	;code access
  6196  0619  00F2               	movwf	??_USBStdGetDscHandler+2
  6197  061A  0872               	movf	??_USBStdGetDscHandler+2,w
  6198  061B  00AA               	movwf	(_inPipes^(0+128)+3)	;volatile
  6199                           
  6200                           ;usb_device.c: 2233: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  6201  061C  0828               	movf	(_inPipes+1)^(0+128),w	;volatile
  6202  061D  00F1               	movwf	??_USBStdGetDscHandler+1
  6203  061E  0827               	movf	_inPipes^(0+128),w	;volatile
  6204  061F  00F0               	movwf	??_USBStdGetDscHandler
  6205  0620  3003               	movlw	3
  6206  0621  0770               	addwf	??_USBStdGetDscHandler,w
  6207  0622  0084               	movwf	4
  6208  0623  0871               	movf	??_USBStdGetDscHandler+1,w
  6209  0624  1803               	skipnc
  6210  0625  0A71               	incf	??_USBStdGetDscHandler+1,w
  6211  0626  0085               	movwf	5
  6212  0627  0800               	movf	0,w	;code access
  6213  0628  00F2               	movwf	??_USBStdGetDscHandler+2
  6214  0629  0872               	movf	??_USBStdGetDscHandler+2,w
  6215  062A  00AB               	movwf	(_inPipes^(0+128)+4)	;volatile
  6216                           
  6217                           ;usb_device.c: 2234: break;
  6218  062B  0008               	return
  6219  062C                     i1l3049:	
  6220                           ;usb_device.c: 2235: case 0x03:
  6221                           
  6222                           
  6223                           ;usb_device.c: 2239: if(SetupPkt.bDscIndex<3)
  6224  062C  3003               	movlw	3
  6225  062D  0020               	movlb	0	; select bank0
  6226  062E  0252               	subwf	82,w	;volatile
  6227  062F  1803               	skipnc
  6228  0630  2E4D               	goto	i1l3055
  6229                           
  6230                           ;usb_device.c: 2240: {
  6231                           ;usb_device.c: 2242: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  6232  0631  0852               	movf	82,w	;volatile
  6233  0632  00F0               	movwf	??_USBStdGetDscHandler
  6234  0633  01F1               	clrf	??_USBStdGetDscHandler+1
  6235  0634  35F0               	lslf	??_USBStdGetDscHandler,f
  6236  0635  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  6237  0636  30BD               	movlw	low (_USB_SD_Ptr| (0+32768))
  6238  0637  0770               	addwf	??_USBStdGetDscHandler,w
  6239  0638  0084               	movwf	4
  6240  0639  3090               	movlw	high (_USB_SD_Ptr| (0+32768))
  6241  063A  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  6242  063B  0085               	movwf	5
  6243  063C  3F00               	moviw [0]fsr0
  6244  063D  0021               	movlb	1	; select bank1
  6245  063E  00A7               	movwf	_inPipes^(0+128)	;volatile
  6246  063F  3F01               	moviw [1]fsr0
  6247  0640  00A8               	movwf	(_inPipes+1)^(0+128)	;volatile
  6248                           
  6249                           ;usb_device.c: 2244: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  6250  0641  0827               	movf	_inPipes^(0+128),w	;volatile
  6251  0642  0084               	movwf	4
  6252  0643  0828               	movf	(_inPipes+1)^(0+128),w	;volatile
  6253  0644  0085               	movwf	5
  6254  0645  0800               	movf	0,w	;code access
  6255  0646  00F0               	movwf	??_USBStdGetDscHandler
  6256  0647  01F1               	clrf	??_USBStdGetDscHandler+1
  6257  0648  0870               	movf	??_USBStdGetDscHandler,w
  6258  0649  00AA               	movwf	(_inPipes^(0+128)+3)	;volatile
  6259  064A  0871               	movf	??_USBStdGetDscHandler+1,w
  6260  064B  00AB               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  6261                           
  6262                           ;usb_device.c: 2245: }
  6263  064C  0008               	return
  6264  064D                     i1l3055:	
  6265                           
  6266                           ;usb_device.c: 2255: else
  6267                           ;usb_device.c: 2256: {
  6268                           ;usb_device.c: 2257: inPipes[0].info.Val = 0;
  6269  064D  0021               	movlb	1	; select bank1
  6270  064E  01A9               	clrf	(_inPipes^(0+128)+2)	;volatile
  6271                           
  6272                           ;usb_device.c: 2258: }
  6273                           ;usb_device.c: 2259: break;
  6274  064F  0008               	return
  6275  0650                     i1l3057:	
  6276                           ;usb_device.c: 2260: default:
  6277                           
  6278                           
  6279                           ;usb_device.c: 2261: inPipes[0].info.Val = 0;
  6280  0650  0021               	movlb	1	; select bank1
  6281  0651  01A9               	clrf	(_inPipes^(0+128)+2)	;volatile
  6282                           
  6283                           ;usb_device.c: 2263: }
  6284                           
  6285                           ;usb_device.c: 2262: break;
  6286  0652  0008               	return
  6287  0653                     i1l3061:	
  6288  0653  0020               	movlb	0	; select bank0
  6289  0654  0853               	movf	83,w	;volatile
  6290                           
  6291                           ; Switch size 1, requested type "space"
  6292                           ; Number of cases is 3, Range of values is 1 to 3
  6293                           ; switch strategies available:
  6294                           ; Name         Instructions Cycles
  6295                           ; simple_byte           10     6 (average)
  6296                           ; direct_byte           15     9 (fixed)
  6297                           ; jumptable            263     9 (fixed)
  6298                           ;	Chosen strategy is simple_byte
  6299  0655  3A01               	xorlw	1	; case 1
  6300  0656  1903               	skipnz
  6301  0657  2DF2               	goto	i1l3039
  6302  0658  3A03               	xorlw	3	; case 2
  6303  0659  1903               	skipnz
  6304  065A  2DFC               	goto	i1l3043
  6305  065B  3A01               	xorlw	1	; case 3
  6306  065C  1903               	skipnz
  6307  065D  2E2C               	goto	i1l3049
  6308  065E  2E50               	goto	i1l3057
  6309  065F  0008               	return
  6310  0660                     __end_of_USBStdGetDscHandler:	
  6311                           
  6312                           	psect	text29
  6313  0037                     __ptext29:	
  6314 ;; *************** function _USBStdFeatureReqHandler *****************
  6315 ;; Defined at:
  6316 ;;		line 2906 in file "../Microchip/USB/usb_device.c"
  6317 ;; Parameters:    Size  Location     Type
  6318 ;;		None
  6319 ;; Auto vars:     Size  Location     Type
  6320 ;;  pUEP            2   10[BANK0 ] PTR unsigned char 
  6321 ;;		 -> UEP0(1), 
  6322 ;;  p               1   13[BANK0 ] PTR struct __BDT
  6323 ;;		 -> NULL(0), BDT(48), 
  6324 ;;  current_ep_d    1   12[BANK0 ] struct .
  6325 ;; Return value:  Size  Location     Type
  6326 ;;                  1    wreg      void 
  6327 ;; Registers used:
  6328 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6335 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6336 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6337 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6338 ;;Total ram usage:        6 bytes
  6339 ;; Hardware stack levels used:    1
  6340 ;; Hardware stack levels required when called:    5
  6341 ;; This function calls:
  6342 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6343 ;; This function is called by:
  6344 ;;		_USBCheckStdRequest
  6345 ;; This function uses a non-reentrant model
  6346 ;;
  6347                           
  6348                           
  6349                           ;psect for function _USBStdFeatureReqHandler
  6350  0037                     _USBStdFeatureReqHandler:	
  6351                           
  6352                           ;usb_device.c: 2908: BDT_ENTRY *p;
  6353                           ;usb_device.c: 2909: EP_STATUS current_ep_data;
  6354                           ;usb_device.c: 2913: unsigned char* pUEP;
  6355                           ;usb_device.c: 2951: if((SetupPkt.bFeature == 1)&&
  6356                           ;usb_device.c: 2952: (SetupPkt.Recipient == (0x00)))
  6357                           
  6358                           ;incstack = 0
  6359                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6360  0037  0020               	movlb	0	; select bank0
  6361  0038  0352               	decf	82,w	;volatile
  6362  0039  1D03               	btfss	3,2
  6363  003A  284F               	goto	i1l3101
  6364  003B  0850               	movf	80,w	;volatile
  6365  003C  391F               	andlw	31
  6366  003D  3A00               	xorlw	0
  6367  003E  1D03               	skipz
  6368  003F  284F               	goto	i1l3101
  6369                           
  6370                           ;usb_device.c: 2953: {
  6371                           ;usb_device.c: 2954: inPipes[0].info.bits.busy = 1;
  6372  0040  0021               	movlb	1	; select bank1
  6373  0041  17A9               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6374                           
  6375                           ;usb_device.c: 2955: if(SetupPkt.bRequest == 3)
  6376  0042  3003               	movlw	3
  6377  0043  0020               	movlb	0	; select bank0
  6378  0044  0651               	xorwf	81,w	;volatile
  6379  0045  1D03               	btfss	3,2
  6380  0046  284D               	goto	i1l3099
  6381                           
  6382                           ;usb_device.c: 2956: RemoteWakeup = TRUE;
  6383  0047  3001               	movlw	1
  6384  0048  00E8               	movwf	??_USBStdFeatureReqHandler
  6385  0049  0868               	movf	??_USBStdFeatureReqHandler,w
  6386  004A  0021               	movlb	1	; select bank1
  6387  004B  00CD               	movwf	_RemoteWakeup^(0+128)	;volatile
  6388  004C  284F               	goto	i1l3101
  6389  004D                     i1l3099:	
  6390                           
  6391                           ;usb_device.c: 2957: else
  6392                           ;usb_device.c: 2958: RemoteWakeup = FALSE;
  6393  004D  0021               	movlb	1	; select bank1
  6394  004E  01CD               	clrf	_RemoteWakeup^(0+128)	;volatile
  6395  004F                     i1l3101:	
  6396                           
  6397                           ;usb_device.c: 2959: }
  6398                           ;usb_device.c: 2962: if((SetupPkt.bFeature == 0)&&
  6399                           ;usb_device.c: 2963: (SetupPkt.Recipient == (0x02))&&
  6400                           ;usb_device.c: 2964: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  6401                           ;usb_device.c: 2965: (USBDeviceState == CONFIGURED_STATE))
  6402  004F  0020               	movlb	0	; select bank0
  6403  0050  0852               	movf	82,w	;volatile
  6404  0051  1D03               	btfss	3,2
  6405  0052  0008               	return
  6406  0053  0850               	movf	80,w	;volatile
  6407  0054  391F               	andlw	31
  6408  0055  3A02               	xorlw	2
  6409  0056  1D03               	skipz
  6410  0057  0008               	return
  6411  0058  0854               	movf	84,w	;volatile
  6412  0059  390F               	andlw	15
  6413  005A  3A00               	xorlw	0
  6414  005B  1903               	skipnz
  6415  005C  0008               	return
  6416  005D  0854               	movf	84,w	;volatile
  6417  005E  390F               	andlw	15
  6418  005F  00E8               	movwf	??_USBStdFeatureReqHandler
  6419  0060  3003               	movlw	3
  6420  0061  0268               	subwf	??_USBStdFeatureReqHandler,w
  6421  0062  1803               	skipnc
  6422  0063  0008               	return
  6423  0064  3020               	movlw	32
  6424  0065  0021               	movlb	1	; select bank1
  6425  0066  0653               	xorwf	_USBDeviceState^(0+128),w	;volatile
  6426  0067  1D03               	btfss	3,2
  6427  0068  0008               	return
  6428                           
  6429                           ;usb_device.c: 2966: {
  6430                           ;usb_device.c: 2969: inPipes[0].info.bits.busy = 1;
  6431  0069  17A9               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6432                           
  6433                           ;usb_device.c: 2972: if(SetupPkt.EPDir == 0)
  6434  006A  0020               	movlb	0	; select bank0
  6435  006B  1BD4               	btfsc	84,7	;volatile
  6436  006C  287B               	goto	i1l3115
  6437                           
  6438                           ;usb_device.c: 2973: {
  6439                           ;usb_device.c: 2974: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6440  006D  0854               	movf	84,w	;volatile
  6441  006E  390F               	andlw	15
  6442  006F  3E35               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6443  0070  0086               	movwf	6
  6444  0071  3001               	movlw	1	; select bank2/3
  6445  0072  0087               	movwf	7
  6446  0073  0801               	movf	1,w
  6447  0074  00E8               	movwf	??_USBStdFeatureReqHandler
  6448  0075  0868               	movf	??_USBStdFeatureReqHandler,w
  6449  0076  00ED               	movwf	USBStdFeatureReqHandler@p
  6450                           
  6451                           ;usb_device.c: 2975: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  6452  0077  0854               	movf	84,w	;volatile
  6453  0078  390F               	andlw	15
  6454  0079  3EAC               	addlw	(low (_ep_data_out| 0))& (0+255)
  6455  007A  2887               	goto	L7
  6456  007B                     i1l3115:	
  6457                           ;usb_device.c: 2976: }
  6458                           
  6459                           
  6460                           ;usb_device.c: 2977: else
  6461                           ;usb_device.c: 2978: {
  6462                           ;usb_device.c: 2979: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6463  007B  0854               	movf	84,w	;volatile
  6464  007C  390F               	andlw	15
  6465  007D  3EB2               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  6466  007E  0086               	movwf	6
  6467  007F  0187               	clrf	7
  6468  0080  0801               	movf	1,w
  6469  0081  00E8               	movwf	??_USBStdFeatureReqHandler
  6470  0082  0868               	movf	??_USBStdFeatureReqHandler,w
  6471  0083  00ED               	movwf	USBStdFeatureReqHandler@p
  6472                           
  6473                           ;usb_device.c: 2980: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  6474  0084  0854               	movf	84,w	;volatile
  6475  0085  390F               	andlw	15
  6476  0086  3EAF               	addlw	(low (_ep_data_in| 0))& (0+255)
  6477  0087                     L7:	
  6478  0087  0086               	movwf	6
  6479  0088  0187               	clrf	7
  6480  0089  0801               	movf	1,w
  6481  008A  00E8               	movwf	??_USBStdFeatureReqHandler
  6482  008B  0868               	movf	??_USBStdFeatureReqHandler,w
  6483  008C  00EC               	movwf	USBStdFeatureReqHandler@current_ep_data
  6484                           
  6485                           ;usb_device.c: 2981: }
  6486                           ;usb_device.c: 2987: if(current_ep_data.bits.ping_pong_state == 0)
  6487  008D  186C               	btfsc	USBStdFeatureReqHandler@current_ep_data,0
  6488  008E  2894               	goto	i1l361
  6489                           
  6490                           ;usb_device.c: 2988: {
  6491                           ;usb_device.c: 2989: {((BYTE_VAL*)&p)->Val &= ~0x0004;};
  6492  008F  30FB               	movlw	251
  6493  0090  00E8               	movwf	??_USBStdFeatureReqHandler
  6494  0091  0868               	movf	??_USBStdFeatureReqHandler,w
  6495  0092  05ED               	andwf	USBStdFeatureReqHandler@p,f
  6496                           
  6497                           ;usb_device.c: 2990: }
  6498  0093  2895               	goto	i1l362
  6499  0094                     i1l361:	
  6500                           
  6501                           ;usb_device.c: 2991: else
  6502                           ;usb_device.c: 2992: {
  6503                           ;usb_device.c: 2993: {((BYTE_VAL*)&p)->Val |= 0x0004;};
  6504  0094  156D               	bsf	USBStdFeatureReqHandler@p,2
  6505  0095                     i1l362:	
  6506                           
  6507                           ;usb_device.c: 2994: }
  6508                           ;usb_device.c: 2999: if(SetupPkt.EPDir == 0)
  6509  0095  1BD4               	btfsc	84,7	;volatile
  6510  0096  28A0               	goto	i1l3123
  6511                           
  6512                           ;usb_device.c: 3000: {
  6513                           ;usb_device.c: 3001: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6514  0097  086D               	movf	USBStdFeatureReqHandler@p,w
  6515  0098  00E8               	movwf	??_USBStdFeatureReqHandler
  6516  0099  0854               	movf	84,w	;volatile
  6517  009A  390F               	andlw	15
  6518  009B  3E35               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6519  009C  0086               	movwf	6
  6520  009D  3001               	movlw	1	; select bank2/3
  6521  009E  0087               	movwf	7
  6522  009F  28A7               	goto	L8
  6523  00A0                     i1l3123:	
  6524                           ;usb_device.c: 3002: }
  6525                           
  6526                           
  6527                           ;usb_device.c: 3003: else
  6528                           ;usb_device.c: 3004: {
  6529                           ;usb_device.c: 3005: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6530  00A0  086D               	movf	USBStdFeatureReqHandler@p,w
  6531  00A1  00E8               	movwf	??_USBStdFeatureReqHandler
  6532  00A2  0854               	movf	84,w	;volatile
  6533  00A3  390F               	andlw	15
  6534  00A4  3EB2               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  6535  00A5  0086               	movwf	6
  6536  00A6  0187               	clrf	7
  6537  00A7                     L8:	
  6538  00A7  0868               	movf	??_USBStdFeatureReqHandler,w
  6539  00A8  0081               	movwf	1
  6540                           
  6541                           ;usb_device.c: 3006: }
  6542                           ;usb_device.c: 3009: if(SetupPkt.bRequest == 3)
  6543  00A9  3003               	movlw	3
  6544  00AA  0651               	xorwf	81,w	;volatile
  6545  00AB  1D03               	btfss	3,2
  6546  00AC  28C6               	goto	i1l3135
  6547                           
  6548                           ;usb_device.c: 3010: {
  6549                           ;usb_device.c: 3011: if(p->STAT.UOWN == 1)
  6550  00AD  086D               	movf	USBStdFeatureReqHandler@p,w
  6551  00AE  0086               	movwf	6
  6552  00AF  0187               	clrf	7
  6553  00B0  1F81               	btfss	1,7
  6554  00B1  28BE               	goto	i1l366
  6555                           
  6556                           ;usb_device.c: 3012: {
  6557                           ;usb_device.c: 3015: if(SetupPkt.EPDir == 0)
  6558  00B2  1BD4               	btfsc	84,7	;volatile
  6559  00B3  28B8               	goto	i1l3133
  6560                           
  6561                           ;usb_device.c: 3016: {
  6562                           ;usb_device.c: 3017: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  6563  00B4  0854               	movf	84,w	;volatile
  6564  00B5  390F               	andlw	15
  6565  00B6  3EAC               	addlw	(low (_ep_data_out| 0))& (0+255)
  6566  00B7  28BB               	goto	L9
  6567  00B8                     i1l3133:	
  6568                           ;usb_device.c: 3018: }
  6569                           
  6570                           
  6571                           ;usb_device.c: 3019: else
  6572                           ;usb_device.c: 3020: {
  6573                           ;usb_device.c: 3021: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  6574  00B8  0854               	movf	84,w	;volatile
  6575  00B9  390F               	andlw	15
  6576  00BA  3EAF               	addlw	(low (_ep_data_in| 0))& (0+255)
  6577  00BB                     L9:	
  6578  00BB  0086               	movwf	6
  6579  00BC  0187               	clrf	7
  6580  00BD  1481               	bsf	1,1
  6581  00BE                     i1l366:	
  6582                           
  6583                           ;usb_device.c: 3022: }
  6584                           ;usb_device.c: 3023: }
  6585                           ;usb_device.c: 3026: p->STAT.Val |= 0x80|0x04;
  6586  00BE  3084               	movlw	132
  6587  00BF  00E8               	movwf	??_USBStdFeatureReqHandler
  6588  00C0  086D               	movf	USBStdFeatureReqHandler@p,w
  6589  00C1  0086               	movwf	6
  6590  00C2  0187               	clrf	7
  6591  00C3  0868               	movf	??_USBStdFeatureReqHandler,w
  6592  00C4  0481               	iorwf	1,f
  6593                           
  6594                           ;usb_device.c: 3027: }
  6595  00C5  0008               	return
  6596  00C6                     i1l3135:	
  6597                           
  6598                           ;usb_device.c: 3028: else
  6599                           ;usb_device.c: 3029: {
  6600                           ;usb_device.c: 3033: ((BYTE_VAL*)&p)->Val ^= 0x0004;;
  6601  00C6  3004               	movlw	4
  6602  00C7  00E8               	movwf	??_USBStdFeatureReqHandler
  6603  00C8  0868               	movf	??_USBStdFeatureReqHandler,w
  6604  00C9  06ED               	xorwf	USBStdFeatureReqHandler@p,f
  6605                           
  6606                           ;usb_device.c: 3035: if(p->STAT.UOWN == 1)
  6607  00CA  086D               	movf	USBStdFeatureReqHandler@p,w
  6608  00CB  0086               	movwf	6
  6609  00CC  0187               	clrf	7
  6610  00CD  1F81               	btfss	1,7
  6611  00CE  28EA               	goto	i1l3145
  6612                           
  6613                           ;usb_device.c: 3036: {
  6614                           ;usb_device.c: 3039: p->STAT.Val &= (~0x80);
  6615  00CF  307F               	movlw	127
  6616  00D0  00E8               	movwf	??_USBStdFeatureReqHandler
  6617  00D1  086D               	movf	USBStdFeatureReqHandler@p,w
  6618  00D2  0086               	movwf	6
  6619  00D3  0187               	clrf	7
  6620  00D4  0868               	movf	??_USBStdFeatureReqHandler,w
  6621  00D5  0581               	andwf	1,f
  6622                           
  6623                           ;usb_device.c: 3040: p->STAT.Val |= 0x40;
  6624  00D6  086D               	movf	USBStdFeatureReqHandler@p,w
  6625  00D7  0086               	movwf	6
  6626  00D8  0187               	clrf	7
  6627  00D9  1701               	bsf	1,6
  6628                           
  6629                           ;usb_device.c: 3041: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  6630  00DA  3005               	movlw	5
  6631  00DB  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6632  00DC  3000               	movlw	0
  6633  00DD  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6634  00DE  086D               	movf	USBStdFeatureReqHandler@p,w
  6635  00DF  00E8               	movwf	??_USBStdFeatureReqHandler
  6636  00E0  0868               	movf	??_USBStdFeatureReqHandler,w
  6637  00E1  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6638  00E2  3001               	movlw	1
  6639  00E3  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6640  00E4  3000               	movlw	0
  6641  00E5  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6642  00E6  3187  27BB  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6643                           
  6644                           ;usb_device.c: 3042: }
  6645  00E9  28EF               	goto	i1l3147
  6646  00EA                     i1l3145:	
  6647                           
  6648                           ;usb_device.c: 3043: else
  6649                           ;usb_device.c: 3044: {
  6650                           ;usb_device.c: 3046: p->STAT.Val |= 0x40;
  6651  00EA  0020               	movlb	0	; select bank0
  6652  00EB  086D               	movf	USBStdFeatureReqHandler@p,w
  6653  00EC  0086               	movwf	6
  6654  00ED  0187               	clrf	7
  6655  00EE  1701               	bsf	1,6
  6656  00EF                     i1l3147:	
  6657                           
  6658                           ;usb_device.c: 3047: }
  6659                           ;usb_device.c: 3051: ((BYTE_VAL*)&p)->Val ^= 0x0004;;
  6660  00EF  3004               	movlw	4
  6661  00F0  0020               	movlb	0	; select bank0
  6662  00F1  00E8               	movwf	??_USBStdFeatureReqHandler
  6663  00F2  0868               	movf	??_USBStdFeatureReqHandler,w
  6664  00F3  06ED               	xorwf	USBStdFeatureReqHandler@p,f
  6665                           
  6666                           ;usb_device.c: 3057: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  6667  00F4  18EC               	btfsc	USBStdFeatureReqHandler@current_ep_data,1
  6668  00F5  28FB               	goto	i1l374
  6669  00F6  086D               	movf	USBStdFeatureReqHandler@p,w
  6670  00F7  0086               	movwf	6
  6671  00F8  0187               	clrf	7
  6672  00F9  1F81               	btfss	1,7
  6673  00FA  291E               	goto	i1l3159
  6674  00FB                     i1l374:	
  6675                           
  6676                           ;usb_device.c: 3058: {
  6677                           ;usb_device.c: 3059: if(SetupPkt.EPDir == 0)
  6678  00FB  1BD4               	btfsc	84,7	;volatile
  6679  00FC  2901               	goto	i1l3155
  6680                           
  6681                           ;usb_device.c: 3060: {
  6682                           ;usb_device.c: 3061: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  6683  00FD  0854               	movf	84,w	;volatile
  6684  00FE  390F               	andlw	15
  6685  00FF  3EAC               	addlw	(low (_ep_data_out| 0))& (0+255)
  6686  0100  2904               	goto	L10
  6687  0101                     i1l3155:	
  6688                           ;usb_device.c: 3062: }
  6689                           
  6690                           
  6691                           ;usb_device.c: 3063: else
  6692                           ;usb_device.c: 3064: {
  6693                           ;usb_device.c: 3065: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  6694  0101  0854               	movf	84,w	;volatile
  6695  0102  390F               	andlw	15
  6696  0103  3EAF               	addlw	(low (_ep_data_in| 0))& (0+255)
  6697  0104                     L10:	
  6698  0104  0086               	movwf	6
  6699  0105  0187               	clrf	7
  6700  0106  1081               	bcf	1,1
  6701                           
  6702                           ;usb_device.c: 3066: }
  6703                           ;usb_device.c: 3068: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  6704  0107  303B               	movlw	59
  6705  0108  00E8               	movwf	??_USBStdFeatureReqHandler
  6706  0109  086D               	movf	USBStdFeatureReqHandler@p,w
  6707  010A  0086               	movwf	6
  6708  010B  0187               	clrf	7
  6709  010C  0868               	movf	??_USBStdFeatureReqHandler,w
  6710  010D  0581               	andwf	1,f
  6711                           
  6712                           ;usb_device.c: 3071: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  6713  010E  3005               	movlw	5
  6714  010F  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6715  0110  3000               	movlw	0
  6716  0111  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6717  0112  086D               	movf	USBStdFeatureReqHandler@p,w
  6718  0113  00E8               	movwf	??_USBStdFeatureReqHandler
  6719  0114  0868               	movf	??_USBStdFeatureReqHandler,w
  6720  0115  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6721  0116  3001               	movlw	1
  6722  0117  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6723  0118  3000               	movlw	0
  6724  0119  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6725  011A  3187  27BB  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6726                           
  6727                           ;usb_device.c: 3072: }
  6728  011D  2926               	goto	i1l3161
  6729  011E                     i1l3159:	
  6730                           
  6731                           ;usb_device.c: 3073: else
  6732                           ;usb_device.c: 3074: {
  6733                           ;usb_device.c: 3076: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  6734  011E  303B               	movlw	59
  6735  011F  0020               	movlb	0	; select bank0
  6736  0120  00E8               	movwf	??_USBStdFeatureReqHandler
  6737  0121  086D               	movf	USBStdFeatureReqHandler@p,w
  6738  0122  0086               	movwf	6
  6739  0123  0187               	clrf	7
  6740  0124  0868               	movf	??_USBStdFeatureReqHandler,w
  6741  0125  0581               	andwf	1,f
  6742  0126                     i1l3161:	
  6743                           
  6744                           ;usb_device.c: 3077: }
  6745                           ;usb_device.c: 3124: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  6746  0126  0020               	movlb	0	; select bank0
  6747  0127  0854               	movf	84,w	;volatile
  6748  0128  390F               	andlw	15
  6749  0129  3E98               	addlw	152
  6750  012A  00E8               	movwf	??_USBStdFeatureReqHandler
  6751  012B  01E9               	clrf	??_USBStdFeatureReqHandler+1
  6752  012C  300E               	movlw	14
  6753  012D  3DE9               	addwfc	??_USBStdFeatureReqHandler+1,f
  6754  012E  0868               	movf	??_USBStdFeatureReqHandler,w
  6755  012F  00EA               	movwf	USBStdFeatureReqHandler@pUEP
  6756  0130  0869               	movf	??_USBStdFeatureReqHandler+1,w
  6757  0131  00EB               	movwf	USBStdFeatureReqHandler@pUEP+1
  6758                           
  6759                           ;usb_device.c: 3128: *pUEP &= ~0x0001;
  6760  0132  30FE               	movlw	254
  6761  0133  00E8               	movwf	??_USBStdFeatureReqHandler
  6762  0134  086A               	movf	USBStdFeatureReqHandler@pUEP,w
  6763  0135  0086               	movwf	6
  6764  0136  086B               	movf	USBStdFeatureReqHandler@pUEP+1,w
  6765  0137  0087               	movwf	7
  6766  0138  0868               	movf	??_USBStdFeatureReqHandler,w
  6767  0139  0581               	andwf	1,f
  6768  013A  0008               	return
  6769  013B                     __end_of_USBStdFeatureReqHandler:	
  6770                           
  6771                           	psect	text30
  6772  07BB                     __ptext30:	
  6773 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  6774 ;; Defined at:
  6775 ;;		line 315 in file "../main.c"
  6776 ;; Parameters:    Size  Location     Type
  6777 ;;  event           2    3[BANK0 ] int 
  6778 ;;  pdata           1    5[BANK0 ] PTR void 
  6779 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
  6780 ;;  size            2    6[BANK0 ] unsigned short 
  6781 ;; Auto vars:     Size  Location     Type
  6782 ;;		None
  6783 ;; Return value:  Size  Location     Type
  6784 ;;                  1    wreg      enum E3
  6785 ;; Registers used:
  6786 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6787 ;; Tracked objects:
  6788 ;;		On entry : 0/0
  6789 ;;		On exit  : 0/0
  6790 ;;		Unchanged: 0/0
  6791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6792 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6795 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6796 ;;Total ram usage:        5 bytes
  6797 ;; Hardware stack levels used:    1
  6798 ;; Hardware stack levels required when called:    4
  6799 ;; This function calls:
  6800 ;;		_USBCBCheckOtherReq
  6801 ;;		_USBCBErrorHandler
  6802 ;;		_USBCBInitEP
  6803 ;;		_USBCBStdSetDscHandler
  6804 ;;		_USBCBSuspend
  6805 ;;		_USBCBWakeFromSuspend
  6806 ;;		_USBCB_SOF_Handler
  6807 ;; This function is called by:
  6808 ;;		_USBDeviceTasks
  6809 ;;		_USBStdSetCfgHandler
  6810 ;;		_USBSuspend
  6811 ;;		_USBWakeFromSuspend
  6812 ;;		_USBCtrlTrfSetupHandler
  6813 ;;		_USBCheckStdRequest
  6814 ;;		_USBStdFeatureReqHandler
  6815 ;; This function uses a non-reentrant model
  6816 ;;
  6817                           
  6818                           
  6819                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  6820  07BB                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  6821                           
  6822                           ;main.c: 317: switch(event)
  6823                           
  6824                           ;incstack = 0
  6825                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  6826  07BB  2FD1               	goto	i1l2847
  6827  07BC                     i1l2831:	
  6828                           ;main.c: 322: case EVENT_SOF:
  6829                           
  6830                           ;main.c: 321: break;
  6831                           
  6832                           ;main.c: 318: {
  6833                           ;main.c: 319: case EVENT_TRANSFER:
  6834                           
  6835                           
  6836                           ;main.c: 323: USBCB_SOF_Handler();
  6837  07BC  3180  2003         	fcall	_USBCB_SOF_Handler
  6838                           
  6839                           ;main.c: 324: break;
  6840  07BE  0008               	return
  6841  07BF                     i1l2833:	
  6842                           ;main.c: 325: case EVENT_SUSPEND:
  6843                           
  6844                           
  6845                           ;main.c: 326: USBCBSuspend();
  6846  07BF  3189  21B5         	fcall	_USBCBSuspend
  6847                           
  6848                           ;main.c: 327: break;
  6849  07C1  0008               	return
  6850  07C2                     i1l2835:	
  6851                           ;main.c: 328: case EVENT_RESUME:
  6852                           
  6853                           
  6854                           ;main.c: 329: USBCBWakeFromSuspend();
  6855  07C2  3180  2002         	fcall	_USBCBWakeFromSuspend
  6856                           
  6857                           ;main.c: 330: break;
  6858  07C4  0008               	return
  6859  07C5                     i1l2837:	
  6860                           ;main.c: 331: case EVENT_CONFIGURED:
  6861                           
  6862                           
  6863                           ;main.c: 332: USBCBInitEP();
  6864  07C5  3189  21B9         	fcall	_USBCBInitEP
  6865                           
  6866                           ;main.c: 333: break;
  6867  07C7  0008               	return
  6868  07C8                     i1l2839:	
  6869                           ;main.c: 334: case EVENT_SET_DESCRIPTOR:
  6870                           
  6871                           
  6872                           ;main.c: 335: USBCBStdSetDscHandler();
  6873  07C8  3189  21B4         	fcall	_USBCBStdSetDscHandler
  6874                           
  6875                           ;main.c: 336: break;
  6876  07CA  0008               	return
  6877  07CB                     i1l2841:	
  6878                           ;main.c: 337: case EVENT_EP0_REQUEST:
  6879                           
  6880                           
  6881                           ;main.c: 338: USBCBCheckOtherReq();
  6882  07CB  3189  21B6         	fcall	_USBCBCheckOtherReq
  6883                           
  6884                           ;main.c: 339: break;
  6885  07CD  0008               	return
  6886  07CE                     i1l2843:	
  6887                           ;main.c: 340: case EVENT_BUS_ERROR:
  6888                           
  6889                           
  6890                           ;main.c: 341: USBCBErrorHandler();
  6891  07CE  3189  21B3         	fcall	_USBCBErrorHandler
  6892                           
  6893                           ;main.c: 347: }
  6894                           
  6895                           ;main.c: 346: break;
  6896                           
  6897                           ;main.c: 345: default:
  6898                           
  6899                           ;main.c: 344: break;
  6900                           
  6901                           ;main.c: 343: case EVENT_TRANSFER_TERMINATED:
  6902                           
  6903                           ;main.c: 342: break;
  6904  07D0  0008               	return
  6905  07D1                     i1l2847:	
  6906                           
  6907                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  6908                           ; Switch size 1, requested type "space"
  6909                           ; Number of cases is 2, Range of values is 0 to 127
  6910                           ; switch strategies available:
  6911                           ; Name         Instructions Cycles
  6912                           ; simple_byte            7     4 (average)
  6913                           ; direct_byte          262     6 (fixed)
  6914                           ; jumptable            260     6 (fixed)
  6915                           ;	Chosen strategy is simple_byte
  6916  07D1  0020               	movlb	0	; select bank0
  6917  07D2  0864               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
  6918  07D3  3A00               	xorlw	0	; case 0
  6919  07D4  1903               	skipnz
  6920  07D5  2FDA               	goto	i1l4503
  6921  07D6  3A7F               	xorlw	127	; case 127
  6922  07D7  1903               	skipnz
  6923  07D8  2FF4               	goto	i1l4505
  6924  07D9  2FF9               	goto	i1l739
  6925  07DA                     i1l4503:	
  6926                           
  6927                           ; Switch size 1, requested type "space"
  6928                           ; Number of cases is 8, Range of values is 1 to 117
  6929                           ; switch strategies available:
  6930                           ; Name         Instructions Cycles
  6931                           ; simple_byte           25    13 (average)
  6932                           ; direct_byte          243     9 (fixed)
  6933                           ; jumptable            263     9 (fixed)
  6934                           ;	Chosen strategy is simple_byte
  6935  07DA  0863               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  6936  07DB  3A01               	xorlw	1	; case 1
  6937  07DC  1903               	skipnz
  6938  07DD  2FC5               	goto	i1l2837
  6939  07DE  3A03               	xorlw	3	; case 2
  6940  07DF  1903               	skipnz
  6941  07E0  2FC8               	goto	i1l2839
  6942  07E1  3A01               	xorlw	1	; case 3
  6943  07E2  1903               	skipnz
  6944  07E3  2FCB               	goto	i1l2841
  6945  07E4  3A06               	xorlw	6	; case 5
  6946  07E5  1903               	skipnz
  6947  07E6  2FF9               	goto	i1l739
  6948  07E7  3A77               	xorlw	119	; case 114
  6949  07E8  1903               	skipnz
  6950  07E9  2FF9               	goto	i1l739
  6951  07EA  3A01               	xorlw	1	; case 115
  6952  07EB  1903               	skipnz
  6953  07EC  2FBC               	goto	i1l2831
  6954  07ED  3A07               	xorlw	7	; case 116
  6955  07EE  1903               	skipnz
  6956  07EF  2FC2               	goto	i1l2835
  6957  07F0  3A01               	xorlw	1	; case 117
  6958  07F1  1903               	skipnz
  6959  07F2  2FBF               	goto	i1l2833
  6960  07F3  2FF9               	goto	i1l739
  6961  07F4                     i1l4505:	
  6962                           
  6963                           ; Switch size 1, requested type "space"
  6964                           ; Number of cases is 1, Range of values is 255 to 255
  6965                           ; switch strategies available:
  6966                           ; Name         Instructions Cycles
  6967                           ; simple_byte            4     3 (average)
  6968                           ; direct_byte            7     5 (fixed)
  6969                           ; jumptable            263     9 (fixed)
  6970                           ;	Chosen strategy is simple_byte
  6971  07F4  0863               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  6972  07F5  3AFF               	xorlw	255	; case 255
  6973  07F6  1903               	skipnz
  6974  07F7  2FCE               	goto	i1l2843
  6975  07F8  2FF9               	goto	i1l739
  6976  07F9                     i1l739:	
  6977                           ;main.c: 348: return 1;
  6978                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  6979                           
  6980  07F9  0008               	return
  6981  07FA                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  6982                           
  6983                           	psect	text31
  6984  0003                     __ptext31:	
  6985 ;; *************** function _USBCB_SOF_Handler *****************
  6986 ;; Defined at:
  6987 ;;		line 265 in file "../main.c"
  6988 ;; Parameters:    Size  Location     Type
  6989 ;;		None
  6990 ;; Auto vars:     Size  Location     Type
  6991 ;;		None
  6992 ;; Return value:  Size  Location     Type
  6993 ;;                  1    wreg      void 
  6994 ;; Registers used:
  6995 ;;		None
  6996 ;; Tracked objects:
  6997 ;;		On entry : 0/0
  6998 ;;		On exit  : 0/0
  6999 ;;		Unchanged: 0/0
  7000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7005 ;;Total ram usage:        0 bytes
  7006 ;; Hardware stack levels used:    1
  7007 ;; This function calls:
  7008 ;;		Nothing
  7009 ;; This function is called by:
  7010 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014                           
  7015                           ;psect for function _USBCB_SOF_Handler
  7016  0003                     _USBCB_SOF_Handler:	
  7017                           
  7018                           ;incstack = 0
  7019                           ; Regs used in _USBCB_SOF_Handler: []
  7020  0003  0008               	return
  7021  0004                     __end_of_USBCB_SOF_Handler:	
  7022                           
  7023                           	psect	text32
  7024  0002                     __ptext32:	
  7025 ;; *************** function _USBCBWakeFromSuspend *****************
  7026 ;; Defined at:
  7027 ;;		line 260 in file "../main.c"
  7028 ;; Parameters:    Size  Location     Type
  7029 ;;		None
  7030 ;; Auto vars:     Size  Location     Type
  7031 ;;		None
  7032 ;; Return value:  Size  Location     Type
  7033 ;;                  1    wreg      void 
  7034 ;; Registers used:
  7035 ;;		None
  7036 ;; Tracked objects:
  7037 ;;		On entry : 0/0
  7038 ;;		On exit  : 0/0
  7039 ;;		Unchanged: 0/0
  7040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7045 ;;Total ram usage:        0 bytes
  7046 ;; Hardware stack levels used:    1
  7047 ;; This function calls:
  7048 ;;		Nothing
  7049 ;; This function is called by:
  7050 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7051 ;;		_USBCBSendResume
  7052 ;; This function uses a non-reentrant model
  7053 ;;
  7054                           
  7055                           
  7056                           ;psect for function _USBCBWakeFromSuspend
  7057  0002                     _USBCBWakeFromSuspend:	
  7058                           
  7059                           ;incstack = 0
  7060                           ; Regs used in _USBCBWakeFromSuspend: []
  7061  0002  0008               	return
  7062  0003                     __end_of_USBCBWakeFromSuspend:	
  7063                           
  7064                           	psect	text33
  7065  09B5                     __ptext33:	
  7066 ;; *************** function _USBCBSuspend *****************
  7067 ;; Defined at:
  7068 ;;		line 255 in file "../main.c"
  7069 ;; Parameters:    Size  Location     Type
  7070 ;;		None
  7071 ;; Auto vars:     Size  Location     Type
  7072 ;;		None
  7073 ;; Return value:  Size  Location     Type
  7074 ;;                  1    wreg      void 
  7075 ;; Registers used:
  7076 ;;		None
  7077 ;; Tracked objects:
  7078 ;;		On entry : 0/0
  7079 ;;		On exit  : 0/0
  7080 ;;		Unchanged: 0/0
  7081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7086 ;;Total ram usage:        0 bytes
  7087 ;; Hardware stack levels used:    1
  7088 ;; This function calls:
  7089 ;;		Nothing
  7090 ;; This function is called by:
  7091 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7092 ;; This function uses a non-reentrant model
  7093 ;;
  7094                           
  7095                           
  7096                           ;psect for function _USBCBSuspend
  7097  09B5                     _USBCBSuspend:	
  7098                           
  7099                           ;incstack = 0
  7100                           ; Regs used in _USBCBSuspend: []
  7101  09B5  0008               	return
  7102  09B6                     __end_of_USBCBSuspend:	
  7103                           
  7104                           	psect	text34
  7105  09B4                     __ptext34:	
  7106 ;; *************** function _USBCBStdSetDscHandler *****************
  7107 ;; Defined at:
  7108 ;;		line 280 in file "../main.c"
  7109 ;; Parameters:    Size  Location     Type
  7110 ;;		None
  7111 ;; Auto vars:     Size  Location     Type
  7112 ;;		None
  7113 ;; Return value:  Size  Location     Type
  7114 ;;                  1    wreg      void 
  7115 ;; Registers used:
  7116 ;;		None
  7117 ;; Tracked objects:
  7118 ;;		On entry : 0/0
  7119 ;;		On exit  : 0/0
  7120 ;;		Unchanged: 0/0
  7121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7126 ;;Total ram usage:        0 bytes
  7127 ;; Hardware stack levels used:    1
  7128 ;; This function calls:
  7129 ;;		Nothing
  7130 ;; This function is called by:
  7131 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7132 ;; This function uses a non-reentrant model
  7133 ;;
  7134                           
  7135                           
  7136                           ;psect for function _USBCBStdSetDscHandler
  7137  09B4                     _USBCBStdSetDscHandler:	
  7138                           
  7139                           ;incstack = 0
  7140                           ; Regs used in _USBCBStdSetDscHandler: []
  7141  09B4  0008               	return
  7142  09B5                     __end_of_USBCBStdSetDscHandler:	
  7143                           
  7144                           	psect	text35
  7145  09B9                     __ptext35:	
  7146 ;; *************** function _USBCBInitEP *****************
  7147 ;; Defined at:
  7148 ;;		line 285 in file "../main.c"
  7149 ;; Parameters:    Size  Location     Type
  7150 ;;		None
  7151 ;; Auto vars:     Size  Location     Type
  7152 ;;		None
  7153 ;; Return value:  Size  Location     Type
  7154 ;;                  1    wreg      void 
  7155 ;; Registers used:
  7156 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7157 ;; Tracked objects:
  7158 ;;		On entry : 0/0
  7159 ;;		On exit  : 0/0
  7160 ;;		Unchanged: 0/0
  7161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7166 ;;Total ram usage:        0 bytes
  7167 ;; Hardware stack levels used:    1
  7168 ;; Hardware stack levels required when called:    3
  7169 ;; This function calls:
  7170 ;;		_CDCInitEP
  7171 ;; This function is called by:
  7172 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7173 ;; This function uses a non-reentrant model
  7174 ;;
  7175                           
  7176                           
  7177                           ;psect for function _USBCBInitEP
  7178  09B9                     _USBCBInitEP:	
  7179                           
  7180                           ;main.c: 287: CDCInitEP();
  7181                           
  7182                           ;incstack = 0
  7183                           ; Regs used in _USBCBInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7184  09B9  318B  2356         	fcall	_CDCInitEP
  7185  09BB  0008               	return
  7186  09BC                     __end_of_USBCBInitEP:	
  7187                           
  7188                           	psect	text36
  7189  0B56                     __ptext36:	
  7190 ;; *************** function _CDCInitEP *****************
  7191 ;; Defined at:
  7192 ;;		line 414 in file "../Microchip/USB/CDC_Device_Driver/usb_function_cdc.c"
  7193 ;; Parameters:    Size  Location     Type
  7194 ;;		None
  7195 ;; Auto vars:     Size  Location     Type
  7196 ;;		None
  7197 ;; Return value:  Size  Location     Type
  7198 ;;                  1    wreg      void 
  7199 ;; Registers used:
  7200 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7201 ;; Tracked objects:
  7202 ;;		On entry : 0/0
  7203 ;;		On exit  : 0/0
  7204 ;;		Unchanged: 0/0
  7205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7208 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7209 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7210 ;;Total ram usage:        3 bytes
  7211 ;; Hardware stack levels used:    1
  7212 ;; Hardware stack levels required when called:    2
  7213 ;; This function calls:
  7214 ;;		_USBEnableEndpoint
  7215 ;;		i1_USBTransferOnePacket
  7216 ;; This function is called by:
  7217 ;;		_USBCBInitEP
  7218 ;; This function uses a non-reentrant model
  7219 ;;
  7220                           
  7221                           
  7222                           ;psect for function _CDCInitEP
  7223  0B56                     _CDCInitEP:	
  7224                           
  7225                           ;usb_function_cdc.c: 417: line_coding.dwDTERate.Val = 19200;
  7226                           
  7227                           ;incstack = 0
  7228                           ; Regs used in _CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7229  0B56  3000               	movlw	0
  7230  0B57  0022               	movlb	2	; select bank2
  7231  0B58  00A3               	movwf	35
  7232  0B59  3000               	movlw	0
  7233  0B5A  00A2               	movwf	34
  7234  0B5B  304B               	movlw	75
  7235  0B5C  00A1               	movwf	33
  7236  0B5D  3000               	movlw	0
  7237  0B5E  00A0               	movwf	32
  7238                           
  7239                           ;usb_function_cdc.c: 418: line_coding.bCharFormat = 0x00;
  7240  0B5F  01A4               	clrf	36
  7241                           
  7242                           ;usb_function_cdc.c: 419: line_coding.bParityType = 0x00;
  7243  0B60  01A5               	clrf	37
  7244                           
  7245                           ;usb_function_cdc.c: 420: line_coding.bDataBits = 0x08;
  7246  0B61  3008               	movlw	8
  7247  0B62  0020               	movlb	0	; select bank0
  7248  0B63  00E0               	movwf	??_CDCInitEP
  7249  0B64  0860               	movf	??_CDCInitEP,w
  7250  0B65  0022               	movlb	2	; select bank2
  7251  0B66  00A6               	movwf	38
  7252                           
  7253                           ;usb_function_cdc.c: 422: cdc_rx_len = 0;
  7254  0B67  0021               	movlb	1	; select bank1
  7255  0B68  01C3               	clrf	_cdc_rx_len^(0+128)
  7256                           
  7257                           ;usb_function_cdc.c: 435: USBEnableEndpoint(1,0x02|0x10|0x08);
  7258  0B69  301A               	movlw	26
  7259  0B6A  0020               	movlb	0	; select bank0
  7260  0B6B  00E0               	movwf	??_CDCInitEP
  7261  0B6C  0860               	movf	??_CDCInitEP,w
  7262  0B6D  00F7               	movwf	USBEnableEndpoint@options
  7263  0B6E  3001               	movlw	1
  7264  0B6F  318A  2282  318B   	fcall	_USBEnableEndpoint
  7265                           
  7266                           ;usb_function_cdc.c: 436: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  7267  0B72  301E               	movlw	30
  7268  0B73  0020               	movlb	0	; select bank0
  7269  0B74  00E0               	movwf	??_CDCInitEP
  7270  0B75  0860               	movf	??_CDCInitEP,w
  7271  0B76  00F7               	movwf	USBEnableEndpoint@options
  7272  0B77  3002               	movlw	2
  7273  0B78  318A  2282  318B   	fcall	_USBEnableEndpoint
  7274                           
  7275                           ;usb_function_cdc.c: 438: CDCDataOutHandle = USBTransferOnePacket(2,0,(BYTE*)&cdc_data_r
      +                          x,sizeof(cdc_data_rx));
  7276  0B7B  01F0               	clrf	i1USBTransferOnePacket@dir
  7277  0B7C  30A0               	movlw	160
  7278  0B7D  0020               	movlb	0	; select bank0
  7279  0B7E  00E0               	movwf	??_CDCInitEP
  7280  0B7F  0860               	movf	??_CDCInitEP,w
  7281  0B80  00F1               	movwf	i1USBTransferOnePacket@data
  7282  0B81  3040               	movlw	64
  7283  0B82  00E1               	movwf	??_CDCInitEP+1
  7284  0B83  0861               	movf	??_CDCInitEP+1,w
  7285  0B84  00F2               	movwf	i1USBTransferOnePacket@len
  7286  0B85  3002               	movlw	2
  7287  0B86  318C  2463         	fcall	i1_USBTransferOnePacket
  7288  0B88  0020               	movlb	0	; select bank0
  7289  0B89  00E2               	movwf	??_CDCInitEP+2
  7290  0B8A  0862               	movf	??_CDCInitEP+2,w
  7291  0B8B  0021               	movlb	1	; select bank1
  7292  0B8C  00BF               	movwf	_CDCDataOutHandle^(0+128)
  7293                           
  7294                           ;usb_function_cdc.c: 439: CDCDataInHandle = (0);
  7295  0B8D  01BE               	clrf	_CDCDataInHandle^(0+128)
  7296                           
  7297                           ;usb_function_cdc.c: 458: {TRISCbits.TRISC3 = 0;};
  7298  0B8E  118E               	bcf	14,3	;volatile
  7299                           
  7300                           ;usb_function_cdc.c: 466: cdc_trf_state = 0;
  7301  0B8F  01C2               	clrf	_cdc_trf_state^(0+128)
  7302  0B90  0008               	return
  7303  0B91                     __end_of_CDCInitEP:	
  7304                           
  7305                           	psect	text37
  7306  0C63                     __ptext37:	
  7307 ;; *************** function i1_USBTransferOnePacket *****************
  7308 ;; Defined at:
  7309 ;;		line 1172 in file "../Microchip/USB/usb_device.c"
  7310 ;; Parameters:    Size  Location     Type
  7311 ;;  ep              1    wreg     unsigned char 
  7312 ;;  dir             1    0[COMMON] unsigned char 
  7313 ;;  data            1    1[COMMON] PTR unsigned char 
  7314 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  7315 ;;  len             1    2[COMMON] unsigned char 
  7316 ;; Auto vars:     Size  Location     Type
  7317 ;;  ep              1    5[COMMON] unsigned char 
  7318 ;;  USBTransferO    1    6[COMMON] PTR volatile struct __BD
  7319 ;;		 -> NULL(0), BDT(48), 
  7320 ;; Return value:  Size  Location     Type
  7321 ;;                  1    wreg      PTR void 
  7322 ;; Registers used:
  7323 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7324 ;; Tracked objects:
  7325 ;;		On entry : 0/0
  7326 ;;		On exit  : 0/0
  7327 ;;		Unchanged: 0/0
  7328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7329 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7330 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7331 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7332 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7333 ;;Total ram usage:        7 bytes
  7334 ;; Hardware stack levels used:    1
  7335 ;; This function calls:
  7336 ;;		Nothing
  7337 ;; This function is called by:
  7338 ;;		_CDCInitEP
  7339 ;; This function uses a non-reentrant model
  7340 ;;
  7341                           
  7342                           
  7343                           ;psect for function i1_USBTransferOnePacket
  7344  0C63                     i1_USBTransferOnePacket:	
  7345                           
  7346                           ;incstack = 0
  7347                           ; Regs used in i1_USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  7348                           ;i1USBTransferOnePacket@ep stored from wreg
  7349  0C63  00F5               	movwf	i1USBTransferOnePacket@ep
  7350                           
  7351                           ;usb_device.c: 1174: volatile BDT_ENTRY* handle;
  7352                           ;usb_device.c: 1177: if(dir != 0)
  7353  0C64  0870               	movf	i1USBTransferOnePacket@dir,w
  7354  0C65  1903               	btfsc	3,2
  7355  0C66  2C6C               	goto	i1l2731
  7356                           
  7357                           ;usb_device.c: 1178: {
  7358                           ;usb_device.c: 1180: handle = pBDTEntryIn[ep];
  7359  0C67  0875               	movf	i1USBTransferOnePacket@ep,w
  7360  0C68  3EB2               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  7361  0C69  0086               	movwf	6
  7362  0C6A  0187               	clrf	7
  7363  0C6B  2C71               	goto	L11
  7364  0C6C                     i1l2731:	
  7365                           ;usb_device.c: 1181: }
  7366                           
  7367                           
  7368                           ;usb_device.c: 1182: else
  7369                           ;usb_device.c: 1183: {
  7370                           ;usb_device.c: 1185: handle = pBDTEntryOut[ep];
  7371  0C6C  0875               	movf	i1USBTransferOnePacket@ep,w
  7372  0C6D  3E35               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7373  0C6E  0086               	movwf	6
  7374  0C6F  3001               	movlw	1	; select bank2/3
  7375  0C70  0087               	movwf	7
  7376  0C71                     L11:	
  7377  0C71  0801               	movf	1,w
  7378  0C72  00F3               	movwf	??i1_USBTransferOnePacket
  7379  0C73  0873               	movf	??i1_USBTransferOnePacket,w
  7380  0C74  00F6               	movwf	i1USBTransferOnePacket@handle
  7381                           
  7382                           ;usb_device.c: 1186: }
  7383                           ;usb_device.c: 1190: if(handle == 0)
  7384  0C75  0876               	movf	i1USBTransferOnePacket@handle,w
  7385  0C76  1D03               	btfss	3,2
  7386  0C77  2C7A               	goto	i1l2739
  7387                           
  7388                           ;usb_device.c: 1191: {
  7389                           ;usb_device.c: 1192: return 0;
  7390  0C78  3000               	movlw	0
  7391  0C79  0008               	return
  7392  0C7A                     i1l2739:	
  7393                           
  7394                           ;usb_device.c: 1193: }
  7395                           ;usb_device.c: 1206: handle->ADR = (((WORD)(data))& 0x7FFF);
  7396  0C7A  0871               	movf	i1USBTransferOnePacket@data,w
  7397  0C7B  00F3               	movwf	??i1_USBTransferOnePacket
  7398  0C7C  3002               	movlw	2
  7399  0C7D  00F4               	movwf	??i1_USBTransferOnePacket+1
  7400  0C7E  0876               	movf	i1USBTransferOnePacket@handle,w
  7401  0C7F  3E02               	addlw	2
  7402  0C80  0086               	movwf	6
  7403  0C81  0187               	clrf	7
  7404  0C82  0873               	movf	??i1_USBTransferOnePacket,w
  7405  0C83  3FC0               	movwi [0]fsr1
  7406  0C84  0874               	movf	??i1_USBTransferOnePacket+1,w
  7407  0C85  3FC1               	movwi [1]fsr1
  7408                           
  7409                           ;usb_device.c: 1207: handle->CNT = len;
  7410  0C86  0872               	movf	i1USBTransferOnePacket@len,w
  7411  0C87  00F3               	movwf	??i1_USBTransferOnePacket
  7412  0C88  0A76               	incf	i1USBTransferOnePacket@handle,w
  7413  0C89  0086               	movwf	6
  7414  0C8A  0187               	clrf	7
  7415  0C8B  0873               	movf	??i1_USBTransferOnePacket,w
  7416  0C8C  0081               	movwf	1
  7417                           
  7418                           ;usb_device.c: 1208: handle->STAT.Val &= 0x40;
  7419  0C8D  3040               	movlw	64
  7420  0C8E  00F3               	movwf	??i1_USBTransferOnePacket
  7421  0C8F  0876               	movf	i1USBTransferOnePacket@handle,w
  7422  0C90  0086               	movwf	6
  7423  0C91  0187               	clrf	7
  7424  0C92  0873               	movf	??i1_USBTransferOnePacket,w
  7425  0C93  0581               	andwf	1,f
  7426                           
  7427                           ;usb_device.c: 1209: handle->STAT.Val |= 0x80 | (0x08 & 0x08);
  7428  0C94  3088               	movlw	136
  7429  0C95  00F3               	movwf	??i1_USBTransferOnePacket
  7430  0C96  0876               	movf	i1USBTransferOnePacket@handle,w
  7431  0C97  0086               	movwf	6
  7432  0C98  0187               	clrf	7
  7433  0C99  0873               	movf	??i1_USBTransferOnePacket,w
  7434  0C9A  0481               	iorwf	1,f
  7435                           
  7436                           ;usb_device.c: 1212: if(dir != 0)
  7437  0C9B  0870               	movf	i1USBTransferOnePacket@dir,w
  7438  0C9C  1903               	btfsc	3,2
  7439  0C9D  2CA5               	goto	i1l2751
  7440                           
  7441                           ;usb_device.c: 1213: {
  7442                           ;usb_device.c: 1215: ((BYTE_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;;
  7443  0C9E  3004               	movlw	4
  7444  0C9F  00F3               	movwf	??i1_USBTransferOnePacket
  7445  0CA0  0875               	movf	i1USBTransferOnePacket@ep,w
  7446  0CA1  3EB2               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  7447  0CA2  0086               	movwf	6
  7448  0CA3  0187               	clrf	7
  7449  0CA4  2CAC               	goto	L12
  7450  0CA5                     i1l2751:	
  7451                           ;usb_device.c: 1216: }
  7452                           
  7453                           
  7454                           ;usb_device.c: 1217: else
  7455                           ;usb_device.c: 1218: {
  7456                           ;usb_device.c: 1220: ((BYTE_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;;
  7457  0CA5  3004               	movlw	4
  7458  0CA6  00F3               	movwf	??i1_USBTransferOnePacket
  7459  0CA7  0875               	movf	i1USBTransferOnePacket@ep,w
  7460  0CA8  3E35               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7461  0CA9  0086               	movwf	6
  7462  0CAA  3001               	movlw	1	; select bank2/3
  7463  0CAB  0087               	movwf	7
  7464  0CAC                     L12:	
  7465  0CAC  0873               	movf	??i1_USBTransferOnePacket,w
  7466  0CAD  0681               	xorwf	1,f
  7467                           
  7468                           ;usb_device.c: 1221: }
  7469                           ;usb_device.c: 1222: return (void*)handle;
  7470  0CAE  0876               	movf	i1USBTransferOnePacket@handle,w
  7471  0CAF  0008               	return
  7472  0CB0                     __end_ofi1_USBTransferOnePacket:	
  7473                           
  7474                           	psect	text38
  7475  0A82                     __ptext38:	
  7476 ;; *************** function _USBEnableEndpoint *****************
  7477 ;; Defined at:
  7478 ;;		line 1055 in file "../Microchip/USB/usb_device.c"
  7479 ;; Parameters:    Size  Location     Type
  7480 ;;  ep              1    wreg     unsigned char 
  7481 ;;  options         1    7[COMMON] unsigned char 
  7482 ;; Auto vars:     Size  Location     Type
  7483 ;;  ep              1   12[COMMON] unsigned char 
  7484 ;;  p               2   10[COMMON] PTR unsigned char 
  7485 ;;		 -> UEP0(1), 
  7486 ;; Return value:  Size  Location     Type
  7487 ;;                  1    wreg      void 
  7488 ;; Registers used:
  7489 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7490 ;; Tracked objects:
  7491 ;;		On entry : 0/0
  7492 ;;		On exit  : 0/0
  7493 ;;		Unchanged: 0/0
  7494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7495 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7496 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7497 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7498 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7499 ;;Total ram usage:        6 bytes
  7500 ;; Hardware stack levels used:    1
  7501 ;; Hardware stack levels required when called:    1
  7502 ;; This function calls:
  7503 ;;		_USBConfigureEndpoint
  7504 ;; This function is called by:
  7505 ;;		_CDCInitEP
  7506 ;; This function uses a non-reentrant model
  7507 ;;
  7508                           
  7509                           
  7510                           ;psect for function _USBEnableEndpoint
  7511  0A82                     _USBEnableEndpoint:	
  7512                           
  7513                           ;incstack = 0
  7514                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7515                           ;USBEnableEndpoint@ep stored from wreg
  7516  0A82  00FC               	movwf	USBEnableEndpoint@ep
  7517                           
  7518                           ;usb_device.c: 1057: unsigned char* p;
  7519                           ;usb_device.c: 1061: if(options & 0x04)
  7520  0A83  1D77               	btfss	USBEnableEndpoint@options,2
  7521  0A84  2A8A               	goto	i1l2719
  7522                           
  7523                           ;usb_device.c: 1062: {
  7524                           ;usb_device.c: 1063: USBConfigureEndpoint(ep, 0);
  7525  0A85  01F0               	clrf	USBConfigureEndpoint@direction
  7526  0A86  087C               	movf	USBEnableEndpoint@ep,w
  7527  0A87  318B  2391  318A   	fcall	_USBConfigureEndpoint
  7528  0A8A                     i1l2719:	
  7529                           
  7530                           ;usb_device.c: 1064: }
  7531                           ;usb_device.c: 1065: if(options & 0x02)
  7532  0A8A  1CF7               	btfss	USBEnableEndpoint@options,1
  7533  0A8B  2A91               	goto	i1l2723
  7534                           
  7535                           ;usb_device.c: 1066: {
  7536                           ;usb_device.c: 1067: USBConfigureEndpoint(ep, 1);
  7537  0A8C  01F0               	clrf	USBConfigureEndpoint@direction
  7538  0A8D  0AF0               	incf	USBConfigureEndpoint@direction,f
  7539  0A8E  087C               	movf	USBEnableEndpoint@ep,w
  7540  0A8F  318B  2391         	fcall	_USBConfigureEndpoint
  7541  0A91                     i1l2723:	
  7542                           
  7543                           ;usb_device.c: 1068: }
  7544                           ;usb_device.c: 1076: p = (unsigned char*)(&UEP0+ep);
  7545  0A91  087C               	movf	USBEnableEndpoint@ep,w
  7546  0A92  3E98               	addlw	152
  7547  0A93  00F8               	movwf	??_USBEnableEndpoint
  7548  0A94  01F9               	clrf	??_USBEnableEndpoint+1
  7549  0A95  300E               	movlw	14
  7550  0A96  3DF9               	addwfc	??_USBEnableEndpoint+1,f
  7551  0A97  0878               	movf	??_USBEnableEndpoint,w
  7552  0A98  00FA               	movwf	USBEnableEndpoint@p
  7553  0A99  0879               	movf	??_USBEnableEndpoint+1,w
  7554  0A9A  00FB               	movwf	USBEnableEndpoint@p+1
  7555                           
  7556                           ;usb_device.c: 1078: *p = options;
  7557  0A9B  087A               	movf	USBEnableEndpoint@p,w
  7558  0A9C  0086               	movwf	6
  7559  0A9D  087B               	movf	USBEnableEndpoint@p+1,w
  7560  0A9E  0087               	movwf	7
  7561  0A9F  0877               	movf	USBEnableEndpoint@options,w
  7562  0AA0  0081               	movwf	1
  7563  0AA1  0008               	return
  7564  0AA2                     __end_of_USBEnableEndpoint:	
  7565                           
  7566                           	psect	text39
  7567  0B91                     __ptext39:	
  7568 ;; *************** function _USBConfigureEndpoint *****************
  7569 ;; Defined at:
  7570 ;;		line 1712 in file "../Microchip/USB/usb_device.c"
  7571 ;; Parameters:    Size  Location     Type
  7572 ;;  EPNum           1    wreg     unsigned char 
  7573 ;;  direction       1    0[COMMON] unsigned char 
  7574 ;; Auto vars:     Size  Location     Type
  7575 ;;  EPNum           1    5[COMMON] unsigned char 
  7576 ;;  handle          1    6[COMMON] PTR volatile struct __BD
  7577 ;;		 -> BDT(48), 
  7578 ;; Return value:  Size  Location     Type
  7579 ;;                  1    wreg      void 
  7580 ;; Registers used:
  7581 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7582 ;; Tracked objects:
  7583 ;;		On entry : 0/0
  7584 ;;		On exit  : 0/0
  7585 ;;		Unchanged: 0/0
  7586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7587 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7588 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7589 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7590 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7591 ;;Total ram usage:        7 bytes
  7592 ;; Hardware stack levels used:    1
  7593 ;; This function calls:
  7594 ;;		Nothing
  7595 ;; This function is called by:
  7596 ;;		_USBEnableEndpoint
  7597 ;; This function uses a non-reentrant model
  7598 ;;
  7599                           
  7600                           
  7601                           ;psect for function _USBConfigureEndpoint
  7602  0B91                     _USBConfigureEndpoint:	
  7603                           
  7604                           ;incstack = 0
  7605                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  7606                           ;USBConfigureEndpoint@EPNum stored from wreg
  7607  0B91  00F5               	movwf	USBConfigureEndpoint@EPNum
  7608                           
  7609                           ;usb_device.c: 1714: volatile BDT_ENTRY* handle;
  7610                           ;usb_device.c: 1718: handle = (volatile BDT_ENTRY*)&BDT[0];
  7611  0B92  3020               	movlw	32
  7612  0B93  00F1               	movwf	??_USBConfigureEndpoint
  7613  0B94  0871               	movf	??_USBConfigureEndpoint,w
  7614  0B95  00F6               	movwf	USBConfigureEndpoint@handle
  7615                           
  7616                           ;usb_device.c: 1719: handle += (4*EPNum+2*direction+0u);
  7617  0B96  0870               	movf	USBConfigureEndpoint@direction,w
  7618  0B97  00F1               	movwf	??_USBConfigureEndpoint
  7619  0B98  3001               	movlw	1
  7620  0B99                     u217_25:	
  7621  0B99  35F1               	lslf	??_USBConfigureEndpoint,f
  7622  0B9A  0B89               	decfsz	9,f
  7623  0B9B  2B99               	goto	u217_25
  7624  0B9C  0875               	movf	USBConfigureEndpoint@EPNum,w
  7625  0B9D  00F2               	movwf	??_USBConfigureEndpoint+1
  7626  0B9E  3001               	movlw	1
  7627  0B9F                     u218_25:	
  7628  0B9F  35F2               	lslf	??_USBConfigureEndpoint+1,f
  7629  0BA0  3EFF               	addlw	-1
  7630  0BA1  1D03               	skipz
  7631  0BA2  2B9F               	goto	u218_25
  7632  0BA3  3572               	lslf	??_USBConfigureEndpoint+1,w
  7633  0BA4  0771               	addwf	??_USBConfigureEndpoint,w
  7634  0BA5  00F3               	movwf	??_USBConfigureEndpoint+2
  7635  0BA6  3001               	movlw	1
  7636  0BA7                     u219_25:	
  7637  0BA7  35F3               	lslf	??_USBConfigureEndpoint+2,f
  7638  0BA8  3EFF               	addlw	-1
  7639  0BA9  1D03               	skipz
  7640  0BAA  2BA7               	goto	u219_25
  7641  0BAB  3573               	lslf	??_USBConfigureEndpoint+2,w
  7642  0BAC  00F4               	movwf	??_USBConfigureEndpoint+3
  7643  0BAD  0874               	movf	??_USBConfigureEndpoint+3,w
  7644  0BAE  07F6               	addwf	USBConfigureEndpoint@handle,f
  7645                           
  7646                           ;usb_device.c: 1721: handle->STAT.UOWN = 0;
  7647  0BAF  0876               	movf	USBConfigureEndpoint@handle,w
  7648  0BB0  0086               	movwf	6
  7649  0BB1  0187               	clrf	7
  7650  0BB2  1381               	bcf	1,7
  7651                           
  7652                           ;usb_device.c: 1726: if(direction == 0)
  7653  0BB3  0870               	movf	USBConfigureEndpoint@direction,w
  7654  0BB4  1D03               	btfss	3,2
  7655  0BB5  2BBE               	goto	i1l2709
  7656                           
  7657                           ;usb_device.c: 1727: {
  7658                           ;usb_device.c: 1728: pBDTEntryOut[EPNum] = handle;
  7659  0BB6  0876               	movf	USBConfigureEndpoint@handle,w
  7660  0BB7  00F1               	movwf	??_USBConfigureEndpoint
  7661  0BB8  0875               	movf	USBConfigureEndpoint@EPNum,w
  7662  0BB9  3E35               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7663  0BBA  0086               	movwf	6
  7664  0BBB  3001               	movlw	1	; select bank2/3
  7665  0BBC  0087               	movwf	7
  7666  0BBD  2BC4               	goto	L13
  7667  0BBE                     i1l2709:	
  7668                           ;usb_device.c: 1729: }
  7669                           
  7670                           
  7671                           ;usb_device.c: 1730: else
  7672                           ;usb_device.c: 1731: {
  7673                           ;usb_device.c: 1732: pBDTEntryIn[EPNum] = handle;
  7674  0BBE  0876               	movf	USBConfigureEndpoint@handle,w
  7675  0BBF  00F1               	movwf	??_USBConfigureEndpoint
  7676  0BC0  0875               	movf	USBConfigureEndpoint@EPNum,w
  7677  0BC1  3EB2               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  7678  0BC2  0086               	movwf	6
  7679  0BC3  0187               	clrf	7
  7680  0BC4                     L13:	
  7681  0BC4  0871               	movf	??_USBConfigureEndpoint,w
  7682  0BC5  0081               	movwf	1
  7683                           
  7684                           ;usb_device.c: 1733: }
  7685                           ;usb_device.c: 1736: handle->STAT.DTS = 0;
  7686  0BC6  0876               	movf	USBConfigureEndpoint@handle,w
  7687  0BC7  0086               	movwf	6
  7688  0BC8  0187               	clrf	7
  7689  0BC9  1301               	bcf	1,6
  7690                           
  7691                           ;usb_device.c: 1737: (handle+1)->STAT.DTS = 1;
  7692  0BCA  0876               	movf	USBConfigureEndpoint@handle,w
  7693  0BCB  3E04               	addlw	4
  7694  0BCC  0086               	movwf	6
  7695  0BCD  0187               	clrf	7
  7696  0BCE  1701               	bsf	1,6
  7697  0BCF  0008               	return
  7698  0BD0                     __end_of_USBConfigureEndpoint:	
  7699                           
  7700                           	psect	text40
  7701  09B3                     __ptext40:	
  7702 ;; *************** function _USBCBErrorHandler *****************
  7703 ;; Defined at:
  7704 ;;		line 270 in file "../main.c"
  7705 ;; Parameters:    Size  Location     Type
  7706 ;;		None
  7707 ;; Auto vars:     Size  Location     Type
  7708 ;;		None
  7709 ;; Return value:  Size  Location     Type
  7710 ;;                  1    wreg      void 
  7711 ;; Registers used:
  7712 ;;		None
  7713 ;; Tracked objects:
  7714 ;;		On entry : 0/0
  7715 ;;		On exit  : 0/0
  7716 ;;		Unchanged: 0/0
  7717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7722 ;;Total ram usage:        0 bytes
  7723 ;; Hardware stack levels used:    1
  7724 ;; This function calls:
  7725 ;;		Nothing
  7726 ;; This function is called by:
  7727 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7728 ;; This function uses a non-reentrant model
  7729 ;;
  7730                           
  7731                           
  7732                           ;psect for function _USBCBErrorHandler
  7733  09B3                     _USBCBErrorHandler:	
  7734                           
  7735                           ;incstack = 0
  7736                           ; Regs used in _USBCBErrorHandler: []
  7737  09B3  0008               	return
  7738  09B4                     __end_of_USBCBErrorHandler:	
  7739                           
  7740                           	psect	text41
  7741  09B6                     __ptext41:	
  7742 ;; *************** function _USBCBCheckOtherReq *****************
  7743 ;; Defined at:
  7744 ;;		line 275 in file "../main.c"
  7745 ;; Parameters:    Size  Location     Type
  7746 ;;		None
  7747 ;; Auto vars:     Size  Location     Type
  7748 ;;		None
  7749 ;; Return value:  Size  Location     Type
  7750 ;;                  1    wreg      void 
  7751 ;; Registers used:
  7752 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7753 ;; Tracked objects:
  7754 ;;		On entry : 0/0
  7755 ;;		On exit  : 0/0
  7756 ;;		Unchanged: 0/0
  7757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7762 ;;Total ram usage:        0 bytes
  7763 ;; Hardware stack levels used:    1
  7764 ;; Hardware stack levels required when called:    1
  7765 ;; This function calls:
  7766 ;;		_USBCheckCDCRequest
  7767 ;; This function is called by:
  7768 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7769 ;; This function uses a non-reentrant model
  7770 ;;
  7771                           
  7772                           
  7773                           ;psect for function _USBCBCheckOtherReq
  7774  09B6                     _USBCBCheckOtherReq:	
  7775                           
  7776                           ;main.c: 277: USBCheckCDCRequest();
  7777                           
  7778                           ;incstack = 0
  7779                           ; Regs used in _USBCBCheckOtherReq: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7780  09B6  318E  26B8         	fcall	_USBCheckCDCRequest
  7781  09B8  0008               	return
  7782  09B9                     __end_of_USBCBCheckOtherReq:	
  7783                           
  7784                           	psect	text42
  7785  0EB8                     __ptext42:	
  7786 ;; *************** function _USBCheckCDCRequest *****************
  7787 ;; Defined at:
  7788 ;;		line 267 in file "../Microchip/USB/CDC_Device_Driver/usb_function_cdc.c"
  7789 ;; Parameters:    Size  Location     Type
  7790 ;;		None
  7791 ;; Auto vars:     Size  Location     Type
  7792 ;;		None
  7793 ;; Return value:  Size  Location     Type
  7794 ;;                  1    wreg      void 
  7795 ;; Registers used:
  7796 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7797 ;; Tracked objects:
  7798 ;;		On entry : 0/0
  7799 ;;		On exit  : 0/0
  7800 ;;		Unchanged: 0/0
  7801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7804 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7805 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7806 ;;Total ram usage:        1 bytes
  7807 ;; Hardware stack levels used:    1
  7808 ;; This function calls:
  7809 ;;		Nothing
  7810 ;; This function is called by:
  7811 ;;		_USBCBCheckOtherReq
  7812 ;; This function uses a non-reentrant model
  7813 ;;
  7814                           
  7815                           
  7816                           ;psect for function _USBCheckCDCRequest
  7817  0EB8                     _USBCheckCDCRequest:	
  7818                           
  7819                           ;usb_function_cdc.c: 272: if(SetupPkt.Recipient != (0x01)) return;
  7820                           
  7821                           ;incstack = 0
  7822                           ; Regs used in _USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
  7823  0EB8  0020               	movlb	0	; select bank0
  7824  0EB9  0850               	movf	80,w	;volatile
  7825  0EBA  391F               	andlw	31
  7826  0EBB  3A01               	xorlw	1
  7827  0EBC  1D03               	btfss	3,2
  7828  0EBD  0008               	return
  7829                           
  7830                           ;usb_function_cdc.c: 277: if(SetupPkt.RequestType != (0x20>>5)) return;
  7831  0EBE  0E50               	swapf	80,w	;volatile
  7832  0EBF  0C89               	rrf	9,f
  7833  0EC0  3903               	andlw	3
  7834  0EC1  3A01               	xorlw	1
  7835  0EC2  1D03               	btfss	3,2
  7836  0EC3  0008               	return
  7837                           
  7838                           ;usb_function_cdc.c: 283: if((SetupPkt.bIntfID != 0x0)&&
  7839                           ;usb_function_cdc.c: 284: (SetupPkt.bIntfID != 0x01)) return;
  7840  0EC4  0854               	movf	84,w	;volatile
  7841  0EC5  1903               	btfsc	3,2
  7842  0EC6  2F0E               	goto	i1l2803
  7843  0EC7  0354               	decf	84,w	;volatile
  7844  0EC8  1D03               	btfss	3,2
  7845  0EC9  0008               	return
  7846  0ECA  2F0E               	goto	i1l2803
  7847  0ECB                     i1l2771:	
  7848                           ;usb_function_cdc.c: 287: {
  7849                           ;usb_function_cdc.c: 289: case 0x00:
  7850                           
  7851                           ;usb_function_cdc.c: 286: switch(SetupPkt.bRequest)
  7852                           
  7853                           
  7854                           ;usb_function_cdc.c: 291: inPipes[0].pSrc.bRam = (BYTE*)&dummy_encapsulated_cmd_response
      +                          ;
  7855  0ECB  303F               	movlw	low _dummy_encapsulated_cmd_response
  7856  0ECC  0021               	movlb	1	; select bank1
  7857  0ECD  00A7               	movwf	_inPipes^(0+128)	;volatile
  7858  0ECE  3001               	movlw	high _dummy_encapsulated_cmd_response
  7859  0ECF  00A8               	movwf	(_inPipes+1)^(0+128)	;volatile
  7860                           
  7861                           ;usb_function_cdc.c: 292: inPipes[0].wCount.Val = 0x08;
  7862  0ED0  3000               	movlw	0
  7863  0ED1  00AB               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  7864  0ED2  3008               	movlw	8
  7865  0ED3  00AA               	movwf	(_inPipes^(0+128)+3)	;volatile
  7866                           
  7867                           ;usb_function_cdc.c: 293: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7868  0ED4  1429               	bsf	(_inPipes^(0+128)+2),0	;volatile
  7869                           
  7870                           ;usb_function_cdc.c: 294: inPipes[0].info.bits.busy = 1;
  7871  0ED5  17A9               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7872                           
  7873                           ;usb_function_cdc.c: 295: break;
  7874  0ED6  0008               	return
  7875  0ED7                     i1l2779:	
  7876                           ;usb_function_cdc.c: 296: case 0x01:
  7877                           
  7878                           
  7879                           ;usb_function_cdc.c: 298: inPipes[0].pSrc.bRam = (BYTE*)&dummy_encapsulated_cmd_response
      +                          ;
  7880  0ED7  303F               	movlw	low _dummy_encapsulated_cmd_response
  7881  0ED8  0021               	movlb	1	; select bank1
  7882  0ED9  00A7               	movwf	_inPipes^(0+128)	;volatile
  7883  0EDA  3001               	movlw	high _dummy_encapsulated_cmd_response
  7884  0EDB  00A8               	movwf	(_inPipes+1)^(0+128)	;volatile
  7885                           
  7886                           ;usb_function_cdc.c: 299: inPipes[0].info.bits.busy = 1;
  7887  0EDC  17A9               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7888                           
  7889                           ;usb_function_cdc.c: 300: break;
  7890  0EDD  0008               	return
  7891  0EDE                     i1l2783:	
  7892                           ;usb_function_cdc.c: 304: case 0x20:
  7893                           
  7894                           
  7895                           ;usb_function_cdc.c: 305: outPipes[0].wCount.Val = SetupPkt.wLength;
  7896  0EDE  0020               	movlb	0	; select bank0
  7897  0EDF  0857               	movf	87,w	;volatile
  7898  0EE0  0021               	movlb	1	; select bank1
  7899  0EE1  00A4               	movwf	((_outPipes+1)^(0+128)+3)	;volatile
  7900  0EE2  0020               	movlb	0	; select bank0
  7901  0EE3  0856               	movf	86,w	;volatile
  7902  0EE4  0021               	movlb	1	; select bank1
  7903  0EE5  00A3               	movwf	(_outPipes^(0+128)+3)	;volatile
  7904                           
  7905                           ;usb_function_cdc.c: 306: outPipes[0].pDst.bRam = (BYTE*)&cdc_notice.SetLineCoding._byte
      +                          [0];
  7906  0EE6  3027               	movlw	39
  7907  0EE7  00F0               	movwf	??_USBCheckCDCRequest
  7908  0EE8  0870               	movf	??_USBCheckCDCRequest,w
  7909  0EE9  00A0               	movwf	_outPipes^(0+128)	;volatile
  7910                           
  7911                           ;usb_function_cdc.c: 307: outPipes[0].pFunc = &mySetLineCodingHandler;
  7912  0EEA  300B               	movlw	high _mySetLineCodingHandler
  7913  0EEB  00A6               	movwf	((low ((_outPipes| 0+5))+1))^(0+128)	;volatile
  7914  0EEC  301B               	movlw	low _mySetLineCodingHandler
  7915  0EED  00A5               	movwf	(low ((_outPipes| 0+5)))^(0+128)	;volatile
  7916                           
  7917                           ;usb_function_cdc.c: 308: outPipes[0].info.bits.busy = 1;
  7918  0EEE  17A2               	bsf	(_outPipes^(0+128)+2),7	;volatile
  7919                           
  7920                           ;usb_function_cdc.c: 309: break;
  7921  0EEF  0008               	return
  7922  0EF0                     i1l2789:	
  7923                           ;usb_function_cdc.c: 311: case 0x21:
  7924                           
  7925                           
  7926                           ;usb_function_cdc.c: 312: { inPipes[0].pSrc.bRam = (BYTE*)&line_coding; inPipes[0].wCoun
      +                          t.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  7927  0EF0  3020               	movlw	32
  7928  0EF1  0021               	movlb	1	; select bank1
  7929  0EF2  00A7               	movwf	_inPipes^(0+128)	;volatile
  7930  0EF3  3001               	movlw	1
  7931  0EF4  00A8               	movwf	(_inPipes+1)^(0+128)	;volatile
  7932  0EF5  3000               	movlw	0
  7933  0EF6  00AB               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  7934  0EF7  3007               	movlw	7
  7935  0EF8  00AA               	movwf	(_inPipes^(0+128)+3)	;volatile
  7936  0EF9  30C1               	movlw	193
  7937  0EFA  00F0               	movwf	??_USBCheckCDCRequest
  7938  0EFB  0870               	movf	??_USBCheckCDCRequest,w
  7939  0EFC  00A9               	movwf	(_inPipes^(0+128)+2)	;volatile
  7940                           
  7941                           ;usb_function_cdc.c: 316: break;
  7942  0EFD  0008               	return
  7943  0EFE                     i1l2795:	
  7944                           ;usb_function_cdc.c: 318: case 0x22:
  7945                           
  7946                           
  7947                           ;usb_function_cdc.c: 319: control_signal_bitmap._byte = (BYTE)SetupPkt.W_Value.v[0];
  7948  0EFE  0020               	movlb	0	; select bank0
  7949  0EFF  0852               	movf	82,w	;volatile
  7950  0F00  00F0               	movwf	??_USBCheckCDCRequest
  7951  0F01  0870               	movf	??_USBCheckCDCRequest,w
  7952  0F02  0021               	movlb	1	; select bank1
  7953  0F03  00BD               	movwf	_control_signal_bitmap^(0+128)
  7954                           
  7955                           ;usb_function_cdc.c: 342: if(control_signal_bitmap.DTE_PRESENT == 1)
  7956  0F04  1C3D               	btfss	_control_signal_bitmap^(0+128),0
  7957  0F05  2F09               	goto	i1l440
  7958                           
  7959                           ;usb_function_cdc.c: 343: {
  7960                           ;usb_function_cdc.c: 344: LATCbits.LATC3 = 0;
  7961  0F06  0022               	movlb	2	; select bank2
  7962  0F07  118E               	bcf	14,3	;volatile
  7963                           
  7964                           ;usb_function_cdc.c: 345: }
  7965  0F08  2F0B               	goto	i1l441
  7966  0F09                     i1l440:	
  7967                           
  7968                           ;usb_function_cdc.c: 346: else
  7969                           ;usb_function_cdc.c: 347: {
  7970                           ;usb_function_cdc.c: 348: LATCbits.LATC3 = (0 ^ 1);
  7971  0F09  0022               	movlb	2	; select bank2
  7972  0F0A  158E               	bsf	14,3	;volatile
  7973  0F0B                     i1l441:	
  7974                           
  7975                           ;usb_function_cdc.c: 349: }
  7976                           ;usb_function_cdc.c: 351: inPipes[0].info.bits.busy = 1;
  7977  0F0B  0021               	movlb	1	; select bank1
  7978  0F0C  17A9               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7979                           
  7980                           ;usb_function_cdc.c: 378: }
  7981                           
  7982                           ;usb_function_cdc.c: 377: break;
  7983                           
  7984                           ;usb_function_cdc.c: 376: default:
  7985                           
  7986                           ;usb_function_cdc.c: 352: break;
  7987  0F0D  0008               	return
  7988  0F0E                     i1l2803:	
  7989  0F0E  0020               	movlb	0	; select bank0
  7990  0F0F  0851               	movf	81,w	;volatile
  7991                           
  7992                           ; Switch size 1, requested type "space"
  7993                           ; Number of cases is 5, Range of values is 0 to 34
  7994                           ; switch strategies available:
  7995                           ; Name         Instructions Cycles
  7996                           ; simple_byte           16     9 (average)
  7997                           ; direct_byte           76     6 (fixed)
  7998                           ; jumptable            260     6 (fixed)
  7999                           ;	Chosen strategy is simple_byte
  8000  0F10  3A00               	xorlw	0	; case 0
  8001  0F11  1903               	skipnz
  8002  0F12  2ECB               	goto	i1l2771
  8003  0F13  3A01               	xorlw	1	; case 1
  8004  0F14  1903               	skipnz
  8005  0F15  2ED7               	goto	i1l2779
  8006  0F16  3A21               	xorlw	33	; case 32
  8007  0F17  1903               	skipnz
  8008  0F18  2EDE               	goto	i1l2783
  8009  0F19  3A01               	xorlw	1	; case 33
  8010  0F1A  1903               	skipnz
  8011  0F1B  2EF0               	goto	i1l2789
  8012  0F1C  3A03               	xorlw	3	; case 34
  8013  0F1D  1903               	skipnz
  8014  0F1E  2EFE               	goto	i1l2795
  8015  0F1F  2F20               	goto	i1l430
  8016  0F20                     i1l430:	
  8017  0F20  0008               	return
  8018  0F21                     __end_of_USBCheckCDCRequest:	
  8019                           
  8020                           	psect	text43
  8021  0AE9                     __ptext43:	
  8022 ;; *************** function _USBCtrlTrfOutHandler *****************
  8023 ;; Defined at:
  8024 ;;		line 2694 in file "../Microchip/USB/usb_device.c"
  8025 ;; Parameters:    Size  Location     Type
  8026 ;;		None
  8027 ;; Auto vars:     Size  Location     Type
  8028 ;;		None
  8029 ;; Return value:  Size  Location     Type
  8030 ;;                  1    wreg      void 
  8031 ;; Registers used:
  8032 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8033 ;; Tracked objects:
  8034 ;;		On entry : 0/0
  8035 ;;		On exit  : 0/0
  8036 ;;		Unchanged: 0/0
  8037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8040 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8041 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8042 ;;Total ram usage:        2 bytes
  8043 ;; Hardware stack levels used:    1
  8044 ;; Hardware stack levels required when called:    3
  8045 ;; This function calls:
  8046 ;;		_USBCtrlTrfRxService
  8047 ;; This function is called by:
  8048 ;;		_USBCtrlEPService
  8049 ;; This function uses a non-reentrant model
  8050 ;;
  8051                           
  8052                           
  8053                           ;psect for function _USBCtrlTrfOutHandler
  8054  0AE9                     _USBCtrlTrfOutHandler:	
  8055                           
  8056                           ;usb_device.c: 2696: if(controlTransferState == 2)
  8057                           
  8058                           ;incstack = 0
  8059                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8060  0AE9  3002               	movlw	2
  8061  0AEA  0021               	movlb	1	; select bank1
  8062  0AEB  064F               	xorwf	_controlTransferState^(0+128),w	;volatile
  8063  0AEC  1D03               	btfss	3,2
  8064  0AED  2AF1               	goto	i1l3377
  8065                           
  8066                           ;usb_device.c: 2697: {
  8067                           ;usb_device.c: 2698: USBCtrlTrfRxService();
  8068  0AEE  3182  22D9         	fcall	_USBCtrlTrfRxService
  8069                           
  8070                           ;usb_device.c: 2699: }
  8071  0AF0  0008               	return
  8072  0AF1                     i1l3377:	
  8073                           
  8074                           ;usb_device.c: 2700: else
  8075                           ;usb_device.c: 2701: {
  8076                           ;usb_device.c: 2704: controlTransferState = 0;
  8077  0AF1  0021               	movlb	1	; select bank1
  8078  0AF2  01CF               	clrf	_controlTransferState^(0+128)	;volatile
  8079                           
  8080                           ;usb_device.c: 2711: if(BothEP0OutUOWNsSet == FALSE)
  8081  0AF3  084A               	movf	_BothEP0OutUOWNsSet^(0+128),w	;volatile
  8082  0AF4  1D03               	btfss	3,2
  8083  0AF5  2B18               	goto	i1l3387
  8084                           
  8085                           ;usb_device.c: 2712: {
  8086                           ;usb_device.c: 2713: pBDTEntryEP0OutNext->CNT = 8;
  8087  0AF6  3008               	movlw	8
  8088  0AF7  0020               	movlb	0	; select bank0
  8089  0AF8  00EA               	movwf	??_USBCtrlTrfOutHandler
  8090  0AF9  0021               	movlb	1	; select bank1
  8091  0AFA  0A51               	incf	_pBDTEntryEP0OutNext^(0+128),w
  8092  0AFB  0086               	movwf	6
  8093  0AFC  0187               	clrf	7
  8094  0AFD  0020               	movlb	0	; select bank0
  8095  0AFE  086A               	movf	??_USBCtrlTrfOutHandler,w
  8096  0AFF  0081               	movwf	1
  8097                           
  8098                           ;usb_device.c: 2714: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  8099  0B00  3050               	movlw	80
  8100  0B01  00EA               	movwf	??_USBCtrlTrfOutHandler
  8101  0B02  3000               	movlw	0
  8102  0B03  00EB               	movwf	??_USBCtrlTrfOutHandler+1
  8103  0B04  0021               	movlb	1	; select bank1
  8104  0B05  0851               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8105  0B06  3E02               	addlw	2
  8106  0B07  0086               	movwf	6
  8107  0B08  0187               	clrf	7
  8108  0B09  0020               	movlb	0	; select bank0
  8109  0B0A  086A               	movf	??_USBCtrlTrfOutHandler,w
  8110  0B0B  3FC0               	movwi [0]fsr1
  8111  0B0C  086B               	movf	??_USBCtrlTrfOutHandler+1,w
  8112  0B0D  3FC1               	movwi [1]fsr1
  8113                           
  8114                           ;usb_device.c: 2715: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|(0x08 & 0x08)|0x04;
  8115  0B0E  308C               	movlw	140
  8116  0B0F  00EA               	movwf	??_USBCtrlTrfOutHandler
  8117  0B10  0021               	movlb	1	; select bank1
  8118  0B11  0851               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8119  0B12  0086               	movwf	6
  8120  0B13  0187               	clrf	7
  8121  0B14  0020               	movlb	0	; select bank0
  8122  0B15  086A               	movf	??_USBCtrlTrfOutHandler,w
  8123  0B16  0081               	movwf	1
  8124                           
  8125                           ;usb_device.c: 2716: }
  8126  0B17  0008               	return
  8127  0B18                     i1l3387:	
  8128                           
  8129                           ;usb_device.c: 2717: else
  8130                           ;usb_device.c: 2718: {
  8131                           ;usb_device.c: 2719: BothEP0OutUOWNsSet = FALSE;
  8132  0B18  0021               	movlb	1	; select bank1
  8133  0B19  01CA               	clrf	_BothEP0OutUOWNsSet^(0+128)	;volatile
  8134  0B1A  0008               	return
  8135  0B1B                     __end_of_USBCtrlTrfOutHandler:	
  8136                           
  8137                           	psect	text44
  8138  02D9                     __ptext44:	
  8139 ;; *************** function _USBCtrlTrfRxService *****************
  8140 ;; Defined at:
  8141 ;;		line 2018 in file "../Microchip/USB/usb_device.c"
  8142 ;; Parameters:    Size  Location     Type
  8143 ;;		None
  8144 ;; Auto vars:     Size  Location     Type
  8145 ;;  byteToRead      1    9[BANK0 ] unsigned char 
  8146 ;;  i               1    8[BANK0 ] unsigned char 
  8147 ;; Return value:  Size  Location     Type
  8148 ;;                  1    wreg      void 
  8149 ;; Registers used:
  8150 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8151 ;; Tracked objects:
  8152 ;;		On entry : 0/0
  8153 ;;		On exit  : 0/0
  8154 ;;		Unchanged: 0/0
  8155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8157 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8158 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8159 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8160 ;;Total ram usage:        6 bytes
  8161 ;; Hardware stack levels used:    1
  8162 ;; Hardware stack levels required when called:    2
  8163 ;; This function calls:
  8164 ;;		_USBCtrlEPAllowStatusStage
  8165 ;;		_mySetLineCodingHandler
  8166 ;; This function is called by:
  8167 ;;		_USBCtrlTrfOutHandler
  8168 ;; This function uses a non-reentrant model
  8169 ;;
  8170                           
  8171                           
  8172                           ;psect for function _USBCtrlTrfRxService
  8173  02D9                     _USBCtrlTrfRxService:	
  8174                           
  8175                           ;usb_device.c: 2020: BYTE byteToRead;
  8176                           ;usb_device.c: 2021: BYTE i;
  8177                           ;usb_device.c: 2025: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  8178                           
  8179                           ;incstack = 0
  8180                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8181  02D9  0021               	movlb	1	; select bank1
  8182  02DA  0852               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  8183  02DB  0086               	movwf	6
  8184  02DC  0187               	clrf	7
  8185  02DD  3F41               	moviw [1]fsr1
  8186  02DE  0020               	movlb	0	; select bank0
  8187  02DF  00E9               	movwf	USBCtrlTrfRxService@byteToRead
  8188                           
  8189                           ;usb_device.c: 2031: if(byteToRead > outPipes[0].wCount.Val)
  8190  02E0  0869               	movf	USBCtrlTrfRxService@byteToRead,w
  8191  02E1  00E4               	movwf	??_USBCtrlTrfRxService
  8192  02E2  01E5               	clrf	??_USBCtrlTrfRxService+1
  8193  02E3  0865               	movf	??_USBCtrlTrfRxService+1,w
  8194  02E4  0021               	movlb	1	; select bank1
  8195  02E5  0224               	subwf	((_outPipes+1)^(0+128)+3),w	;volatile
  8196  02E6  1D03               	skipz
  8197  02E7  2AEC               	goto	u289_25
  8198  02E8  0020               	movlb	0	; select bank0
  8199  02E9  0864               	movf	??_USBCtrlTrfRxService,w
  8200  02EA  0021               	movlb	1	; select bank1
  8201  02EB  0223               	subwf	(_outPipes^(0+128)+3),w	;volatile
  8202  02EC                     u289_25:	
  8203  02EC  1803               	skipnc
  8204  02ED  2AF3               	goto	i1l3235
  8205                           
  8206                           ;usb_device.c: 2032: {
  8207                           ;usb_device.c: 2033: byteToRead = outPipes[0].wCount.Val;
  8208  02EE  0823               	movf	(_outPipes^(0+128)+3),w	;volatile
  8209  02EF  0020               	movlb	0	; select bank0
  8210  02F0  00E4               	movwf	??_USBCtrlTrfRxService
  8211  02F1  0864               	movf	??_USBCtrlTrfRxService,w
  8212  02F2  00E9               	movwf	USBCtrlTrfRxService@byteToRead
  8213  02F3                     i1l3235:	
  8214                           
  8215                           ;usb_device.c: 2034: }
  8216                           ;usb_device.c: 2036: outPipes[0].wCount.Val = outPipes[0].wCount.Val - byteToRead;
  8217  02F3  3003               	movlw	3
  8218  02F4  3EA0               	addlw	(low (_outPipes| 0))& (0+255)
  8219  02F5  0086               	movwf	6
  8220  02F6  0187               	clrf	7
  8221  02F7  0020               	movlb	0	; select bank0
  8222  02F8  0869               	movf	USBCtrlTrfRxService@byteToRead,w
  8223  02F9  00E4               	movwf	??_USBCtrlTrfRxService
  8224  02FA  01E5               	clrf	??_USBCtrlTrfRxService+1
  8225  02FB  09E4               	comf	??_USBCtrlTrfRxService,f
  8226  02FC  09E5               	comf	??_USBCtrlTrfRxService+1,f
  8227  02FD  0AE4               	incf	??_USBCtrlTrfRxService,f
  8228  02FE  1903               	skipnz
  8229  02FF  0AE5               	incf	??_USBCtrlTrfRxService+1,f
  8230  0300  3F40               	moviw [0]fsr1
  8231  0301  0764               	addwf	??_USBCtrlTrfRxService,w
  8232  0302  00E6               	movwf	??_USBCtrlTrfRxService+2
  8233  0303  3F41               	moviw [1]fsr1
  8234  0304  3D65               	addwfc	??_USBCtrlTrfRxService+1,w
  8235  0305  00E7               	movwf	??_USBCtrlTrfRxService+3
  8236  0306  0866               	movf	??_USBCtrlTrfRxService+2,w
  8237  0307  0021               	movlb	1	; select bank1
  8238  0308  00A3               	movwf	(_outPipes^(0+128)+3)	;volatile
  8239  0309  0020               	movlb	0	; select bank0
  8240  030A  0867               	movf	??_USBCtrlTrfRxService+3,w
  8241  030B  0021               	movlb	1	; select bank1
  8242  030C  00A4               	movwf	((_outPipes+1)^(0+128)+3)	;volatile
  8243                           
  8244                           ;usb_device.c: 2040: for(i=0;i<byteToRead;i++)
  8245  030D  0020               	movlb	0	; select bank0
  8246  030E  01E8               	clrf	USBCtrlTrfRxService@i
  8247  030F                     i1l3245:	
  8248  030F  0869               	movf	USBCtrlTrfRxService@byteToRead,w
  8249  0310  0268               	subwf	USBCtrlTrfRxService@i,w
  8250  0311  1803               	btfsc	3,0
  8251  0312  2B2C               	goto	i1l3247
  8252                           
  8253                           ;usb_device.c: 2041: {
  8254                           ;usb_device.c: 2042: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  8255  0313  0868               	movf	USBCtrlTrfRxService@i,w
  8256  0314  3E58               	addlw	88
  8257  0315  0086               	movwf	6
  8258  0316  0187               	clrf	7
  8259  0317  0801               	movf	1,w
  8260  0318  00E4               	movwf	??_USBCtrlTrfRxService
  8261  0319  0021               	movlb	1	; select bank1
  8262  031A  0820               	movf	_outPipes^(0+128),w	;volatile
  8263  031B  0086               	movwf	6
  8264  031C  3001               	movlw	1	; select bank2/3
  8265  031D  0087               	movwf	7
  8266  031E  0020               	movlb	0	; select bank0
  8267  031F  0864               	movf	??_USBCtrlTrfRxService,w
  8268  0320  0081               	movwf	1
  8269  0321  3001               	movlw	1
  8270  0322  00E4               	movwf	??_USBCtrlTrfRxService
  8271  0323  0864               	movf	??_USBCtrlTrfRxService,w
  8272  0324  0021               	movlb	1	; select bank1
  8273  0325  07A0               	addwf	_outPipes^(0+128),f	;volatile
  8274  0326  3001               	movlw	1
  8275  0327  0020               	movlb	0	; select bank0
  8276  0328  00E4               	movwf	??_USBCtrlTrfRxService
  8277  0329  0864               	movf	??_USBCtrlTrfRxService,w
  8278  032A  07E8               	addwf	USBCtrlTrfRxService@i,f
  8279  032B  2B0F               	goto	i1l3245
  8280  032C                     i1l3247:	
  8281                           
  8282                           ;usb_device.c: 2043: }
  8283                           ;usb_device.c: 2047: if(outPipes[0].wCount.Val > 0)
  8284  032C  0021               	movlb	1	; select bank1
  8285  032D  0823               	movf	(_outPipes^(0+128)+3),w	;volatile
  8286  032E  0424               	iorwf	((_outPipes+1)^(0+128)+3),w	;volatile
  8287  032F  1903               	btfsc	3,2
  8288  0330  2B65               	goto	i1l3259
  8289                           
  8290                           ;usb_device.c: 2048: {
  8291                           ;usb_device.c: 2049: pBDTEntryEP0OutNext->CNT = 8;
  8292  0331  3008               	movlw	8
  8293  0332  0020               	movlb	0	; select bank0
  8294  0333  00E4               	movwf	??_USBCtrlTrfRxService
  8295  0334  0021               	movlb	1	; select bank1
  8296  0335  0A51               	incf	_pBDTEntryEP0OutNext^(0+128),w
  8297  0336  0086               	movwf	6
  8298  0337  0187               	clrf	7
  8299  0338  0020               	movlb	0	; select bank0
  8300  0339  0864               	movf	??_USBCtrlTrfRxService,w
  8301  033A  0081               	movwf	1
  8302                           
  8303                           ;usb_device.c: 2050: pBDTEntryEP0OutNext->ADR = (((WORD)(&CtrlTrfData))& 0x7FFF);
  8304  033B  3058               	movlw	88
  8305  033C  00E4               	movwf	??_USBCtrlTrfRxService
  8306  033D  3000               	movlw	0
  8307  033E  00E5               	movwf	??_USBCtrlTrfRxService+1
  8308  033F  0021               	movlb	1	; select bank1
  8309  0340  0851               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8310  0341  3E02               	addlw	2
  8311  0342  0086               	movwf	6
  8312  0343  0187               	clrf	7
  8313  0344  0020               	movlb	0	; select bank0
  8314  0345  0864               	movf	??_USBCtrlTrfRxService,w
  8315  0346  3FC0               	movwi [0]fsr1
  8316  0347  0865               	movf	??_USBCtrlTrfRxService+1,w
  8317  0348  3FC1               	movwi [1]fsr1
  8318                           
  8319                           ;usb_device.c: 2051: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  8320  0349  0021               	movlb	1	; select bank1
  8321  034A  0852               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  8322  034B  0086               	movwf	6
  8323  034C  0187               	clrf	7
  8324  034D  1B01               	btfsc	1,6
  8325  034E  2B5A               	goto	i1l3257
  8326                           
  8327                           ;usb_device.c: 2052: {
  8328                           ;usb_device.c: 2053: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x40|(0x08 & 0x08);
  8329  034F  30C8               	movlw	200
  8330  0350  0020               	movlb	0	; select bank0
  8331  0351  00E4               	movwf	??_USBCtrlTrfRxService
  8332  0352  0021               	movlb	1	; select bank1
  8333  0353  0851               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8334  0354  0086               	movwf	6
  8335  0355  0187               	clrf	7
  8336  0356  0020               	movlb	0	; select bank0
  8337  0357  0864               	movf	??_USBCtrlTrfRxService,w
  8338  0358  0081               	movwf	1
  8339                           
  8340                           ;usb_device.c: 2054: }
  8341  0359  0008               	return
  8342  035A                     i1l3257:	
  8343                           
  8344                           ;usb_device.c: 2055: else
  8345                           ;usb_device.c: 2056: {
  8346                           ;usb_device.c: 2057: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|(0x08 & 0x08);
  8347  035A  3088               	movlw	136
  8348  035B  0020               	movlb	0	; select bank0
  8349  035C  00E4               	movwf	??_USBCtrlTrfRxService
  8350  035D  0021               	movlb	1	; select bank1
  8351  035E  0851               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8352  035F  0086               	movwf	6
  8353  0360  0187               	clrf	7
  8354  0361  0020               	movlb	0	; select bank0
  8355  0362  0864               	movf	??_USBCtrlTrfRxService,w
  8356  0363  0081               	movwf	1
  8357                           
  8358                           ;usb_device.c: 2058: }
  8359                           ;usb_device.c: 2059: }
  8360  0364  0008               	return
  8361  0365                     i1l3259:	
  8362                           
  8363                           ;usb_device.c: 2060: else
  8364                           ;usb_device.c: 2061: {
  8365                           ;usb_device.c: 2065: pBDTEntryEP0OutNext->CNT = 8;
  8366  0365  3008               	movlw	8
  8367  0366  0020               	movlb	0	; select bank0
  8368  0367  00E4               	movwf	??_USBCtrlTrfRxService
  8369  0368  0021               	movlb	1	; select bank1
  8370  0369  0A51               	incf	_pBDTEntryEP0OutNext^(0+128),w
  8371  036A  0086               	movwf	6
  8372  036B  0187               	clrf	7
  8373  036C  0020               	movlb	0	; select bank0
  8374  036D  0864               	movf	??_USBCtrlTrfRxService,w
  8375  036E  0081               	movwf	1
  8376                           
  8377                           ;usb_device.c: 2066: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  8378  036F  3050               	movlw	80
  8379  0370  00E4               	movwf	??_USBCtrlTrfRxService
  8380  0371  3000               	movlw	0
  8381  0372  00E5               	movwf	??_USBCtrlTrfRxService+1
  8382  0373  0021               	movlb	1	; select bank1
  8383  0374  0851               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8384  0375  3E02               	addlw	2
  8385  0376  0086               	movwf	6
  8386  0377  0187               	clrf	7
  8387  0378  0020               	movlb	0	; select bank0
  8388  0379  0864               	movf	??_USBCtrlTrfRxService,w
  8389  037A  3FC0               	movwi [0]fsr1
  8390  037B  0865               	movf	??_USBCtrlTrfRxService+1,w
  8391  037C  3FC1               	movwi [1]fsr1
  8392                           
  8393                           ;usb_device.c: 2070: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x04;
  8394  037D  3084               	movlw	132
  8395  037E  00E4               	movwf	??_USBCtrlTrfRxService
  8396  037F  0021               	movlb	1	; select bank1
  8397  0380  0851               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8398  0381  0086               	movwf	6
  8399  0382  0187               	clrf	7
  8400  0383  0020               	movlb	0	; select bank0
  8401  0384  0864               	movf	??_USBCtrlTrfRxService,w
  8402  0385  0081               	movwf	1
  8403                           
  8404                           ;usb_device.c: 2077: if(outPipes[0].pFunc != (0))
  8405  0386  0021               	movlb	1	; select bank1
  8406  0387  0825               	movf	(low ((_outPipes| 0+5)))^(0+128),w	;volatile
  8407  0388  0426               	iorwf	((low ((_outPipes| 0+5))+1))^(0+128),w	;volatile
  8408  0389  1903               	btfsc	3,2
  8409  038A  2B94               	goto	i1l3269
  8410                           
  8411                           ;usb_device.c: 2078: {
  8412                           ;usb_device.c: 2084: outPipes[0].pFunc();
  8413  038B  3005               	movlw	5
  8414  038C  3EA0               	addlw	(low (_outPipes| 0))& (0+255)
  8415  038D  0086               	movwf	6
  8416  038E  0187               	clrf	7
  8417  038F  3F41               	moviw [1]fsr1
  8418  0390  008A               	movwf	10
  8419  0391  3F40               	moviw [0]fsr1
  8420  0392  000A               	callw
  8421  0393  3182               	pagesel	$
  8422  0394                     i1l3269:	
  8423                           
  8424                           ;usb_device.c: 2089: }
  8425                           ;usb_device.c: 2090: outPipes[0].info.bits.busy = 0;
  8426  0394  0021               	movlb	1	; select bank1
  8427  0395  13A2               	bcf	(_outPipes^(0+128)+2),7	;volatile
  8428                           
  8429                           ;usb_device.c: 2104: if(USBDeferStatusStagePacket == FALSE)
  8430  0396  0848               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
  8431  0397  1D03               	btfss	3,2
  8432  0398  0008               	return
  8433                           
  8434                           ;usb_device.c: 2105: {
  8435                           ;usb_device.c: 2106: USBCtrlEPAllowStatusStage();
  8436  0399  318D  259F         	fcall	_USBCtrlEPAllowStatusStage
  8437  039B  0008               	return
  8438  039C                     __end_of_USBCtrlTrfRxService:	
  8439                           
  8440                           	psect	text45
  8441  0D9F                     __ptext45:	
  8442 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  8443 ;; Defined at:
  8444 ;;		line 1589 in file "../Microchip/USB/usb_device.c"
  8445 ;; Parameters:    Size  Location     Type
  8446 ;;		None
  8447 ;; Auto vars:     Size  Location     Type
  8448 ;;		None
  8449 ;; Return value:  Size  Location     Type
  8450 ;;                  1    wreg      void 
  8451 ;; Registers used:
  8452 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8453 ;; Tracked objects:
  8454 ;;		On entry : 0/0
  8455 ;;		On exit  : 0/0
  8456 ;;		Unchanged: 0/0
  8457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8460 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8461 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8462 ;;Total ram usage:        2 bytes
  8463 ;; Hardware stack levels used:    1
  8464 ;; This function calls:
  8465 ;;		Nothing
  8466 ;; This function is called by:
  8467 ;;		_USBDeviceTasks
  8468 ;;		_USBCtrlEPServiceComplete
  8469 ;;		_USBCtrlTrfRxService
  8470 ;; This function uses a non-reentrant model
  8471 ;;
  8472                           
  8473                           
  8474                           ;psect for function _USBCtrlEPAllowStatusStage
  8475  0D9F                     _USBCtrlEPAllowStatusStage:	
  8476                           
  8477                           ;usb_device.c: 1596: if(USBStatusStageEnabledFlag1 == FALSE)
  8478                           
  8479                           ;incstack = 0
  8480                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  8481  0D9F  0021               	movlb	1	; select bank1
  8482  0DA0  0847               	movf	_USBStatusStageEnabledFlag1^(0+128),w	;volatile
  8483  0DA1  1D03               	btfss	3,2
  8484  0DA2  0008               	return
  8485                           
  8486                           ;usb_device.c: 1597: {
  8487                           ;usb_device.c: 1598: USBStatusStageEnabledFlag1 = TRUE;
  8488  0DA3  3001               	movlw	1
  8489  0DA4  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8490  0DA5  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8491  0DA6  00C7               	movwf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  8492                           
  8493                           ;usb_device.c: 1599: if(USBStatusStageEnabledFlag2 == FALSE)
  8494  0DA7  0846               	movf	_USBStatusStageEnabledFlag2^(0+128),w	;volatile
  8495  0DA8  1D03               	btfss	3,2
  8496  0DA9  0008               	return
  8497                           
  8498                           ;usb_device.c: 1600: {
  8499                           ;usb_device.c: 1601: USBStatusStageEnabledFlag2 = TRUE;
  8500  0DAA  3001               	movlw	1
  8501  0DAB  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8502  0DAC  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8503  0DAD  00C6               	movwf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  8504                           
  8505                           ;usb_device.c: 1605: if(controlTransferState == 2)
  8506  0DAE  3002               	movlw	2
  8507  0DAF  064F               	xorwf	_controlTransferState^(0+128),w	;volatile
  8508  0DB0  1D03               	btfss	3,2
  8509  0DB1  2DBE               	goto	i1l2945
  8510                           
  8511                           ;usb_device.c: 1606: {
  8512                           ;usb_device.c: 1607: pBDTEntryIn[0]->CNT = 0;
  8513  0DB2  0A32               	incf	_pBDTEntryIn^(0+128),w
  8514  0DB3  0086               	movwf	6
  8515  0DB4  0187               	clrf	7
  8516  0DB5  0181               	clrf	1
  8517                           
  8518                           ;usb_device.c: 1608: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|(0x08 & 0x08);
  8519  0DB6  30C8               	movlw	200
  8520  0DB7  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8521  0DB8  0832               	movf	_pBDTEntryIn^(0+128),w
  8522  0DB9  0086               	movwf	6
  8523  0DBA  0187               	clrf	7
  8524  0DBB  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8525  0DBC  0081               	movwf	1
  8526                           
  8527                           ;usb_device.c: 1609: }
  8528  0DBD  0008               	return
  8529  0DBE                     i1l2945:	
  8530                           
  8531                           ;usb_device.c: 1610: else if(controlTransferState == 1)
  8532  0DBE  034F               	decf	_controlTransferState^(0+128),w	;volatile
  8533  0DBF  1D03               	btfss	3,2
  8534  0DC0  0008               	return
  8535                           
  8536                           ;usb_device.c: 1611: {
  8537                           ;usb_device.c: 1612: BothEP0OutUOWNsSet = FALSE;
  8538  0DC1  01CA               	clrf	_BothEP0OutUOWNsSet^(0+128)	;volatile
  8539                           
  8540                           ;usb_device.c: 1617: pBDTEntryEP0OutCurrent->CNT = 8;
  8541  0DC2  3008               	movlw	8
  8542  0DC3  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8543  0DC4  0A52               	incf	_pBDTEntryEP0OutCurrent^(0+128),w
  8544  0DC5  0086               	movwf	6
  8545  0DC6  0187               	clrf	7
  8546  0DC7  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8547  0DC8  0081               	movwf	1
  8548                           
  8549                           ;usb_device.c: 1618: pBDTEntryEP0OutCurrent->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  8550  0DC9  3050               	movlw	80
  8551  0DCA  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8552  0DCB  3000               	movlw	0
  8553  0DCC  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  8554  0DCD  0852               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  8555  0DCE  3E02               	addlw	2
  8556  0DCF  0086               	movwf	6
  8557  0DD0  0187               	clrf	7
  8558  0DD1  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8559  0DD2  3FC0               	movwi [0]fsr1
  8560  0DD3  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  8561  0DD4  3FC1               	movwi [1]fsr1
  8562                           
  8563                           ;usb_device.c: 1619: pBDTEntryEP0OutCurrent->STAT.Val = 0x80|0x04;
  8564  0DD5  3084               	movlw	132
  8565  0DD6  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8566  0DD7  0852               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  8567  0DD8  0086               	movwf	6
  8568  0DD9  0187               	clrf	7
  8569  0DDA  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8570  0DDB  0081               	movwf	1
  8571                           
  8572                           ;usb_device.c: 1620: BothEP0OutUOWNsSet = TRUE;
  8573  0DDC  3001               	movlw	1
  8574  0DDD  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8575  0DDE  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8576  0DDF  00CA               	movwf	_BothEP0OutUOWNsSet^(0+128)	;volatile
  8577                           
  8578                           ;usb_device.c: 1624: pBDTEntryEP0OutNext->CNT = 8;
  8579  0DE0  3008               	movlw	8
  8580  0DE1  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8581  0DE2  0A51               	incf	_pBDTEntryEP0OutNext^(0+128),w
  8582  0DE3  0086               	movwf	6
  8583  0DE4  0187               	clrf	7
  8584  0DE5  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8585  0DE6  0081               	movwf	1
  8586                           
  8587                           ;usb_device.c: 1625: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  8588  0DE7  3050               	movlw	80
  8589  0DE8  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8590  0DE9  3000               	movlw	0
  8591  0DEA  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  8592  0DEB  0851               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8593  0DEC  3E02               	addlw	2
  8594  0DED  0086               	movwf	6
  8595  0DEE  0187               	clrf	7
  8596  0DEF  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8597  0DF0  3FC0               	movwi [0]fsr1
  8598  0DF1  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  8599  0DF2  3FC1               	movwi [1]fsr1
  8600                           
  8601                           ;usb_device.c: 1626: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  8602  0DF3  3080               	movlw	128
  8603  0DF4  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8604  0DF5  0851               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8605  0DF6  0086               	movwf	6
  8606  0DF7  0187               	clrf	7
  8607  0DF8  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8608  0DF9  0081               	movwf	1
  8609  0DFA  0008               	return
  8610  0DFB                     __end_of_USBCtrlEPAllowStatusStage:	
  8611                           
  8612                           	psect	text46
  8613  0F8F                     __ptext46:	
  8614 ;; *************** function _USBCtrlTrfInHandler *****************
  8615 ;; Defined at:
  8616 ;;		line 2747 in file "../Microchip/USB/usb_device.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;		None
  8619 ;; Auto vars:     Size  Location     Type
  8620 ;;  lastDTS         1    6[BANK0 ] unsigned char 
  8621 ;; Return value:  Size  Location     Type
  8622 ;;                  1    wreg      void 
  8623 ;; Registers used:
  8624 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8625 ;; Tracked objects:
  8626 ;;		On entry : 0/0
  8627 ;;		On exit  : 0/0
  8628 ;;		Unchanged: 0/0
  8629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8631 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8632 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8633 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8634 ;;Total ram usage:        3 bytes
  8635 ;; Hardware stack levels used:    1
  8636 ;; Hardware stack levels required when called:    2
  8637 ;; This function calls:
  8638 ;;		_USBCtrlTrfTxService
  8639 ;;		_mySetLineCodingHandler
  8640 ;; This function is called by:
  8641 ;;		_USBCtrlEPService
  8642 ;; This function uses a non-reentrant model
  8643 ;;
  8644                           
  8645                           
  8646                           ;psect for function _USBCtrlTrfInHandler
  8647  0F8F                     _USBCtrlTrfInHandler:	
  8648                           
  8649                           ;usb_device.c: 2749: BYTE lastDTS;
  8650                           ;usb_device.c: 2751: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  8651                           
  8652                           ;incstack = 0
  8653                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8654  0F8F  0021               	movlb	1	; select bank1
  8655  0F90  0832               	movf	_pBDTEntryIn^(0+128),w
  8656  0F91  0086               	movwf	6
  8657  0F92  0187               	clrf	7
  8658  0F93  3000               	movlw	0
  8659  0F94  1B01               	btfsc	1,6
  8660  0F95  3001               	movlw	1
  8661  0F96  0020               	movlb	0	; select bank0
  8662  0F97  00E6               	movwf	USBCtrlTrfInHandler@lastDTS
  8663                           
  8664                           ;usb_device.c: 2754: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8665  0F98  3004               	movlw	4
  8666  0F99  00E4               	movwf	??_USBCtrlTrfInHandler
  8667  0F9A  0864               	movf	??_USBCtrlTrfInHandler,w
  8668  0F9B  0021               	movlb	1	; select bank1
  8669  0F9C  06B2               	xorwf	_pBDTEntryIn^(0+128),f
  8670                           
  8671                           ;usb_device.c: 2759: if(USBDeviceState == ADR_PENDING_STATE)
  8672  0F9D  3008               	movlw	8
  8673  0F9E  0653               	xorwf	_USBDeviceState^(0+128),w	;volatile
  8674  0F9F  1D03               	btfss	3,2
  8675  0FA0  2FB0               	goto	i1l3403
  8676                           
  8677                           ;usb_device.c: 2760: {
  8678                           ;usb_device.c: 2761: UADDR = SetupPkt.bDevADR.Val;
  8679  0FA1  0020               	movlb	0	; select bank0
  8680  0FA2  0852               	movf	82,w	;volatile
  8681  0FA3  003D               	movlb	29	; select bank29
  8682  0FA4  0096               	movwf	22	;volatile
  8683                           
  8684                           ;usb_device.c: 2762: if(UADDR != 0u)
  8685  0FA5  0816               	movf	22,w	;volatile
  8686  0FA6  1903               	btfsc	3,2
  8687  0FA7  2FAA               	goto	i1l3401
  8688                           
  8689                           ;usb_device.c: 2763: {
  8690                           ;usb_device.c: 2764: USBDeviceState=ADDRESS_STATE;
  8691  0FA8  3010               	movlw	16
  8692  0FA9  2FAB               	goto	L14
  8693  0FAA                     i1l3401:	
  8694                           ;usb_device.c: 2765: }
  8695                           
  8696                           
  8697                           ;usb_device.c: 2766: else
  8698                           ;usb_device.c: 2767: {
  8699                           ;usb_device.c: 2768: USBDeviceState=DEFAULT_STATE;
  8700  0FAA  3004               	movlw	4
  8701  0FAB                     L14:	
  8702  0FAB  0020               	movlb	0	; select bank0
  8703  0FAC  00E4               	movwf	??_USBCtrlTrfInHandler
  8704  0FAD  0864               	movf	??_USBCtrlTrfInHandler,w
  8705  0FAE  0021               	movlb	1	; select bank1
  8706  0FAF  00D3               	movwf	_USBDeviceState^(0+128)	;volatile
  8707  0FB0                     i1l3403:	
  8708                           
  8709                           ;usb_device.c: 2769: }
  8710                           ;usb_device.c: 2770: }
  8711                           ;usb_device.c: 2773: if(controlTransferState == 1)
  8712  0FB0  034F               	decf	_controlTransferState^(0+128),w	;volatile
  8713  0FB1  1D03               	btfss	3,2
  8714  0FB2  2FED               	goto	i1l326
  8715                           
  8716                           ;usb_device.c: 2774: {
  8717                           ;usb_device.c: 2775: pBDTEntryIn[0]->ADR = (((WORD)(CtrlTrfData))& 0x7FFF);
  8718  0FB3  3058               	movlw	88
  8719  0FB4  0020               	movlb	0	; select bank0
  8720  0FB5  00E4               	movwf	??_USBCtrlTrfInHandler
  8721  0FB6  3000               	movlw	0
  8722  0FB7  00E5               	movwf	??_USBCtrlTrfInHandler+1
  8723  0FB8  0021               	movlb	1	; select bank1
  8724  0FB9  0832               	movf	_pBDTEntryIn^(0+128),w
  8725  0FBA  3E02               	addlw	2
  8726  0FBB  0086               	movwf	6
  8727  0FBC  0187               	clrf	7
  8728  0FBD  0020               	movlb	0	; select bank0
  8729  0FBE  0864               	movf	??_USBCtrlTrfInHandler,w
  8730  0FBF  3FC0               	movwi [0]fsr1
  8731  0FC0  0865               	movf	??_USBCtrlTrfInHandler+1,w
  8732  0FC1  3FC1               	movwi [1]fsr1
  8733                           
  8734                           ;usb_device.c: 2776: USBCtrlTrfTxService();
  8735  0FC2  3187  2749  318F   	fcall	_USBCtrlTrfTxService
  8736                           
  8737                           ;usb_device.c: 2782: if(shortPacketStatus == 2)
  8738  0FC5  3002               	movlw	2
  8739  0FC6  0021               	movlb	1	; select bank1
  8740  0FC7  0650               	xorwf	_shortPacketStatus^(0+128),w	;volatile
  8741  0FC8  1D03               	btfss	3,2
  8742  0FC9  2FD5               	goto	i1l3413
  8743                           
  8744                           ;usb_device.c: 2783: {
  8745                           ;usb_device.c: 2786: pBDTEntryIn[0]->STAT.Val = 0x80|0x04;
  8746  0FCA  3084               	movlw	132
  8747  0FCB  0020               	movlb	0	; select bank0
  8748  0FCC  00E4               	movwf	??_USBCtrlTrfInHandler
  8749  0FCD  0021               	movlb	1	; select bank1
  8750  0FCE  0832               	movf	_pBDTEntryIn^(0+128),w
  8751  0FCF  0086               	movwf	6
  8752  0FD0  0187               	clrf	7
  8753  0FD1  0020               	movlb	0	; select bank0
  8754  0FD2  0864               	movf	??_USBCtrlTrfInHandler,w
  8755  0FD3  0081               	movwf	1
  8756                           
  8757                           ;usb_device.c: 2787: }
  8758  0FD4  0008               	return
  8759  0FD5                     i1l3413:	
  8760                           
  8761                           ;usb_device.c: 2788: else
  8762                           ;usb_device.c: 2789: {
  8763                           ;usb_device.c: 2790: if(lastDTS == 0)
  8764  0FD5  0020               	movlb	0	; select bank0
  8765  0FD6  0866               	movf	USBCtrlTrfInHandler@lastDTS,w
  8766  0FD7  1D03               	btfss	3,2
  8767  0FD8  2FE3               	goto	i1l3417
  8768                           
  8769                           ;usb_device.c: 2791: {
  8770                           ;usb_device.c: 2792: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|(0x08 & 0x08);
  8771  0FD9  30C8               	movlw	200
  8772  0FDA  00E4               	movwf	??_USBCtrlTrfInHandler
  8773  0FDB  0021               	movlb	1	; select bank1
  8774  0FDC  0832               	movf	_pBDTEntryIn^(0+128),w
  8775  0FDD  0086               	movwf	6
  8776  0FDE  0187               	clrf	7
  8777  0FDF  0020               	movlb	0	; select bank0
  8778  0FE0  0864               	movf	??_USBCtrlTrfInHandler,w
  8779  0FE1  0081               	movwf	1
  8780                           
  8781                           ;usb_device.c: 2793: }
  8782  0FE2  0008               	return
  8783  0FE3                     i1l3417:	
  8784                           
  8785                           ;usb_device.c: 2794: else
  8786                           ;usb_device.c: 2795: {
  8787                           ;usb_device.c: 2796: pBDTEntryIn[0]->STAT.Val = 0x80|0x00|(0x08 & 0x08);
  8788  0FE3  3088               	movlw	136
  8789  0FE4  00E4               	movwf	??_USBCtrlTrfInHandler
  8790  0FE5  0021               	movlb	1	; select bank1
  8791  0FE6  0832               	movf	_pBDTEntryIn^(0+128),w
  8792  0FE7  0086               	movwf	6
  8793  0FE8  0187               	clrf	7
  8794  0FE9  0020               	movlb	0	; select bank0
  8795  0FEA  0864               	movf	??_USBCtrlTrfInHandler,w
  8796  0FEB  0081               	movwf	1
  8797                           
  8798                           ;usb_device.c: 2797: }
  8799                           ;usb_device.c: 2798: }
  8800                           ;usb_device.c: 2799: }
  8801  0FEC  0008               	return
  8802  0FED                     i1l326:	
  8803                           
  8804                           ;usb_device.c: 2800: else
  8805                           ;usb_device.c: 2801: {
  8806                           ;usb_device.c: 2805: if(outPipes[0].info.bits.busy == 1)
  8807  0FED  1FA2               	btfss	(_outPipes^(0+128)+2),7	;volatile
  8808  0FEE  2FFE               	goto	i1l3425
  8809                           
  8810                           ;usb_device.c: 2806: {
  8811                           ;usb_device.c: 2807: if(outPipes[0].pFunc != (0))
  8812  0FEF  0825               	movf	(low ((_outPipes| 0+5)))^(0+128),w	;volatile
  8813  0FF0  0426               	iorwf	((low ((_outPipes| 0+5))+1))^(0+128),w	;volatile
  8814  0FF1  1903               	btfsc	3,2
  8815  0FF2  2FFC               	goto	i1l3423
  8816                           
  8817                           ;usb_device.c: 2808: {
  8818                           ;usb_device.c: 2809: outPipes[0].pFunc();
  8819  0FF3  3005               	movlw	5
  8820  0FF4  3EA0               	addlw	(low (_outPipes| 0))& (0+255)
  8821  0FF5  0086               	movwf	6
  8822  0FF6  0187               	clrf	7
  8823  0FF7  3F41               	moviw [1]fsr1
  8824  0FF8  008A               	movwf	10
  8825  0FF9  3F40               	moviw [0]fsr1
  8826  0FFA  000A               	callw
  8827  0FFB  318F               	pagesel	$
  8828  0FFC                     i1l3423:	
  8829                           
  8830                           ;usb_device.c: 2810: }
  8831                           ;usb_device.c: 2811: outPipes[0].info.bits.busy = 0;
  8832  0FFC  0021               	movlb	1	; select bank1
  8833  0FFD  13A2               	bcf	(_outPipes^(0+128)+2),7	;volatile
  8834  0FFE                     i1l3425:	
  8835                           
  8836                           ;usb_device.c: 2812: }
  8837                           ;usb_device.c: 2814: controlTransferState = 0;
  8838  0FFE  01CF               	clrf	_controlTransferState^(0+128)	;volatile
  8839  0FFF  0008               	return
  8840  1000                     __end_of_USBCtrlTrfInHandler:	
  8841                           
  8842                           	psect	text47
  8843  0B1B                     __ptext47:	
  8844 ;; *************** function _mySetLineCodingHandler *****************
  8845 ;; Defined at:
  8846 ;;		line 101 in file "../main.c"
  8847 ;; Parameters:    Size  Location     Type
  8848 ;;		None
  8849 ;; Auto vars:     Size  Location     Type
  8850 ;;  dwBaud          4    0[BANK0 ] struct .
  8851 ;; Return value:  Size  Location     Type
  8852 ;;                  1    wreg      void 
  8853 ;; Registers used:
  8854 ;;		wreg, status,2, status,0, pclath, cstack
  8855 ;; Tracked objects:
  8856 ;;		On entry : 0/0
  8857 ;;		On exit  : 0/0
  8858 ;;		Unchanged: 0/0
  8859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8861 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8863 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8864 ;;Total ram usage:        4 bytes
  8865 ;; Hardware stack levels used:    1
  8866 ;; Hardware stack levels required when called:    1
  8867 ;; This function calls:
  8868 ;;		___lldiv
  8869 ;; This function is called by:
  8870 ;;		_USBCheckCDCRequest
  8871 ;;		_USBCtrlTrfRxService
  8872 ;;		_USBCtrlTrfInHandler
  8873 ;; This function uses a non-reentrant model
  8874 ;;
  8875                           
  8876                           
  8877                           ;psect for function _mySetLineCodingHandler
  8878  0B1B                     _mySetLineCodingHandler:	
  8879                           
  8880                           ;main.c: 103: if(cdc_notice.GetLineCoding.dwDTERate.Val>115200);
  8881                           
  8882                           ;incstack = 0
  8883                           ; Regs used in _mySetLineCodingHandler: [wreg+status,2+status,0+pclath+cstack]
  8884  0B1B  0022               	movlb	2	; select bank2
  8885  0B1C  082A               	movf	42,w	;volatile
  8886  0B1D  1D03               	btfss	3,2
  8887  0B1E  0008               	return
  8888  0B1F  3001               	movlw	1
  8889  0B20  0227               	subwf	39,w	;volatile
  8890  0B21  30C2               	movlw	194
  8891  0B22  3B28               	subwfb	40,w	;volatile
  8892  0B23  3001               	movlw	1
  8893  0B24  3B29               	subwfb	41,w	;volatile
  8894  0B25  1803               	btfsc	3,0
  8895  0B26  0008               	return
  8896                           
  8897                           ;main.c: 104: else
  8898                           ;main.c: 105: {
  8899                           ;main.c: 107: {line_coding.dwDTERate.Val=cdc_notice.GetLineCoding.dwDTERate.Val;};
  8900  0B27  082A               	movf	42,w	;volatile
  8901  0B28  00A3               	movwf	35
  8902  0B29  0829               	movf	41,w	;volatile
  8903  0B2A  00A2               	movwf	34
  8904  0B2B  0828               	movf	40,w	;volatile
  8905  0B2C  00A1               	movwf	33
  8906  0B2D  0827               	movf	39,w	;volatile
  8907  0B2E  00A0               	movwf	32
  8908                           
  8909                           ;main.c: 109: DWORD_VAL dwBaud;
  8910                           ;main.c: 110: dwBaud.Val=(DWORD) (48000000/4)/line_coding.dwDTERate.Val-1;
  8911  0B2F  0823               	movf	35,w
  8912  0B30  00F3               	movwf	___lldiv@divisor+3
  8913  0B31  0822               	movf	34,w
  8914  0B32  00F2               	movwf	___lldiv@divisor+2
  8915  0B33  0821               	movf	33,w
  8916  0B34  00F1               	movwf	___lldiv@divisor+1
  8917  0B35  0820               	movf	32,w
  8918  0B36  00F0               	movwf	___lldiv@divisor
  8919  0B37  3000               	movlw	0
  8920  0B38  00F7               	movwf	___lldiv@dividend+3
  8921  0B39  30B7               	movlw	183
  8922  0B3A  00F6               	movwf	___lldiv@dividend+2
  8923  0B3B  301B               	movlw	27
  8924  0B3C  00F5               	movwf	___lldiv@dividend+1
  8925  0B3D  3000               	movlw	0
  8926  0B3E  00F4               	movwf	___lldiv@dividend
  8927  0B3F  318D  254D         	fcall	___lldiv
  8928  0B41  30FF               	movlw	255
  8929  0B42  0770               	addwf	?___lldiv,w
  8930  0B43  0020               	movlb	0	; select bank0
  8931  0B44  00E0               	movwf	mySetLineCodingHandler@dwBaud
  8932  0B45  30FF               	movlw	255
  8933  0B46  3D71               	addwfc	?___lldiv+1,w
  8934  0B47  00E1               	movwf	mySetLineCodingHandler@dwBaud+1
  8935  0B48  30FF               	movlw	255
  8936  0B49  3D72               	addwfc	?___lldiv+2,w
  8937  0B4A  00E2               	movwf	mySetLineCodingHandler@dwBaud+2
  8938  0B4B  30FF               	movlw	255
  8939  0B4C  3D73               	addwfc	?___lldiv+3,w
  8940  0B4D  00E3               	movwf	mySetLineCodingHandler@dwBaud+3
  8941                           
  8942                           ;main.c: 111: SPBRGL=dwBaud.v[0];
  8943  0B4E  0860               	movf	mySetLineCodingHandler@dwBaud,w
  8944  0B4F  0023               	movlb	3	; select bank3
  8945  0B50  009B               	movwf	27	;volatile
  8946                           
  8947                           ;main.c: 112: SPBRGH=dwBaud.v[1];
  8948  0B51  0020               	movlb	0	; select bank0
  8949  0B52  0861               	movf	mySetLineCodingHandler@dwBaud+1,w
  8950  0B53  0023               	movlb	3	; select bank3
  8951  0B54  009C               	movwf	28	;volatile
  8952  0B55  0008               	return
  8953  0B56                     __end_of_mySetLineCodingHandler:	
  8954                           
  8955                           	psect	text48
  8956  0D4D                     __ptext48:	
  8957 ;; *************** function ___lldiv *****************
  8958 ;; Defined at:
  8959 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  8960 ;; Parameters:    Size  Location     Type
  8961 ;;  divisor         4    0[COMMON] unsigned long 
  8962 ;;  dividend        4    4[COMMON] unsigned long 
  8963 ;; Auto vars:     Size  Location     Type
  8964 ;;  quotient        4    9[COMMON] unsigned long 
  8965 ;;  counter         1   13[COMMON] unsigned char 
  8966 ;; Return value:  Size  Location     Type
  8967 ;;                  4    0[COMMON] unsigned long 
  8968 ;; Registers used:
  8969 ;;		wreg, status,2, status,0
  8970 ;; Tracked objects:
  8971 ;;		On entry : 0/0
  8972 ;;		On exit  : 0/0
  8973 ;;		Unchanged: 0/0
  8974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8975 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8976 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8977 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8978 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8979 ;;Total ram usage:       14 bytes
  8980 ;; Hardware stack levels used:    1
  8981 ;; This function calls:
  8982 ;;		Nothing
  8983 ;; This function is called by:
  8984 ;;		_mySetLineCodingHandler
  8985 ;; This function uses a non-reentrant model
  8986 ;;
  8987                           
  8988                           
  8989                           ;psect for function ___lldiv
  8990  0D4D                     ___lldiv:	
  8991                           
  8992                           ;incstack = 0
  8993                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8994  0D4D  3000               	movlw	0
  8995  0D4E  00FC               	movwf	___lldiv@quotient+3
  8996  0D4F  3000               	movlw	0
  8997  0D50  00FB               	movwf	___lldiv@quotient+2
  8998  0D51  3000               	movlw	0
  8999  0D52  00FA               	movwf	___lldiv@quotient+1
  9000  0D53  3000               	movlw	0
  9001  0D54  00F9               	movwf	___lldiv@quotient
  9002  0D55  0873               	movf	___lldiv@divisor+3,w
  9003  0D56  0472               	iorwf	___lldiv@divisor+2,w
  9004  0D57  0471               	iorwf	___lldiv@divisor+1,w
  9005  0D58  0470               	iorwf	___lldiv@divisor,w
  9006  0D59  1903               	skipnz
  9007  0D5A  2D96               	goto	i1l2927
  9008  0D5B  01FD               	clrf	___lldiv@counter
  9009  0D5C  0AFD               	incf	___lldiv@counter,f
  9010  0D5D                     i1l2913:	
  9011  0D5D  1BF3               	btfsc	___lldiv@divisor+3,7
  9012  0D5E  2D6B               	goto	i1l2915
  9013  0D5F  3001               	movlw	1
  9014  0D60                     u239_25:	
  9015  0D60  35F0               	lslf	___lldiv@divisor,f
  9016  0D61  0DF1               	rlf	___lldiv@divisor+1,f
  9017  0D62  0DF2               	rlf	___lldiv@divisor+2,f
  9018  0D63  0DF3               	rlf	___lldiv@divisor+3,f
  9019  0D64  0B89               	decfsz	9,f
  9020  0D65  2D60               	goto	u239_25
  9021  0D66  3001               	movlw	1
  9022  0D67  00F8               	movwf	??___lldiv
  9023  0D68  0878               	movf	??___lldiv,w
  9024  0D69  07FD               	addwf	___lldiv@counter,f
  9025  0D6A  2D5D               	goto	i1l2913
  9026  0D6B                     i1l2915:	
  9027  0D6B  3001               	movlw	1
  9028  0D6C                     u241_25:	
  9029  0D6C  35F9               	lslf	___lldiv@quotient,f
  9030  0D6D  0DFA               	rlf	___lldiv@quotient+1,f
  9031  0D6E  0DFB               	rlf	___lldiv@quotient+2,f
  9032  0D6F  0DFC               	rlf	___lldiv@quotient+3,f
  9033  0D70  0B89               	decfsz	9,f
  9034  0D71  2D6C               	goto	u241_25
  9035  0D72  0873               	movf	___lldiv@divisor+3,w
  9036  0D73  0277               	subwf	___lldiv@dividend+3,w
  9037  0D74  1D03               	skipz
  9038  0D75  2D80               	goto	u242_25
  9039  0D76  0872               	movf	___lldiv@divisor+2,w
  9040  0D77  0276               	subwf	___lldiv@dividend+2,w
  9041  0D78  1D03               	skipz
  9042  0D79  2D80               	goto	u242_25
  9043  0D7A  0871               	movf	___lldiv@divisor+1,w
  9044  0D7B  0275               	subwf	___lldiv@dividend+1,w
  9045  0D7C  1D03               	skipz
  9046  0D7D  2D80               	goto	u242_25
  9047  0D7E  0870               	movf	___lldiv@divisor,w
  9048  0D7F  0274               	subwf	___lldiv@dividend,w
  9049  0D80                     u242_25:	
  9050  0D80  1C03               	skipc
  9051  0D81  2D8B               	goto	i1l2923
  9052  0D82  0870               	movf	___lldiv@divisor,w
  9053  0D83  02F4               	subwf	___lldiv@dividend,f
  9054  0D84  0871               	movf	___lldiv@divisor+1,w
  9055  0D85  3BF5               	subwfb	___lldiv@dividend+1,f
  9056  0D86  0872               	movf	___lldiv@divisor+2,w
  9057  0D87  3BF6               	subwfb	___lldiv@dividend+2,f
  9058  0D88  0873               	movf	___lldiv@divisor+3,w
  9059  0D89  3BF7               	subwfb	___lldiv@dividend+3,f
  9060  0D8A  1479               	bsf	___lldiv@quotient,0
  9061  0D8B                     i1l2923:	
  9062  0D8B  3001               	movlw	1
  9063  0D8C                     u243_25:	
  9064  0D8C  36F3               	lsrf	___lldiv@divisor+3,f
  9065  0D8D  0CF2               	rrf	___lldiv@divisor+2,f
  9066  0D8E  0CF1               	rrf	___lldiv@divisor+1,f
  9067  0D8F  0CF0               	rrf	___lldiv@divisor,f
  9068  0D90  0B89               	decfsz	9,f
  9069  0D91  2D8C               	goto	u243_25
  9070  0D92  3001               	movlw	1
  9071  0D93  02FD               	subwf	___lldiv@counter,f
  9072  0D94  1D03               	btfss	3,2
  9073  0D95  2D6B               	goto	i1l2915
  9074  0D96                     i1l2927:	
  9075  0D96  087C               	movf	___lldiv@quotient+3,w
  9076  0D97  00F3               	movwf	?___lldiv+3
  9077  0D98  087B               	movf	___lldiv@quotient+2,w
  9078  0D99  00F2               	movwf	?___lldiv+2
  9079  0D9A  087A               	movf	___lldiv@quotient+1,w
  9080  0D9B  00F1               	movwf	?___lldiv+1
  9081  0D9C  0879               	movf	___lldiv@quotient,w
  9082  0D9D  00F0               	movwf	?___lldiv
  9083  0D9E  0008               	return
  9084  0D9F                     __end_of___lldiv:	
  9085                           
  9086                           	psect	text49
  9087  0749                     __ptext49:	
  9088 ;; *************** function _USBCtrlTrfTxService *****************
  9089 ;; Defined at:
  9090 ;;		line 1937 in file "../Microchip/USB/usb_device.c"
  9091 ;; Parameters:    Size  Location     Type
  9092 ;;		None
  9093 ;; Auto vars:     Size  Location     Type
  9094 ;;  byteToSend      1    4[COMMON] unsigned char 
  9095 ;; Return value:  Size  Location     Type
  9096 ;;                  1    wreg      void 
  9097 ;; Registers used:
  9098 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  9099 ;; Tracked objects:
  9100 ;;		On entry : 0/0
  9101 ;;		On exit  : 0/0
  9102 ;;		Unchanged: 0/0
  9103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9105 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9106 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9107 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9108 ;;Total ram usage:        5 bytes
  9109 ;; Hardware stack levels used:    1
  9110 ;; This function calls:
  9111 ;;		Nothing
  9112 ;; This function is called by:
  9113 ;;		_USBCtrlEPAllowDataStage
  9114 ;;		_USBCtrlTrfInHandler
  9115 ;; This function uses a non-reentrant model
  9116 ;;
  9117                           
  9118                           
  9119                           ;psect for function _USBCtrlTrfTxService
  9120  0749                     _USBCtrlTrfTxService:	
  9121                           
  9122                           ;usb_device.c: 1939: BYTE byteToSend;
  9123                           ;usb_device.c: 1943: byteToSend = 8;
  9124                           
  9125                           ;incstack = 0
  9126                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  9127  0749  3008               	movlw	8
  9128  074A  00F0               	movwf	??_USBCtrlTrfTxService
  9129  074B  0870               	movf	??_USBCtrlTrfTxService,w
  9130  074C  00F4               	movwf	USBCtrlTrfTxService@byteToSend
  9131                           
  9132                           ;usb_device.c: 1944: if(inPipes[0].wCount.Val < (BYTE)8)
  9133  074D  3000               	movlw	0
  9134  074E  0021               	movlb	1	; select bank1
  9135  074F  022B               	subwf	((_inPipes+1)^(0+128)+3),w	;volatile
  9136  0750  3008               	movlw	8
  9137  0751  1903               	skipnz
  9138  0752  022A               	subwf	(_inPipes^(0+128)+3),w	;volatile
  9139  0753  1803               	skipnc
  9140  0754  2F65               	goto	i1l2869
  9141                           
  9142                           ;usb_device.c: 1945: {
  9143                           ;usb_device.c: 1946: byteToSend = inPipes[0].wCount.Val;
  9144  0755  082A               	movf	(_inPipes^(0+128)+3),w	;volatile
  9145  0756  00F0               	movwf	??_USBCtrlTrfTxService
  9146  0757  0870               	movf	??_USBCtrlTrfTxService,w
  9147  0758  00F4               	movwf	USBCtrlTrfTxService@byteToSend
  9148                           
  9149                           ;usb_device.c: 1953: if(shortPacketStatus == 0)
  9150  0759  0850               	movf	_shortPacketStatus^(0+128),w	;volatile
  9151  075A  1D03               	btfss	3,2
  9152  075B  2F5E               	goto	i1l2865
  9153                           
  9154                           ;usb_device.c: 1954: {
  9155                           ;usb_device.c: 1955: shortPacketStatus = 1;
  9156  075C  3001               	movlw	1
  9157  075D  2F62               	goto	L15
  9158  075E                     i1l2865:	
  9159                           ;usb_device.c: 1956: }
  9160                           
  9161                           
  9162                           ;usb_device.c: 1957: else if(shortPacketStatus == 1)
  9163  075E  0350               	decf	_shortPacketStatus^(0+128),w	;volatile
  9164  075F  1D03               	btfss	3,2
  9165  0760  2F65               	goto	i1l2869
  9166                           
  9167                           ;usb_device.c: 1958: {
  9168                           ;usb_device.c: 1959: shortPacketStatus = 2;
  9169  0761  3002               	movlw	2
  9170  0762                     L15:	
  9171  0762  00F0               	movwf	??_USBCtrlTrfTxService
  9172  0763  0870               	movf	??_USBCtrlTrfTxService,w
  9173  0764  00D0               	movwf	_shortPacketStatus^(0+128)	;volatile
  9174  0765                     i1l2869:	
  9175                           
  9176                           ;usb_device.c: 1960: }
  9177                           ;usb_device.c: 1961: }
  9178                           ;usb_device.c: 1965: inPipes[0].wCount.Val = inPipes[0].wCount.Val - byteToSend;
  9179  0765  3003               	movlw	3
  9180  0766  3EA7               	addlw	(low (_inPipes| 0))& (0+255)
  9181  0767  0086               	movwf	6
  9182  0768  0187               	clrf	7
  9183  0769  0874               	movf	USBCtrlTrfTxService@byteToSend,w
  9184  076A  00F0               	movwf	??_USBCtrlTrfTxService
  9185  076B  01F1               	clrf	??_USBCtrlTrfTxService+1
  9186  076C  09F0               	comf	??_USBCtrlTrfTxService,f
  9187  076D  09F1               	comf	??_USBCtrlTrfTxService+1,f
  9188  076E  0AF0               	incf	??_USBCtrlTrfTxService,f
  9189  076F  1903               	skipnz
  9190  0770  0AF1               	incf	??_USBCtrlTrfTxService+1,f
  9191  0771  3F40               	moviw [0]fsr1
  9192  0772  0770               	addwf	??_USBCtrlTrfTxService,w
  9193  0773  00F2               	movwf	??_USBCtrlTrfTxService+2
  9194  0774  3F41               	moviw [1]fsr1
  9195  0775  3D71               	addwfc	??_USBCtrlTrfTxService+1,w
  9196  0776  00F3               	movwf	??_USBCtrlTrfTxService+3
  9197  0777  0872               	movf	??_USBCtrlTrfTxService+2,w
  9198  0778  00AA               	movwf	(_inPipes^(0+128)+3)	;volatile
  9199  0779  0873               	movf	??_USBCtrlTrfTxService+3,w
  9200  077A  00AB               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  9201                           
  9202                           ;usb_device.c: 1970: pBDTEntryIn[0]->CNT = byteToSend;
  9203  077B  0874               	movf	USBCtrlTrfTxService@byteToSend,w
  9204  077C  00F0               	movwf	??_USBCtrlTrfTxService
  9205  077D  0A32               	incf	_pBDTEntryIn^(0+128),w
  9206  077E  0086               	movwf	6
  9207  077F  0187               	clrf	7
  9208  0780  0870               	movf	??_USBCtrlTrfTxService,w
  9209  0781  0081               	movwf	1
  9210                           
  9211                           ;usb_device.c: 1974: pDst = (volatile BYTE*)CtrlTrfData;
  9212  0782  3058               	movlw	88
  9213  0783  00F0               	movwf	??_USBCtrlTrfTxService
  9214  0784  0870               	movf	??_USBCtrlTrfTxService,w
  9215  0785  00CE               	movwf	_pDst^(0+128)
  9216                           
  9217                           ;usb_device.c: 1975: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  9218  0786  1C29               	btfss	(_inPipes^(0+128)+2),0	;volatile
  9219  0787  2F9E               	goto	i1l2887
  9220  0788  2FB7               	goto	i1l2897
  9221  0789                     i1l2879:	
  9222                           ;usb_device.c: 1976: {
  9223                           ;usb_device.c: 1977: while(byteToSend)
  9224                           
  9225                           
  9226                           ;usb_device.c: 1978: {
  9227                           ;usb_device.c: 1979: *pDst++ = *inPipes[0].pSrc.bRom++;
  9228  0789  0827               	movf	_inPipes^(0+128),w	;volatile
  9229  078A  0084               	movwf	4
  9230  078B  0828               	movf	(_inPipes+1)^(0+128),w	;volatile
  9231  078C  0085               	movwf	5
  9232  078D  0800               	movf	0,w	;code access
  9233  078E  00F0               	movwf	??_USBCtrlTrfTxService
  9234  078F  084E               	movf	_pDst^(0+128),w
  9235  0790  0086               	movwf	6
  9236  0791  0187               	clrf	7
  9237  0792  0870               	movf	??_USBCtrlTrfTxService,w
  9238  0793  0081               	movwf	1
  9239  0794  3001               	movlw	1
  9240  0795  07A7               	addwf	_inPipes^(0+128),f	;volatile
  9241  0796  3000               	movlw	0
  9242  0797  3DA8               	addwfc	(_inPipes+1)^(0+128),f	;volatile
  9243  0798  3001               	movlw	1
  9244  0799  00F0               	movwf	??_USBCtrlTrfTxService
  9245  079A  0870               	movf	??_USBCtrlTrfTxService,w
  9246  079B  07CE               	addwf	_pDst^(0+128),f
  9247                           
  9248                           ;usb_device.c: 1980: byteToSend--;
  9249  079C  3001               	movlw	1
  9250  079D  02F4               	subwf	USBCtrlTrfTxService@byteToSend,f
  9251  079E                     i1l2887:	
  9252  079E  0874               	movf	USBCtrlTrfTxService@byteToSend,w
  9253  079F  1903               	btfsc	3,2
  9254  07A0  0008               	return
  9255  07A1  2F89               	goto	i1l2879
  9256  07A2                     i1l2889:	
  9257                           ;usb_device.c: 1983: else
  9258                           ;usb_device.c: 1984: {
  9259                           ;usb_device.c: 1985: while(byteToSend)
  9260                           
  9261                           ;usb_device.c: 1981: }
  9262                           ;usb_device.c: 1982: }
  9263                           
  9264                           
  9265                           ;usb_device.c: 1986: {
  9266                           ;usb_device.c: 1987: *pDst++ = *inPipes[0].pSrc.bRam++;
  9267  07A2  0827               	movf	_inPipes^(0+128),w	;volatile
  9268  07A3  0084               	movwf	4
  9269  07A4  0828               	movf	(_inPipes+1)^(0+128),w	;volatile
  9270  07A5  0085               	movwf	5
  9271  07A6  0800               	movf	0,w	;code access
  9272  07A7  00F0               	movwf	??_USBCtrlTrfTxService
  9273  07A8  084E               	movf	_pDst^(0+128),w
  9274  07A9  0086               	movwf	6
  9275  07AA  0187               	clrf	7
  9276  07AB  0870               	movf	??_USBCtrlTrfTxService,w
  9277  07AC  0081               	movwf	1
  9278  07AD  3001               	movlw	1
  9279  07AE  07A7               	addwf	_inPipes^(0+128),f	;volatile
  9280  07AF  3000               	movlw	0
  9281  07B0  3DA8               	addwfc	(_inPipes+1)^(0+128),f	;volatile
  9282  07B1  3001               	movlw	1
  9283  07B2  00F0               	movwf	??_USBCtrlTrfTxService
  9284  07B3  0870               	movf	??_USBCtrlTrfTxService,w
  9285  07B4  07CE               	addwf	_pDst^(0+128),f
  9286                           
  9287                           ;usb_device.c: 1988: byteToSend--;
  9288  07B5  3001               	movlw	1
  9289  07B6  02F4               	subwf	USBCtrlTrfTxService@byteToSend,f
  9290  07B7                     i1l2897:	
  9291  07B7  0874               	movf	USBCtrlTrfTxService@byteToSend,w
  9292  07B8  1903               	btfsc	3,2
  9293  07B9  0008               	return
  9294  07BA  2FA2               	goto	i1l2889
  9295  07BB                     __end_of_USBCtrlTrfTxService:	
  9296  007E                     btemp	set	126	;btemp
  9297  007E                     int$flags	set	126
  9298  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    201
    Data        0
    BSS         206
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            16     16      16
    BANK1            80     16      72
    BANK2            63      9      31
    BANK3            80      0      64
    BANK4            16      0       0
    BANK5            16      0       0
    BANK6            80      0      64
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(1) Largest target is 48
		 -> USTATcopy(BANK1[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), BDT(BANK0[48]), 

    memset@p1	PTR void  size(1) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BANK0[48]), 

    memset@p	PTR unsigned char  size(1) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BANK0[48]), 

    lastTransmission	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    putUSBUSART@data	PTR unsigned char  size(1) Largest target is 64
		 -> USB_Out_Buffer(BANK3[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> RS232_Out_Data(BANK6[64]), 

    CDCDataInHandle	PTR void  size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    CDCDataOutHandle	PTR void  size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    pCDCDst.wRom	PTR const unsigned short  size(1) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCDst.wRam	PTR unsigned short  size(1) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S2146_POINTER$wRom	PTR const unsigned short  size(1) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned short  size(1) Largest target is 0

    S2146_POINTER$bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S2146_POINTER$wRam	PTR unsigned short  size(1) Largest target is 0

    pCDCSrc.wRam	PTR unsigned short  size(1) Largest target is 0

    S2146_POINTER$bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    sp__memset	PTR void  size(1) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BANK0[48]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR volatile unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(BANK0[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(1) Largest target is 64
		 -> cdc_data_tx(BANK4[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    S118$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> mySetLineCodingHandler(), 

    S108$wRam	PTR unsigned short  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned short  size(1) Largest target is 0

    S108$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S66$wRom	PTR const unsigned short  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned short  size(1) Largest target is 0

    S66$wRam	PTR unsigned short  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned short  size(1) Largest target is 0

    S66$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S66$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISRCode in COMMON

    _USBDeviceTasks->_USBSuspend
    _USBDeviceTasks->_USBWakeFromSuspend
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdSetCfgHandler
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCBCheckOtherReq->_USBCheckCDCRequest
    _mySetLineCodingHandler->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISRCode in BANK0

    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCBInitEP->_CDCInitEP
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_mySetLineCodingHandler

Critical Paths under _main in BANK1

    _ProcessIO->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _InitializeSystem->_USBDeviceInit
    _UserInit->_InitializeUSART

Critical Paths under _ISRCode in BANK1

    _ISRCode->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService

Critical Paths under _main in BANK2

    _main->_ProcessIO
    _ProcessIO->_CDCTxService

Critical Paths under _ISRCode in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISRCode in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISRCode in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISRCode in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISRCode in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISRCode in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISRCode in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISRCode in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISRCode in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISRCode in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISRCode in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4860
                   _InitializeSystem
                          _ProcessIO
                    _USBDeviceAttach
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      1     1      0       0
                                              8 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ProcessIO                                            2     2      0    4519
                                              7 BANK2      2     2      0
                     _BlinkUSBStatus
                       _CDCTxService
                          _getcUSART
                       _getsUSBUSART
                        _putUSBUSART
                          _putcUSART
 ---------------------------------------------------------------------------------
 (2) _putcUSART                                            1     1      0      22
                                              8 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _putUSBUSART                                          3     2      1     169
                                              8 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (2) _getsUSBUSART                                         7     6      1    2171
                                             15 BANK1      1     0      1
                                              0 BANK2      6     6      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _getcUSART                                            2     2      0      24
                                              8 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         7     7      0    2133
                                              0 BANK2      7     7      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                 7     4      3    1895
                                              8 BANK1      7     4      3
 ---------------------------------------------------------------------------------
 (2) _BlinkUSBStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeSystem                                     0     0      0     341
                      _USBDeviceInit
                           _UserInit
 ---------------------------------------------------------------------------------
 (2) _UserInit                                             2     2      0      69
                                             10 BANK1      2     2      0
                    _InitializeUSART
 ---------------------------------------------------------------------------------
 (3) _InitializeUSART                                      2     2      0       1
                                              8 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        5     5      0     272
                                              8 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISRCode                                              1     1      0   29261
                                              7 BANK1      1     1      0
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (5) _USBDeviceTasks                                       3     3      0   29261
                                              4 BANK1      3     3      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i1_USBDeviceInit
 ---------------------------------------------------------------------------------
 (6) i1_USBDeviceInit                                      5     5      0     272
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (6) _USBWakeFromSuspend                                   1     1      0    3813
                                             13 COMMON     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBSuspend                                           1     1      0    3813
                                             13 COMMON     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBStallHandler                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPService                                     4     4      0   17504
                                              0 BANK1      4     4      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfSetupHandler                               1     1      0   16435
                                             15 BANK0      1     1      0
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPServiceComplete                             2     2      0      92
                                              7 COMMON     2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPAllowDataStage                              2     2      0      92
                                              5 COMMON     2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (8) _USBCheckStdRequest                                   1     1      0   12530
                                             14 BANK0      1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBStdSetCfgHandler                                  5     5      0    4497
                                             13 COMMON     1     1      0
                                              8 BANK0      4     4      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (10) _memset                                              7     3      4     524
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (9) _USBStdGetStatusHandler                               2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _USBStdGetDscHandler                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (9) _USBStdFeatureReqHandler                              6     6      0    4174
                                              8 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USER_USB_CALLBACK_EVENT_HANDLER                      5     0      5    3813
                                              3 BANK0      5     0      5
                 _USBCBCheckOtherReq
                  _USBCBErrorHandler
                        _USBCBInitEP
              _USBCBStdSetDscHandler
                       _USBCBSuspend
               _USBCBWakeFromSuspend
                  _USBCB_SOF_Handler
 ---------------------------------------------------------------------------------
 (7) _USBCB_SOF_Handler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBWakeFromSuspend                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBSuspend                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBStdSetDscHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBInitEP                                          0     0      0    1121
                          _CDCInitEP
 ---------------------------------------------------------------------------------
 (8) _CDCInitEP                                            3     3      0    1121
                                              0 BANK0      3     3      0
                  _USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (9) i1_USBTransferOnePacket                               7     4      3     388
                                              0 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (9) _USBEnableEndpoint                                    6     5      1     733
                                              7 COMMON     6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (10) _USBConfigureEndpoint                                7     6      1     400
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (7) _USBCBErrorHandler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBCheckOtherReq                                   0     0      0       0
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (8) _USBCheckCDCRequest                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfOutHandler                                 2     2      0     500
                                             10 BANK0      2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfRxService                                  6     6      0     500
                                              4 BANK0      6     6      0
          _USBCtrlEPAllowStatusStage
             _mySetLineCodingHandler *
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfInHandler                                  3     3      0     501
                                              4 BANK0      3     3      0
                _USBCtrlTrfTxService
             _mySetLineCodingHandler *
 ---------------------------------------------------------------------------------
 (9) _mySetLineCodingHandler                               4     4      0     386
                                              0 BANK0      4     4      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (10) ___lldiv                                            14     6      8     340
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfTxService                                 5     5      0      92
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitializeSystem
     _USBDeviceInit
     _UserInit
       _InitializeUSART
   _ProcessIO
     _BlinkUSBStatus
     _CDCTxService
       _USBTransferOnePacket
     _getcUSART
     _getsUSBUSART
       _USBTransferOnePacket
     _putUSBUSART
     _putcUSART
   _USBDeviceAttach

 _ISRCode (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
         _mySetLineCodingHandler *
           ___lldiv
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
           _mySetLineCodingHandler *
             ___lldiv
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCBCheckOtherReq
                 _USBCheckCDCRequest
               _USBCBErrorHandler
               _USBCBInitEP
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i1_USBTransferOnePacket
               _USBCBStdSetDscHandler
               _USBCBSuspend
               _USBCBWakeFromSuspend
               _USBCB_SOF_Handler
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCBCheckOtherReq
                 _USBCheckCDCRequest
               _USBCBErrorHandler
               _USBCBInitEP
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i1_USBTransferOnePacket
               _USBCBStdSetDscHandler
               _USBCBSuspend
               _USBCBWakeFromSuspend
               _USBCB_SOF_Handler
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCBCheckOtherReq
               _USBCheckCDCRequest
             _USBCBErrorHandler
             _USBCBInitEP
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i1_USBTransferOnePacket
             _USBCBStdSetDscHandler
             _USBCBSuspend
             _USBCBWakeFromSuspend
             _USBCB_SOF_Handler
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCBCheckOtherReq
             _USBCheckCDCRequest
           _USBCBErrorHandler
           _USBCBInitEP
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i1_USBTransferOnePacket
           _USBCBStdSetDscHandler
           _USBCBSuspend
           _USBCBWakeFromSuspend
           _USBCB_SOF_Handler
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCBCheckOtherReq
           _USBCheckCDCRequest
         _USBCBErrorHandler
         _USBCBInitEP
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i1_USBTransferOnePacket
         _USBCBStdSetDscHandler
         _USBCBSuspend
         _USBCBWakeFromSuspend
         _USBCB_SOF_Handler
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCBCheckOtherReq
           _USBCheckCDCRequest
         _USBCBErrorHandler
         _USBCBInitEP
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i1_USBTransferOnePacket
         _USBCBStdSetDscHandler
         _USBCBSuspend
         _USBCBWakeFromSuspend
         _USBCB_SOF_Handler
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCBCheckOtherReq
         _USBCheckCDCRequest
       _USBCBErrorHandler
       _USBCBInitEP
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i1_USBTransferOnePacket
       _USBCBStdSetDscHandler
       _USBCBSuspend
       _USBCBWakeFromSuspend
       _USBCB_SOF_Handler
     i1_USBDeviceInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            10      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               10     10      10       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     10      48       7       90.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            3F      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               3F      9      1F       9       49.2%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            10      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               10      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            10      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               10      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     105      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     105      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Jan 28 21:04:35 2018

                              _USB_SD_Ptr 10BD                                         pc 0002  
                             __CFG_CP$OFF 0000                            _BlinkUSBStatus 04D9  
                           _USBDeviceInit 039C                        __size_of_CDCInitEP 003B  
                             __CFG_LVP$ON 0000      USER_USB_CALLBACK_EVENT_HANDLER@event 0063  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 0065                                       l130 03E3  
             __end_of_USBStdGetDscHandler 0660                                       l191 0A77  
                                     l662 04E2                                       l681 054E  
                                     l665 04FD                                       _BDT 0020  
                                     l685 055A                                       _UIE 0E92  
                                     _UIR 0E90                                _USBSuspend 0A34  
                    USBStdSetCfgHandler@i 006B                      USBStdSetCfgHandler@p 0068  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                          _USBDeviceTasks 013B                            _USBDeviceState 00D3  
                  ??_USBCBWakeFromSuspend 0070                     ??_USBCtrlTrfRxService 0064  
                          ??_getsUSBUSART 0147                  USBEnableEndpoint@options 0077  
              USBConfigureEndpoint@handle 0076                                      l4301 022B  
                                    l3441 03AC                                      l4313 023C  
                                    l4305 0232                                      l3611 0A32  
                                    l4325 025D                                      l3703 0AD9  
                                    l4247 0CC8                                      l4239 0CBA  
                                    l4319 0254                                      l4271 0E6E  
                                    l4415 06D2                                      l4407 06BF  
                                    l3457 03CA                                      l3449 03BD  
                                    l4337 027A                                      l4345 0291  
                                    l3721 0A14                                      l4273 0E71  
                                    l3491 0408                                      l4259 0CF3  
                                    l4363 02BB                                      l4347 0296  
                                    l4355 02AC                                      l3723 0A19  
                                    l3477 03E8                                      l3741 04FF  
                                    l4365 02C1                                      l4357 02B0  
                                    l4285 0E83                                      l3479 03F7  
                                    l4367 02D7                                      l4287 0EA0  
                                    l4279 0E82                                      l4439 09CB  
                                    l3497 0425                                      l3753 0518  
                                    l3745 0507                                      l3737 04F9  
                                    l4289 0EB5                                      l4385 0684  
                                    l3763 0535                                      l4299 0228  
                                    l3765 0537                                      l3757 0521  
                                    l3749 050F                                      l4397 069E  
                                    l3783 0551                                      l3697 0ACB  
                                    l3793 0561                                      l3785 0554  
                                    l3777 0547                                      l3991 0A7C  
                                    _LATC 010E                                      u3115 03CD  
                                    u3480 04F7                                      u3570 0533  
                   ??_USBCtrlTrfTxService 0070                                      _UCFG 0E91  
                                    _UEP0 0E98                                      _UEP1 0E99  
                                    _UEIE 0E97                                      _UEIR 0E93  
                                    _UCON 0E8E                           __end_of_ISRCode 0012  
                            __CFG_WRT$OFF 0000                           _CDCDataInHandle 00BE  
  USBStdFeatureReqHandler@current_ep_data 006C                                      _pDst 00CE  
                                    _main 09C5                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                             _BaudRateGen 0131                                      fsr1l 0006  
                         _USBDeviceAttach 0A66                                      btemp 007E  
                           __CFG_BOREN$ON 0000              mySetLineCodingHandler@dwBaud 0060  
                                    start 0012                   BlinkUSBStatus@led_count 00B5  
                           __CFG_IESO$OFF 0000                        _USBCBCheckOtherReq 09B6  
              __end_of_USBCheckStdRequest 0E59                    ??_USBCtrlTrfOutHandler 006A  
               ??_USBStdFeatureReqHandler 0068                    __end_of_BlinkUSBStatus 0568  
                ??_USBStdGetStatusHandler 0070                            ?_USBDeviceInit 0070  
                     ?_USBCBCheckOtherReq 0070                                     ?_main 0070  
                 ?_mySetLineCodingHandler 0070                             __CFG_WDTE$OFF 0000  
       __size_of_USBCtrlEPServiceComplete 0074                           __end_of___lldiv 0D9F  
                  __end_of_USBDeviceTasks 0215                 ?_USBCtrlEPServiceComplete 0070  
                                   i1l130 0482                                     i1l142 015D  
                                   i1l216 070B                                     i1l152 01BF  
                                   i1l153 0212                                     i1l154 01C8  
                                   i1l340 0E03                                     i1l148 0197  
                                   i1l326 0FED                                     i1l430 0F20  
                                   i1l440 0F09                                     i1l441 0F0B  
                                   i1l361 0094                                     i1l362 0095  
                                   i1l282 0D40                                     i1l338 0E58  
                                   i1l283 0D0D                                     i1l284 0D10  
                                   i1l349 0E36                                     i1l374 00FB  
                                   i1l366 00BE                                     i1l279 0D02  
                                   i1l739 07F9                                     _UADDR 0E96  
                                   _RCREG 0199                                     _RCSTA 019D  
                                   _TRISC 008E                                     _USTAT 0E8F  
                                   _TXREG 019A                                     _TXSTA 019E  
      __size_of_USBCtrlEPAllowStatusStage 005C                             __CFG_PWRTE$ON 0000  
                          __CFG_FCMEN$OFF 0000           __end_of_USBCtrlEPAllowDataStage 0C63  
                                   _sd000 10C3                                     _sd001 1077  
                                   _sd002 1043                      ??_USBCBCheckOtherReq 0071  
                                   pclath 000A                         __end_of_CDCInitEP 0B91  
                                   status 0003                                     wtemp0 007E  
                         putUSBUSART@data 00E2              __size_of_USBStdSetCfgHandler 007F  
                          __CFG_MCLRE$OFF 0000                           __initialization 0014  
                         ?_BlinkUSBStatus 0070                              __end_of_main 09CF  
                   _control_signal_bitmap 00BD                            __CFG_LPBOR$OFF 0000  
          __end_of_mySetLineCodingHandler 0B56                 __size_of_USBCtrlEPService 006E  
                                  ??_main 00E8                 __size_of_InitializeSystem 0010  
                         ?_USBDeviceTasks 0070                               ?_USBSuspend 0070  
                              _NextUSBOut 00BC                       __CFG_USBLSCLK$48MHz 0000  
                         i1_USBDeviceInit 043D                                 ??_ISRCode 00DF  
                            _cdc_mem_type 00C0                          __end_of_UserInit 0AE9  
                 __end_of_USBDeviceAttach 0A82                          _CDCDataOutHandle 00BF  
                       _getsUSBUSART$3214 014B                                    i1S4501 0800  
                                  _ACTCON 039B                                    _ANSELA 018C  
                                  _ANSELC 018E                           getsUSBUSART@len 00E7  
                   __size_of_CDCTxService 00C4                                    i1l3101 004F  
                                  i1l3031 05D2                                    i1l3015 05AA  
                                  i1l3009 0598                                    i1l3123 00A0  
                                  i1l3115 007B                                    i1l3043 05FC  
                                  i1l3133 00B8                                    i1l3061 0653  
                                  i1l3205 0719                                    i1l3213 0722  
                                  i1l3135 00C6                                    i1l3055 064D  
                                  i1l3039 05F2                                    i1l3071 0D1C  
                                  i1l3311 0E4D                                    i1l3401 0FAA  
                                  i1l3161 0126                                    i1l3145 00EA  
                                  i1l3057 0650                                    i1l3049 062C  
                                  i1l3081 0D34                                    i1l3403 0FB0  
                                  i1l3235 02F3                                    i1l3155 0101  
                                  i1l3147 00EF                                    i1l3307 0E42  
                                  i1l3413 0FD5                                    i1l3245 030F  
                                  i1l3423 0FFC                                    i1l3247 032C  
                                  i1l3159 011E                                    i1l3191 06E9  
                                  i1l3425 0FFE                                    i1l3417 0FE3  
                                  i1l3257 035A                                    i1l3281 0E0C  
                                  i1l3259 0365                                    i1l2803 0F0E  
                                  i1l2723 0A91                                    i1l2731 0C6C  
                                  i1l3099 004D                                    i1l3283 0E0F  
                                  i1l3187 06E5                                    i1l3269 0394  
                                  i1l2709 0BBE                                    i1l3293 0E20  
                                  i1l3285 0E12                                    i1l2719 0A8A  
                                  i1l2751 0CA5                                    i1l4503 07DA  
                                  i1l2831 07BC                                    i1l3295 0E23  
                                  i1l3535 0ABB                                    i1l2913 0D5D  
                                  i1l3377 0AF1                                    i1l4505 07F4  
                                  i1l2841 07CB                                    i1l2833 07BF  
                                  i1l2905 0A51                                    i1l3297 0E26  
                                  i1l3537 0ABD                                    i1l2923 0D8B  
                                  i1l2915 0D6B                                    i1l3387 0B18  
                                  i1l2771 0ECB                                    i1l2739 0C7A  
                                  i1l2843 07CE                                    i1l2835 07C2  
                                  i1l3563 0F72                                    i1l2837 07C5  
                                  i1l3557 0F4D                                    i1l2927 0D96  
                                  i1l2783 0EDE                                    i1l2839 07C8  
                                  i1l2847 07D1                                    i1l3567 0F81  
                                  i1l3823 0469                                    i1l3815 045D  
                                  i1l3807 044C                                    i1l2865 075E  
                                  i1l2945 0DBE                                    i1l3569 0F84  
                                  i1l3921 018B                                    i1l2795 0EFE  
                                  i1l2779 0ED7                                    i1l3843 0487  
                                  i1l3915 017A                                    i1l3907 016E  
                                  i1l2869 0765                                    i1l2789 0EF0  
                                  i1l2973 0C3A                                    i1l3845 0494  
                                  i1l2879 0789                                    i1l2887 079E  
                                  i1l2991 0574                                    i1l3863 04C2  
                                  i1l3943 01B7                                    i1l3935 01A4  
                                  i1l2889 07A2                                    i1l2897 07B7  
                                  i1l2977 0C4C                                    i1l3857 04A5  
                                  i1l3929 019D                                    i1l3971 0209  
                                  i1l3963 01E3                                    i1l3893 0157  
                                  i1l3885 014A                                    i1l2999 0585  
                                  i1l3969 01F8                                    u320_25 0F2E  
                                  u241_25 0D6C                                    u217_25 0B99  
                                  u242_25 0D80                                    u218_25 0B9F  
                                  u250_25 0C43                                    u243_25 0D8C  
                                  u219_25 0BA7                                    u239_25 0D60  
                                  u371_25 046C                                    u289_25 02EC  
                                  _OSCCON 0099                             CDCTxService@i 014C  
                                  _SPBRGH 019C                                    _SPBRGL 019B  
            i1USBTransferOnePacket@handle 0076                         _shortPacketStatus 00D0  
                         USBDeviceTasks@i 00DE               USBStdFeatureReqHandler@pUEP 006A  
                USBTransferOnePacket@data 00E1                USBCtrlTrfInHandler@lastDTS 0066  
                         ??_USBDeviceInit 00E0                              ?_putUSBUSART 00E0  
                          __CFG_STVREN$ON 0000                                 ??___lldiv 0078  
                    __end_of_getsUSBUSART 0EB8                              ?_USBCBInitEP 0070  
                       _USBEnableEndpoint 0A82           __size_of_USBStdGetStatusHandler 004F  
                                  _memset 0A4C                        ?_USBEnableEndpoint 0077  
                   _USBCBStdSetDscHandler 09B4             __size_of_USBTransferOnePacket 004E  
                      __size_of_ProcessIO 0075                              _CDCTxService 0215  
                     ??_USBEnableEndpoint 0078                            _RS232_Out_Data 0320  
                             _CtrlTrfData 0058                      _controlTransferState 00CF  
                 __end_of__initialization 0033                i1USBTransferOnePacket@data 0071  
                __size_of_USBStallHandler 0020                       __size_of_USBSuspend 0018  
                    i1USBDeviceInit@i_740 0073                            __pcstackCOMMON 0070  
               __end_of_USBEnableEndpoint 0AA2                             __end_of_sd000 10C7  
                           __end_of_sd001 10AB                             __end_of_sd002 1077  
                __size_of_InitializeUSART 0014                         _USBCB_SOF_Handler 0003  
        __size_of_USBCtrlEPAllowDataStage 004B             __size_of_USBConfigureEndpoint 003F  
                 __end_ofi1_USBDeviceInit 04D9               __end_of_USBCtrlTrfInHandler 1000  
                      ?_USBCB_SOF_Handler 0070                        __size_of_getcUSART 0016  
                       _CDCTxService$3262 014A                                _cdc_notice 0127  
                     ??_USBCB_SOF_Handler 0070                                _cdc_rx_len 00C3  
                              _cdc_tx_len 00C1                  ??_USBCtrlTrfSetupHandler 006F  
                          _USB_Out_Buffer 01A0                          ?_USBDeviceAttach 0070  
                  _USBStdGetStatusHandler 0CFE                                __pbssBANK1 00A0  
                              __pbssBANK2 0131                                __pbssBANK3 01A0  
                              __pbssBANK6 0320               __size_of_USBWakeFromSuspend 0015  
                             _pBDTEntryIn 00B2                         __end_of_ProcessIO 06D5  
        __end_of_USBCtrlEPServiceComplete 0749                 __end_of_USBCB_SOF_Handler 0004  
             __size_of_USBCheckCDCRequest 0069                                __pmaintext 09C5  
                    USBCtrlTrfRxService@i 0068                           __CFG_PLLMULT$3x 0000  
                              __pintentry 0004                                 ?_UserInit 0070  
                                 _BAUDCON 019F                                   ?_memset 0070  
                  ?_USBCBStdSetDscHandler 0070                                _device_dsc 10AB  
                        _USBCtrlEPService 0F21                                _ep_data_in 00AF  
                        _InitializeSystem 09CF               __end_of_USBCtrlTrfRxService 039C  
                      _USBCheckStdRequest 0DFB                         _configDescriptor1 1000  
                                 _RS232cp 00BA                        __size_of_putcUSART 0009  
             __end_of_USBCtrlTrfTxService 07BB                       _USBStdSetCfgHandler 0568  
                                 _ISRCode 0004                                   _OSCTUNE 0098  
                     ?_USBCheckStdRequest 0070              __size_of_USBStdGetDscHandler 0079  
                                 _UIEbits 0E92             __size_of_USBCBWakeFromSuspend 0001  
                                 _UIRbits 0E90                             _cdc_trf_state 00C2  
                ??i1_USBTransferOnePacket 0073                          ??_BlinkUSBStatus 00E0  
                       __end_of_getcUSART 0A1E                                   _pCDCDst 013A  
                                 _pCDCSrc 013C                     __size_of_getsUSBUSART 005F  
                    ?_USBStdSetCfgHandler 0070                                 _CDCInitEP 0B56  
              __size_of_USBEnableEndpoint 0020                      ??_USBCheckStdRequest 006E  
           __size_of_USBCtrlTrfOutHandler 0032                                   ___lldiv 0D4D  
                        ??_USBDeviceTasks 00DC                         ??_USBStallHandler 0070  
                              ??_UserInit 00E2                          ?i1_USBDeviceInit 0070  
                    __size_of_putUSBUSART 0016                        getsUSBUSART@buffer 014A  
                         __size_of_memset 001A                 __end_of_configDescriptor1 1043  
                    __size_of_USBCBInitEP 0003                                   __ptext1 0A66  
                                 __ptext2 0660                                   __ptext3 09BC  
                                 __ptext4 0A1E                                   __ptext5 0E59  
                                 __ptext6 0A08                                   __ptext7 0215  
                                 __ptext8 0CB0                                   __ptext9 04D9  
                                 _inPipes 00A7               _USBDeferOUTDataStagePackets 00C4  
                       ??_InitializeUSART 00E0                              ??_USBSuspend 007D  
                       _USBCBErrorHandler 09B3                              _LastRS232Out 00BB  
                                 _sending 00B8                        ?_USBCBErrorHandler 0070  
                           ?_USBCBSuspend 0070                        __end_of_USB_CD_Ptr 10C9  
         __size_of_USBCtrlTrfSetupHandler 0048                                   clrloop0 07FB  
                    end_of_initialization 0033                              _getsUSBUSART 0E59  
             __size_of_USBCBCheckOtherReq 0003                        __end_of_USB_SD_Ptr 10C3  
                     _pBDTEntryEP0OutNext 00D1                       ??_USBCBErrorHandler 0070  
                                 memset@c 0070                                   memset@n 0072  
                                 memset@p 0075           _dummy_encapsulated_cmd_response 013F  
                ?_USBStdFeatureReqHandler 0070                     ??_USBStdSetCfgHandler 007D  
                         ___lldiv@divisor 0070                                ?_CDCInitEP 0070  
                         ___lldiv@counter 007D                         __end_of_putcUSART 09C5  
              __size_of_USBCB_SOF_Handler 0001                        __end_of_USBSuspend 0A4C  
                 _USBCtrlEPAllowDataStage 0C18                                 _RCSTAbits 019D  
                              getcUSART@c 00E1                  _USBCtrlEPServiceComplete 06D5  
              _USBStatusStageEnabledFlag1 00C7                _USBStatusStageEnabledFlag2 00C6  
                      USBEnableEndpoint@p 007A                 __end_of_USBCBErrorHandler 09B4  
                        __CFG_FOSC$INTOSC 0000                                 _TRISCbits 008E  
                          ??_USBCBSuspend 0070                        _BothEP0OutUOWNsSet 00CA  
               USBStdSetCfgHandler@i_1844 006A                 USBConfigureEndpoint@EPNum 0075  
              ?_USBCtrlEPAllowStatusStage 0070       USER_USB_CALLBACK_EVENT_HANDLER@size 0066  
                               _USTATcopy 00D6                  i1USBTransferOnePacket@ep 0075  
            __end_of_USBTransferOnePacket 0CFE           __size_ofi1_USBTransferOnePacket 004D  
                               _TXSTAbits 019E                         putUSBUSART@length 00E0  
                      __CFG_PLLEN$ENABLED 0000                        USBDeviceInit@i_740 00E3  
                  _USBCtrlTrfSetupHandler 0BD0                     __end_of_USBDeviceInit 043D  
                          __end_of_memset 0A66                         _USBBusIsSuspended 00CC  
                     start_initialization 0014                   ?_USBStdGetStatusHandler 0070  
           USBCtrlTrfRxService@byteToRead 0069                               _cdc_data_rx 02A0  
                             _cdc_data_tx 0220              __end_of_USBConfigureEndpoint 0BD0  
         __end_of_USBStdFeatureReqHandler 013B         __end_of_USBCtrlEPAllowStatusStage 0DFB  
                __end_of_USBCtrlEPService 0F8F                  __end_of_InitializeSystem 09DF  
               ??_USBCtrlEPAllowDataStage 0075                               ??_CDCInitEP 0060  
                          USBDeviceInit@i 00E4                            USBDeviceInit@p 00E1  
                ??_mySetLineCodingHandler 007E                    _pBDTEntryEP0OutCurrent 00D2  
                 USBTransferOnePacket@dir 00E0                   USBTransferOnePacket@len 00E2  
                 ??_USBCBStdSetDscHandler 0070                       _USBStdGetDscHandler 05E7  
                               _ProcessIO 0660                                  ??_memset 0074  
                  i1_USBTransferOnePacket 0C63                __size_of_USBCBErrorHandler 0001  
                       __size_of_UserInit 0027                    _USBActiveConfiguration 00D7  
          __end_of_USBStdGetStatusHandler 0D4D                 i1USBTransferOnePacket@dir 0070  
               i1USBTransferOnePacket@len 0072                                 ___latbits 0002  
                           __pcstackBANK0 0060                             __pcstackBANK1 00D8  
                           __pcstackBANK2 0147              __size_of_USBCtrlTrfInHandler 0071  
                                ?_ISRCode 0070                                 UserInit@i 00E3  
                    ?_USBStdGetDscHandler 0070                __end_of_USBWakeFromSuspend 0A08  
                         _USBStallHandler 0AA2                          _lastTransmission 013E  
                            _pBDTEntryOut 0135                __end_of_USBCheckCDCRequest 0F21  
                __size_of_USBDeviceAttach 001C                           _InitializeUSART 09DF  
                    __end_of_USBCBSuspend 09B6              __end_of_USBCBWakeFromSuspend 0003  
                               _getcUSART 0A08                                  ?___lldiv 0070  
                              ?_ProcessIO 0070                USBCBSendResume@delay_count 0138  
                               __pswtext1 0800                      _USBTransferOnePacket 0CB0  
            __end_of_USBCtrlTrfOutHandler 0B1B                     ??_USBStdGetDscHandler 0070  
                             _ep_data_out 00AC              __size_of_USBCtrlTrfRxService 00C3  
           USBConfigureEndpoint@direction 0070                                 _receiving 00B7  
            __size_of_USBCtrlTrfTxService 0072                                  _LATCbits 010E  
              ??_USBCtrlEPServiceComplete 0077                                 clear_ram0 07FA  
                                _PIE2bits 0092                                  _PIR1bits 0011  
                                _PIR2bits 0012           __size_of_mySetLineCodingHandler 003B  
               USBCtrlEPService@setup_cnt 00DB                             ??_putUSBUSART 00E1  
                                _UEP0bits 0E98                                ?_getcUSART 0070  
              _USBDeferINDataStagePackets 00C5                             ??_USBCBInitEP 007D  
             __size_of_USBCheckStdRequest 005E                                  _UCONbits 0E8E  
                               _putcUSART 09BC                      _USBConfigureEndpoint 0B91  
        __size_of_USBStdFeatureReqHandler 0104                     ?_USBTransferOnePacket 00E0  
                              putcUSART@c 00E0                             ?_CDCTxService 0070  
                            _RemoteWakeup 00CD                  __size_ofi1_USBDeviceInit 009C  
                      _RS232_Out_Data_Rdy 00B9                __end_of_USBCBCheckOtherReq 09B9  
                 __end_of_USBStallHandler 0AC2                          __size_of_ISRCode 000E  
             ??_USBCtrlEPAllowStatusStage 0070               __end_of_USBStdSetCfgHandler 05E7  
                 __end_of_InitializeUSART 09F3                        __end_of_device_dsc 10BD  
                 ?_USBCtrlTrfSetupHandler 0070                   USBStdGetStatusHandler@p 0071  
                  USBTransferOnePacket@ep 00E5                                  _SetupPkt 0050  
                             ??_ProcessIO 014E                     ?_USBConfigureEndpoint 0070  
                              ?_putcUSART 0070                         ??_USBDeviceAttach 00E0  
                                _UserInit 0AC2                          __size_of___lldiv 0052  
                 __size_of_BlinkUSBStatus 008F                       __end_of_putUSBUSART 0A34  
                             _line_coding 0120                            ??_CDCTxService 0147  
                     __end_of_USBCBInitEP 09BC                          InitializeUSART@c 00E1  
                  _mySetLineCodingHandler 0B1B                   __size_of_USBDeviceTasks 00DA  
                                __ptext10 09CF                                  __ptext11 0AC2  
                                __ptext20 0F21                                  __ptext12 09DF  
                                __ptext21 0BD0                                  __ptext13 039C  
                                __ptext30 07BB                                  __ptext22 06D5  
                                __ptext31 0003                                  __ptext23 0C18  
                                __ptext15 013B                                  __ptext40 09B3  
                                __ptext32 0002                                  __ptext24 0DFB  
                                __ptext16 043D                                  __ptext41 09B6  
                                __ptext33 09B5                                  __ptext25 0568  
                                __ptext17 09F3                                  __ptext42 0EB8  
                                __ptext34 09B4                                  __ptext26 0A4C  
                                __ptext18 0A34                                  __ptext43 0AE9  
                                __ptext35 09B9                                  __ptext27 0CFE  
                                __ptext19 0AA2                                  __ptext44 02D9  
                                __ptext36 0B56                                  __ptext28 05E7  
                                __ptext45 0D9F                                  __ptext37 0C63  
                                __ptext29 0037                                  __ptext46 0F8F  
                                __ptext38 0A82                                  __ptext47 0B1B  
                                __ptext39 0B91                                  __ptext48 0D4D  
                                __ptext49 0749                      _USBCBWakeFromSuspend 0002  
          __end_of_USBCtrlTrfSetupHandler 0C18                             __size_of_main 000A  
                       ?_USBCtrlEPService 0070                     __size_of_USBCBSuspend 0001  
                       ?_InitializeSystem 0070                        ??_USBCtrlEPService 00D8  
                     _USBCtrlTrfInHandler 0F8F                        ??_InitializeSystem 00E5  
                                _outPipes 00A0                               ??_getcUSART 00E0  
                    _USBCtrlTrfOutHandler 0AE9                                  int$flags 007E  
                 ?i1_USBTransferOnePacket 0070                 _USBCtrlEPAllowStatusStage 0D9F  
          __size_of_USBCBStdSetDscHandler 0001             __end_of_USBCBStdSetDscHandler 09B5  
                  ??_USBTransferOnePacket 00E3                 _USBDeferStatusStagePacket 00C8  
                CDCTxService@byte_to_send 014D                          i1USBDeviceInit@i 0074  
                        i1USBDeviceInit@p 0071                                _INTCONbits 000B  
                    ?_USBCtrlTrfInHandler 0070             USBCtrlTrfTxService@byteToSend 0074  
                                memset@p1 0076                              _USBCBSuspend 09B5  
                        ?_USBStallHandler 0070                  USBStdFeatureReqHandler@p 006D  
                   ?_USBCBWakeFromSuspend 0070                                  intlevel1 0000  
                  __size_of_USBDeviceInit 00A1   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 07FA  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 003F          ?_USER_USB_CALLBACK_EVENT_HANDLER 0063  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 007D           _USER_USB_CALLBACK_EVENT_HANDLER 07BB  
                       ??i1_USBDeviceInit 0070                          ___lldiv@dividend 0074  
                        ?_InitializeUSART 0070                         __CFG_CLKOUTEN$OFF 0000  
          __end_ofi1_USBTransferOnePacket 0CB0                    ??_USBConfigureEndpoint 0071  
                   ?_USBCtrlTrfOutHandler 0070                               _putUSBUSART 0A1E  
                    __CFG_CPUDIV$NOCLKDIV 0000                       _USBCtrlTrfRxService 02D9  
                             _USBCBInitEP 09B9                        _USBWakeFromSuspend 09F3  
                             ??_putcUSART 00E0                   _USBStdFeatureReqHandler 0037  
                      _USBCheckCDCRequest 0EB8                       _USBCtrlTrfTxService 0749  
                           __pstringtext1 10BD                             __pstringtext2 10C7  
                           __pstringtext3 1000                             __pstringtext4 1043  
                           __pstringtext5 1077                             __pstringtext6 10AB  
                           __pstringtext7 10C3                       ?_USBWakeFromSuspend 0070  
                        ___lldiv@quotient 0079                     ??_USBCtrlTrfInHandler 0064  
                   _USBAlternateInterface 00D4                       ?_USBCheckCDCRequest 0070  
                     USBEnableEndpoint@ep 007C                           _endpoint_number 00CB  
                    ?_USBCtrlTrfRxService 0070                             ?_getsUSBUSART 00E7  
                ?_USBCtrlEPAllowDataStage 0070                      ?_USBCtrlTrfTxService 0070  
            _USBStatusStageTimeoutCounter 00C9                      ??_USBWakeFromSuspend 007D  
              USBTransferOnePacket@handle 00E6                      __end_of_CDCTxService 02D9  
                    ??_USBCheckCDCRequest 0070                                _USB_CD_Ptr 10C7  
