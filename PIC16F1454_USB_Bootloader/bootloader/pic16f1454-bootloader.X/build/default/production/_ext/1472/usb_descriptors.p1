Version 3.2 HI-TECH Software Intermediate Code
"181 ../include\usb_ch9.h
[s S6 `uc 1 `uc 1 `ui 1 `uc 1 `uc 1 `uc 1 `uc 1 `ui 1 `ui 1 `ui 1 `uc 1 `uc 1 `uc 1 `uc 1 ]
[n S6 device_descriptor bLength bDescriptorType bcdUSB bDeviceClass bDeviceSubclass bDeviceProtocol bMaxPacketSize0 idVendor idProduct bcdDevice iManufacturer iProduct iSerialNumber bNumConfigurations ]
"59 ../usb_descriptors.c
[c E249 1 2 3 4 5 6 7 8 9 10 11 .. ]
[n E249 DescriptorTypes DESC_DEVICE DESC_CONFIGURATION DESC_STRING DESC_INTERFACE DESC_ENDPOINT DESC_DEVICE_QUALIFIER DESC_OTHER_SPEED_CONFIGURATION DESC_INTERFACE_POWER DESC_OTG DESC_DEBUG DESC_INTERFACE_ASSOCIATION  ]
"199 ../include\usb_ch9.h
[s S7 `uc 1 `uc 1 `ui 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 ]
[n S7 configuration_descriptor bLength bDescriptorType wTotalLength bNumInterfaces bConfigurationValue iConfiguration bmAttributes bMaxPower ]
"211
[s S10 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 ]
[n S10 interface_descriptor bLength bDescriptorType bInterfaceNumber bAlternateSetting bNumEndpoints bInterfaceClass bInterfaceSubclass bInterfaceProtocol iInterface ]
"92 ../include\usb_hid.h
[s S14 `uc 1 `uc 1 `ui 1 `uc 1 `uc 1 `uc 1 `ui 1 ]
[n S14 hid_descriptor bLength bDescriptorType bcdHID bCountryCode bNumDescriptors bDescriptorType2 wDescriptorLength ]
"224 ../include\usb_ch9.h
[s S11 `uc 1 `uc 1 `uc 1 `uc 1 `ui 1 `uc 1 ]
[n S11 endpoint_descriptor bLength bDescriptorType bEndpointAddress bmAttributes wMaxPacketSize bInterval ]
"46 ../usb_descriptors.c
[s S16 `S7 1 `S10 1 `S14 1 `S11 1 `S11 1 ]
[n S16 configuration_1_packet config interface hid ep1_in ep1_out ]
"123
[c E335 33 34 35 .. ]
[n E335 HIDDescriptorTypes DESC_HID DESC_REPORT DESC_PHYSICAL  ]
"136
[c E266 0 1 2 3 .. ]
[n E266 EndpointAttributes EP_CONTROL EP_ISOCHRONOUS EP_BULK EP_INTERRUPT  ]
"152
[s S17 `uc 1 `uc 1 `ui 1 ]
[n S17 . bLength bDescriptorType lang ]
"159
[s S18 `uc 1 `uc 1 `ui -> 10 `i ]
[n S18 . bLength bDescriptorType chars ]
"166
[s S19 `uc 1 `uc 1 `ui -> 8 `i ]
[n S19 . bLength bDescriptorType chars ]
"232
[s S28 `ui 1 `ui 1 ]
[n S28 bootloader_struct_type ptr size ]
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef signed short long int int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 43: typedef unsigned char uint8_t;
[; ;stdint.h: 49: typedef unsigned int uint16_t;
[; ;stdint.h: 56: typedef unsigned short long int uint24_t;
[; ;stdint.h: 63: typedef unsigned long int uint32_t;
[; ;stdint.h: 71: typedef signed char int_least8_t;
[; ;stdint.h: 78: typedef signed int int_least16_t;
[; ;stdint.h: 90: typedef signed short long int int_least24_t;
[; ;stdint.h: 98: typedef signed long int int_least32_t;
[; ;stdint.h: 105: typedef unsigned char uint_least8_t;
[; ;stdint.h: 111: typedef unsigned int uint_least16_t;
[; ;stdint.h: 121: typedef unsigned short long int uint_least24_t;
[; ;stdint.h: 128: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 137: typedef signed char int_fast8_t;
[; ;stdint.h: 144: typedef signed int int_fast16_t;
[; ;stdint.h: 156: typedef signed short long int int_fast24_t;
[; ;stdint.h: 164: typedef signed long int int_fast32_t;
[; ;stdint.h: 171: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 177: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 187: typedef unsigned short long int uint_fast24_t;
[; ;stdint.h: 194: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 200: typedef int32_t intmax_t;
[; ;stdint.h: 205: typedef uint32_t uintmax_t;
[; ;stdint.h: 210: typedef int16_t intptr_t;
[; ;stdint.h: 215: typedef uint16_t uintptr_t;
[; ;stdbool.h: 12: typedef unsigned char bool;
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdlib.h: 7: typedef unsigned short wchar_t;
[; ;stdlib.h: 15: typedef struct {
[; ;stdlib.h: 16: int rem;
[; ;stdlib.h: 17: int quot;
[; ;stdlib.h: 18: } div_t;
[; ;stdlib.h: 19: typedef struct {
[; ;stdlib.h: 20: unsigned rem;
[; ;stdlib.h: 21: unsigned quot;
[; ;stdlib.h: 22: } udiv_t;
[; ;stdlib.h: 23: typedef struct {
[; ;stdlib.h: 24: long quot;
[; ;stdlib.h: 25: long rem;
[; ;stdlib.h: 26: } ldiv_t;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: unsigned long quot;
[; ;stdlib.h: 29: unsigned long rem;
[; ;stdlib.h: 30: } uldiv_t;
[; ;stdlib.h: 53: extern double atof(const char *);
[; ;stdlib.h: 54: extern double strtod(const char *, const char **);
[; ;stdlib.h: 55: extern int atoi(const char *);
[; ;stdlib.h: 56: extern unsigned xtoi(const char *);
[; ;stdlib.h: 57: extern long atol(const char *);
[; ;stdlib.h: 58: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 60: extern int rand(void);
[; ;stdlib.h: 61: extern void srand(unsigned int);
[; ;stdlib.h: 62: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 63: extern div_t div(int numer, int denom);
[; ;stdlib.h: 64: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 65: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 66: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 67: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 68: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 69: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 70: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 75: extern void * malloc(size_t);
[; ;stdlib.h: 76: extern void free(void *);
[; ;stdlib.h: 77: extern void * realloc(void *, size_t);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;stdlib.h: 86: extern int atexit(void (*)(void));
[; ;stdlib.h: 87: extern char * getenv(const char *);
[; ;stdlib.h: 88: extern char ** environ;
[; ;stdlib.h: 89: extern int system(char *);
[; ;stdlib.h: 90: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 91: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 92: extern int abs(int);
[; ;stdlib.h: 93: extern long labs(long);
[; ;stdlib.h: 95: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 96: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 101: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 102: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 104: extern char * ftoa(float f, int * status);
[; ;include\usb.h: 46: struct setup_packet;
[; ;include\usb.h: 83: extern int16_t usb_application_get_string(uint8_t string_number, const void **ptr);
[; ;include\usb.h: 92: extern const struct device_descriptor this_device_descriptor;
[; ;include\usb.h: 110: extern const struct configuration_descriptor *usb_application_config_descs[];
[; ;include\usb.h: 158: uint16_t app_get_device_status_callback();
[; ;include\usb.h: 191: int8_t app_set_interface_callback(uint8_t interface, uint8_t alt_setting);
[; ;include\usb.h: 209: int8_t app_get_interface_callback(uint8_t interface);
[; ;include\usb.h: 290: int8_t app_unknown_setup_request_callback(const struct setup_packet *pkt);
[; ;include\usb.h: 316: int16_t app_unknown_get_descriptor_callback(const struct setup_packet *pkt, const void **descriptor);
[; ;include\usb.h: 350: void usb_init(void);
[; ;include\usb.h: 364: void usb_service(void);
[; ;include\usb.h: 375: uint8_t usb_get_configuration(void);
[; ;include\usb.h: 402: unsigned char *usb_get_in_buffer(uint8_t endpoint);
[; ;include\usb.h: 416: void usb_send_in_buffer(uint8_t endpoint, size_t len);
[; ;include\usb.h: 428: bool usb_in_endpoint_busy(uint8_t endpoint);
[; ;include\usb.h: 441: bool usb_in_endpoint_halted(uint8_t endpoint);
[; ;include\usb.h: 454: bool usb_out_endpoint_has_data(uint8_t endpoint);
[; ;include\usb.h: 466: void usb_arm_out_endpoint(uint8_t endpoint);
[; ;include\usb.h: 480: bool usb_out_endpoint_halted(uint8_t endpoint);
[; ;include\usb.h: 495: uint8_t usb_get_out_buffer(uint8_t endpoint, const unsigned char **buffer);
[; ;include\usb.h: 508: typedef void (*usb_ep0_data_stage_callback)(bool transfer_ok, void *context);
[; ;include\usb.h: 533: void usb_start_receive_ep0_data_stage(char *buffer, size_t len,
[; ;include\usb.h: 534: usb_ep0_data_stage_callback callback, void *context);
[; ;include\usb.h: 562: void usb_send_data_stage(char *buffer, size_t len,
[; ;include\usb.h: 563: usb_ep0_data_stage_callback callback, void *context);
[; ;include\usb_ch9.h: 59: enum PID {
[; ;include\usb_ch9.h: 60: PID_OUT = 0x01,
[; ;include\usb_ch9.h: 61: PID_IN = 0x09,
[; ;include\usb_ch9.h: 62: PID_SOF = 0x05,
[; ;include\usb_ch9.h: 63: PID_SETUP = 0x0D,
[; ;include\usb_ch9.h: 64: PID_DATA0 = 0x03,
[; ;include\usb_ch9.h: 65: PID_DATA1 = 0x0B,
[; ;include\usb_ch9.h: 66: PID_DATA2 = 0x07,
[; ;include\usb_ch9.h: 67: PID_MDATA = 0x0F,
[; ;include\usb_ch9.h: 68: PID_ACK = 0x02,
[; ;include\usb_ch9.h: 69: PID_NAK = 0x0A,
[; ;include\usb_ch9.h: 70: PID_STALL = 0x0E,
[; ;include\usb_ch9.h: 71: PID_NYET = 0x06,
[; ;include\usb_ch9.h: 72: PID_PRE = 0x0C,
[; ;include\usb_ch9.h: 73: PID_ERR = 0x0C,
[; ;include\usb_ch9.h: 74: PID_SPLIT = 0x08,
[; ;include\usb_ch9.h: 75: PID_PING = 0x04,
[; ;include\usb_ch9.h: 76: PID_RESERVED = 0x00,
[; ;include\usb_ch9.h: 77: };
[; ;include\usb_ch9.h: 83: enum DestinationType {
[; ;include\usb_ch9.h: 84: DEST_DEVICE = 0,
[; ;include\usb_ch9.h: 85: DEST_INTERFACE = 1,
[; ;include\usb_ch9.h: 86: DEST_ENDPOINT = 2,
[; ;include\usb_ch9.h: 87: DEST_OTHER_ELEMENT = 3,
[; ;include\usb_ch9.h: 88: };
[; ;include\usb_ch9.h: 94: enum RequestType {
[; ;include\usb_ch9.h: 95: REQUEST_TYPE_STANDARD = 0,
[; ;include\usb_ch9.h: 96: REQUEST_TYPE_CLASS = 1,
[; ;include\usb_ch9.h: 97: REQUEST_TYPE_VENDOR = 2,
[; ;include\usb_ch9.h: 98: REQUEST_TYPE_RESERVED = 3,
[; ;include\usb_ch9.h: 99: };
[; ;include\usb_ch9.h: 105: enum StandardControlRequest {
[; ;include\usb_ch9.h: 106: GET_STATUS = 0x0,
[; ;include\usb_ch9.h: 107: CLEAR_FEATURE = 0x1,
[; ;include\usb_ch9.h: 108: SET_FEATURE = 0x3,
[; ;include\usb_ch9.h: 109: SET_ADDRESS = 0x5,
[; ;include\usb_ch9.h: 110: GET_DESCRIPTOR = 0x6,
[; ;include\usb_ch9.h: 111: SET_DESCRIPTOR = 0x7,
[; ;include\usb_ch9.h: 112: GET_CONFIGURATION = 0x8,
[; ;include\usb_ch9.h: 113: SET_CONFIGURATION = 0x9,
[; ;include\usb_ch9.h: 114: GET_INTERFACE = 0xA,
[; ;include\usb_ch9.h: 115: SET_INTERFACE = 0xB,
[; ;include\usb_ch9.h: 116: SYNCH_FRAME = 0xC,
[; ;include\usb_ch9.h: 117: };
[; ;include\usb_ch9.h: 120: enum DescriptorTypes {
[; ;include\usb_ch9.h: 121: DESC_DEVICE = 0x1,
[; ;include\usb_ch9.h: 122: DESC_CONFIGURATION = 0x2,
[; ;include\usb_ch9.h: 123: DESC_STRING = 0x3,
[; ;include\usb_ch9.h: 124: DESC_INTERFACE = 0x4,
[; ;include\usb_ch9.h: 125: DESC_ENDPOINT = 0x5,
[; ;include\usb_ch9.h: 126: DESC_DEVICE_QUALIFIER = 0x6,
[; ;include\usb_ch9.h: 127: DESC_OTHER_SPEED_CONFIGURATION = 0x7,
[; ;include\usb_ch9.h: 128: DESC_INTERFACE_POWER = 0x8,
[; ;include\usb_ch9.h: 129: DESC_OTG = 0x9,
[; ;include\usb_ch9.h: 130: DESC_DEBUG = 0xA,
[; ;include\usb_ch9.h: 131: DESC_INTERFACE_ASSOCIATION = 0xB,
[; ;include\usb_ch9.h: 132: };
[; ;include\usb_ch9.h: 143: enum DeviceClassCodes {
[; ;include\usb_ch9.h: 144: DEVICE_CLASS_DEFINED_AT_INTERFACE_LEVEL = 0x0,
[; ;include\usb_ch9.h: 145: DEVICE_CLASS_MISC = 0xef,
[; ;include\usb_ch9.h: 146: DEVICE_CLASS_APPLICATION_SPECIFIC = 0xfe,
[; ;include\usb_ch9.h: 147: DEVICE_CLASS_VENDOR_SPECIFIC = 0xff,
[; ;include\usb_ch9.h: 148: };
[; ;include\usb_ch9.h: 151: enum EndpointAttributes {
[; ;include\usb_ch9.h: 152: EP_CONTROL = 0x0,
[; ;include\usb_ch9.h: 153: EP_ISOCHRONOUS = 0x1,
[; ;include\usb_ch9.h: 154: EP_BULK = 0x2,
[; ;include\usb_ch9.h: 155: EP_INTERRUPT = 0x3,
[; ;include\usb_ch9.h: 158: };
[; ;include\usb_ch9.h: 165: struct setup_packet {
[; ;include\usb_ch9.h: 166: union {
[; ;include\usb_ch9.h: 167: struct {
[; ;include\usb_ch9.h: 168: uint8_t destination : 5;
[; ;include\usb_ch9.h: 169: uint8_t type : 2;
[; ;include\usb_ch9.h: 170: uint8_t direction : 1;
[; ;include\usb_ch9.h: 171: };
[; ;include\usb_ch9.h: 172: uint8_t bmRequestType;
[; ;include\usb_ch9.h: 173: } REQUEST;
[; ;include\usb_ch9.h: 174: uint8_t bRequest;
[; ;include\usb_ch9.h: 175: uint16_t wValue;
[; ;include\usb_ch9.h: 176: uint16_t wIndex;
[; ;include\usb_ch9.h: 177: uint16_t wLength;
[; ;include\usb_ch9.h: 178: };
[; ;include\usb_ch9.h: 181: struct device_descriptor {
[; ;include\usb_ch9.h: 182: uint8_t bLength;
[; ;include\usb_ch9.h: 183: uint8_t bDescriptorType;
[; ;include\usb_ch9.h: 184: uint16_t bcdUSB;
[; ;include\usb_ch9.h: 185: uint8_t bDeviceClass;
[; ;include\usb_ch9.h: 186: uint8_t bDeviceSubclass;
[; ;include\usb_ch9.h: 187: uint8_t bDeviceProtocol;
[; ;include\usb_ch9.h: 188: uint8_t bMaxPacketSize0;
[; ;include\usb_ch9.h: 189: uint16_t idVendor;
[; ;include\usb_ch9.h: 190: uint16_t idProduct;
[; ;include\usb_ch9.h: 191: uint16_t bcdDevice;
[; ;include\usb_ch9.h: 192: uint8_t iManufacturer;
[; ;include\usb_ch9.h: 193: uint8_t iProduct;
[; ;include\usb_ch9.h: 194: uint8_t iSerialNumber;
[; ;include\usb_ch9.h: 195: uint8_t bNumConfigurations;
[; ;include\usb_ch9.h: 196: };
[; ;include\usb_ch9.h: 199: struct configuration_descriptor {
[; ;include\usb_ch9.h: 200: uint8_t bLength;
[; ;include\usb_ch9.h: 201: uint8_t bDescriptorType;
[; ;include\usb_ch9.h: 202: uint16_t wTotalLength;
[; ;include\usb_ch9.h: 203: uint8_t bNumInterfaces;
[; ;include\usb_ch9.h: 204: uint8_t bConfigurationValue;
[; ;include\usb_ch9.h: 205: uint8_t iConfiguration;
[; ;include\usb_ch9.h: 206: uint8_t bmAttributes;
[; ;include\usb_ch9.h: 207: uint8_t bMaxPower;
[; ;include\usb_ch9.h: 208: };
[; ;include\usb_ch9.h: 211: struct interface_descriptor {
[; ;include\usb_ch9.h: 212: uint8_t bLength;
[; ;include\usb_ch9.h: 213: uint8_t bDescriptorType;
[; ;include\usb_ch9.h: 214: uint8_t bInterfaceNumber;
[; ;include\usb_ch9.h: 215: uint8_t bAlternateSetting;
[; ;include\usb_ch9.h: 216: uint8_t bNumEndpoints;
[; ;include\usb_ch9.h: 217: uint8_t bInterfaceClass;
[; ;include\usb_ch9.h: 218: uint8_t bInterfaceSubclass;
[; ;include\usb_ch9.h: 219: uint8_t bInterfaceProtocol;
[; ;include\usb_ch9.h: 220: uint8_t iInterface;
[; ;include\usb_ch9.h: 221: };
[; ;include\usb_ch9.h: 224: struct endpoint_descriptor {
[; ;include\usb_ch9.h: 226: uint8_t bLength;
[; ;include\usb_ch9.h: 227: uint8_t bDescriptorType;
[; ;include\usb_ch9.h: 228: uint8_t bEndpointAddress;
[; ;include\usb_ch9.h: 229: uint8_t bmAttributes;
[; ;include\usb_ch9.h: 230: uint16_t wMaxPacketSize;
[; ;include\usb_ch9.h: 231: uint8_t bInterval;
[; ;include\usb_ch9.h: 232: };
[; ;include\usb_ch9.h: 235: struct string_descriptor {
[; ;include\usb_ch9.h: 236: uint8_t bLength;
[; ;include\usb_ch9.h: 237: uint8_t bDescriptorType;
[; ;include\usb_ch9.h: 238: uint16_t chars[];
[; ;include\usb_ch9.h: 239: };
[; ;include\usb_ch9.h: 246: struct interface_association_descriptor {
[; ;include\usb_ch9.h: 247: uint8_t bLength;
[; ;include\usb_ch9.h: 248: uint8_t bDescriptorType;
[; ;include\usb_ch9.h: 249: uint8_t bFirstInterface;
[; ;include\usb_ch9.h: 250: uint8_t bInterfaceCount;
[; ;include\usb_ch9.h: 251: uint8_t bFunctionClass;
[; ;include\usb_ch9.h: 252: uint8_t bFunctionSubClass;
[; ;include\usb_ch9.h: 253: uint8_t bFunctionProtocol;
[; ;include\usb_ch9.h: 254: uint8_t iFunction;
[; ;include\usb_ch9.h: 255: };
[; ;include\usb_hid.h: 63: enum HIDDescriptorTypes {
[; ;include\usb_hid.h: 64: DESC_HID = 0x21,
[; ;include\usb_hid.h: 65: DESC_REPORT = 0x22,
[; ;include\usb_hid.h: 66: DESC_PHYSICAL = 0x23,
[; ;include\usb_hid.h: 67: };
[; ;include\usb_hid.h: 70: enum HIDRequests {
[; ;include\usb_hid.h: 71: HID_GET_REPORT = 0x1,
[; ;include\usb_hid.h: 72: HID_GET_IDLE = 0x2,
[; ;include\usb_hid.h: 73: HID_GET_PROTOCOL = 0x3,
[; ;include\usb_hid.h: 74: HID_SET_REPORT = 0x9,
[; ;include\usb_hid.h: 75: HID_SET_IDLE = 0xa,
[; ;include\usb_hid.h: 76: HID_SET_PROTOCOL = 0xb,
[; ;include\usb_hid.h: 77: };
[; ;include\usb_hid.h: 80: enum HIDReportTypes {
[; ;include\usb_hid.h: 81: HID_INPUT = 0x1,
[; ;include\usb_hid.h: 82: HID_OUTPUT = 0x2,
[; ;include\usb_hid.h: 83: HID_FEATURE = 0x3,
[; ;include\usb_hid.h: 84: };
[; ;include\usb_hid.h: 87: enum HIDProtocols {
[; ;include\usb_hid.h: 88: HID_PROTO_BOOT = 0,
[; ;include\usb_hid.h: 89: HID_PROTO_REPORT = 1,
[; ;include\usb_hid.h: 90: };
[; ;include\usb_hid.h: 92: struct hid_descriptor {
[; ;include\usb_hid.h: 93: uint8_t bLength;
[; ;include\usb_hid.h: 94: uint8_t bDescriptorType;
[; ;include\usb_hid.h: 95: uint16_t bcdHID;
[; ;include\usb_hid.h: 96: uint8_t bCountryCode;
[; ;include\usb_hid.h: 97: uint8_t bNumDescriptors;
[; ;include\usb_hid.h: 98: uint8_t bDescriptorType2;
[; ;include\usb_hid.h: 99: uint16_t wDescriptorLength;
[; ;include\usb_hid.h: 100: };
[; ;include\usb_hid.h: 102: struct hid_optional_descriptor {
[; ;include\usb_hid.h: 103: uint8_t bDescriptorType;
[; ;include\usb_hid.h: 104: uint16_t wDescriptorLength;
[; ;include\usb_hid.h: 105: };
[; ;include\usb_hid.h: 121: extern int16_t usb_application_get_hid_descriptor(uint8_t interface, const void **ptr);
[; ;include\usb_hid.h: 137: extern int16_t usb_application_get_hid_report_descriptor(uint8_t interface, const void **ptr);
[; ;include\usb_hid.h: 329: uint8_t process_hid_setup_request(const struct setup_packet *setup);
[; ;usb_descriptors.c: 46: struct configuration_1_packet
[; ;usb_descriptors.c: 47: {
[; ;usb_descriptors.c: 48: struct configuration_descriptor config;
[; ;usb_descriptors.c: 49: struct interface_descriptor interface;
[; ;usb_descriptors.c: 50: struct hid_descriptor hid;
[; ;usb_descriptors.c: 51: struct endpoint_descriptor ep1_in;
[; ;usb_descriptors.c: 52: struct endpoint_descriptor ep1_out;
[; ;usb_descriptors.c: 53: };
"56 ../usb_descriptors.c
[v _this_device_descriptor `CS6 ~T0 @X0 1 e ]
[i _this_device_descriptor
:U ..
:U ..
"58
-> -> # `S6 `ui `uc
"59
-> . `E249 0 `uc
"60
-> -> 512 `i `ui
"61
-> -> 0 `i `uc
"62
-> -> 0 `i `uc
"63
-> -> 0 `i `uc
"64
-> -> 8 `i `uc
"65
-> -> 7504 `i `ui
"66
-> -> 24733 `i `ui
"67
-> -> 512 `i `ui
"68
-> -> 0 `i `uc
"69
-> -> 1 `i `uc
"70
-> -> 2 `i `uc
"71
-> -> 1 `i `uc
..
..
]
[; ;usb_descriptors.c: 56: const  struct device_descriptor this_device_descriptor =
[; ;usb_descriptors.c: 57: {
[; ;usb_descriptors.c: 58: sizeof(struct device_descriptor),
[; ;usb_descriptors.c: 59: DESC_DEVICE,
[; ;usb_descriptors.c: 60: 0x0200,
[; ;usb_descriptors.c: 61: 0x00,
[; ;usb_descriptors.c: 62: 0x00,
[; ;usb_descriptors.c: 63: 0x00,
[; ;usb_descriptors.c: 64: 8,
[; ;usb_descriptors.c: 65: 0x1D50,
[; ;usb_descriptors.c: 66: 0x609D,
[; ;usb_descriptors.c: 67: 0x0200,
[; ;usb_descriptors.c: 68: 0,
[; ;usb_descriptors.c: 69: 1,
[; ;usb_descriptors.c: 70: 2,
[; ;usb_descriptors.c: 71: 1,
[; ;usb_descriptors.c: 72: };
"75
[v _hid_report_descriptor `Cuc ~T0 @X0 -> 0 `x s@3328 ]
[i _hid_report_descriptor
:U ..
"77
-> -> 6 `i `uc
-> -> 0 `i `uc
-> -> 255 `i `uc
"78
-> -> 9 `i `uc
-> -> 1 `i `uc
"79
-> -> 161 `i `uc
-> -> 1 `i `uc
"80
-> -> 25 `i `uc
-> -> 1 `i `uc
"81
-> -> 41 `i `uc
-> -> 64 `i `uc
"82
-> -> 21 `i `uc
-> -> 1 `i `uc
"83
-> -> 37 `i `uc
-> -> 64 `i `uc
"84
-> -> 117 `i `uc
-> -> 8 `i `uc
"85
-> -> 149 `i `uc
-> -> 64 `i `uc
"86
-> -> 129 `i `uc
-> -> 0 `i `uc
"87
-> -> 25 `i `uc
-> -> 1 `i `uc
"88
-> -> 41 `i `uc
-> -> 64 `i `uc
"89
-> -> 145 `i `uc
-> -> 0 `i `uc
"91
-> -> 192 `i `uc
..
]
[; ;usb_descriptors.c: 75: static const  uint8_t hid_report_descriptor[] @ 0xD00 =
[; ;usb_descriptors.c: 76: {
[; ;usb_descriptors.c: 77: 0x06, 0x00, 0xFF,
[; ;usb_descriptors.c: 78: 0x09, 0x01,
[; ;usb_descriptors.c: 79: 0xA1, 0x01,
[; ;usb_descriptors.c: 80: 0x19, 0x01,
[; ;usb_descriptors.c: 81: 0x29, 0x40,
[; ;usb_descriptors.c: 82: 0x15, 0x01,
[; ;usb_descriptors.c: 83: 0x25, 0x40,
[; ;usb_descriptors.c: 84: 0x75, 0x08,
[; ;usb_descriptors.c: 85: 0x95, 0x40,
[; ;usb_descriptors.c: 86: 0x81, 0x00,
[; ;usb_descriptors.c: 87: 0x19, 0x01,
[; ;usb_descriptors.c: 88: 0x29, 0x40,
[; ;usb_descriptors.c: 89: 0x91, 0x00,
[; ;usb_descriptors.c: 90: 0xC0
[; ;usb_descriptors.c: 91: };
"93
[v _configuration_1 `CS16 ~T0 @X0 1 s@2048 ]
[i _configuration_1
:U ..
:U ..
:U ..
:U ..
"97
-> -> # `S7 `ui `uc
"98
-> . `E249 1 `uc
"99
-> # _configuration_1 `ui
"100
-> -> 1 `i `uc
"101
-> -> 1 `i `uc
"102
-> -> 0 `i `uc
"103
-> -> 128 `i `uc
"104
-> / -> 100 `i -> 2 `i `uc
..
..
:U ..
:U ..
"109
-> -> # `S10 `ui `uc
"110
-> . `E249 3 `uc
"111
-> -> 0 `i `uc
"112
-> -> 0 `i `uc
"113
-> -> 2 `i `uc
"114
-> -> 3 `i `uc
"115
-> -> 0 `i `uc
"116
-> -> 0 `i `uc
"117
-> -> 0 `i `uc
..
..
:U ..
:U ..
"122
-> -> # `S14 `ui `uc
"123
-> . `E335 0 `uc
"124
-> -> 257 `i `ui
"125
-> -> 0 `i `uc
"126
-> -> 1 `i `uc
"127
-> . `E335 1 `uc
"128
-> # _hid_report_descriptor `ui
..
..
:U ..
:U ..
"133
-> -> # `S11 `ui `uc
"134
-> . `E249 4 `uc
"135
-> | -> 1 `i -> 128 `i `uc
"136
-> . `E266 3 `uc
"137
-> -> 64 `i `ui
"138
-> -> 1 `i `uc
..
..
:U ..
:U ..
"143
-> -> # `S11 `ui `uc
"144
-> . `E249 4 `uc
"145
-> -> 1 `i `uc
"146
-> . `E266 3 `uc
"147
-> -> 64 `i `ui
"148
-> -> 1 `i `uc
..
..
..
..
]
[; ;usb_descriptors.c: 93: static const  struct configuration_1_packet configuration_1 @ 0x800 =
[; ;usb_descriptors.c: 94: {
[; ;usb_descriptors.c: 95: {
[; ;usb_descriptors.c: 97: sizeof(struct configuration_descriptor),
[; ;usb_descriptors.c: 98: DESC_CONFIGURATION,
[; ;usb_descriptors.c: 99: sizeof(configuration_1),
[; ;usb_descriptors.c: 100: 1,
[; ;usb_descriptors.c: 101: 1,
[; ;usb_descriptors.c: 102: 0,
[; ;usb_descriptors.c: 103: 0b10000000,
[; ;usb_descriptors.c: 104: 100/2,
[; ;usb_descriptors.c: 105: },
[; ;usb_descriptors.c: 107: {
[; ;usb_descriptors.c: 109: sizeof(struct interface_descriptor),
[; ;usb_descriptors.c: 110: DESC_INTERFACE,
[; ;usb_descriptors.c: 111: 0x0,
[; ;usb_descriptors.c: 112: 0x0,
[; ;usb_descriptors.c: 113: 0x2,
[; ;usb_descriptors.c: 114: 0x03,
[; ;usb_descriptors.c: 115: 0x00,
[; ;usb_descriptors.c: 116: 0x00,
[; ;usb_descriptors.c: 117: 0x00,
[; ;usb_descriptors.c: 118: },
[; ;usb_descriptors.c: 120: {
[; ;usb_descriptors.c: 122: sizeof(struct hid_descriptor),
[; ;usb_descriptors.c: 123: DESC_HID,
[; ;usb_descriptors.c: 124: 0x0101,
[; ;usb_descriptors.c: 125: 0x0,
[; ;usb_descriptors.c: 126: 1,
[; ;usb_descriptors.c: 127: DESC_REPORT,
[; ;usb_descriptors.c: 128: sizeof(hid_report_descriptor),
[; ;usb_descriptors.c: 129: },
[; ;usb_descriptors.c: 131: {
[; ;usb_descriptors.c: 133: sizeof(struct endpoint_descriptor),
[; ;usb_descriptors.c: 134: DESC_ENDPOINT,
[; ;usb_descriptors.c: 135: 0x01 | 0x80,
[; ;usb_descriptors.c: 136: EP_INTERRUPT,
[; ;usb_descriptors.c: 137: 64,
[; ;usb_descriptors.c: 138: 1,
[; ;usb_descriptors.c: 139: },
[; ;usb_descriptors.c: 141: {
[; ;usb_descriptors.c: 143: sizeof(struct endpoint_descriptor),
[; ;usb_descriptors.c: 144: DESC_ENDPOINT,
[; ;usb_descriptors.c: 145: 0x01 ,
[; ;usb_descriptors.c: 146: EP_INTERRUPT,
[; ;usb_descriptors.c: 147: 64,
[; ;usb_descriptors.c: 148: 1,
[; ;usb_descriptors.c: 149: },
[; ;usb_descriptors.c: 150: };
"152
[v _str00 `CS17 ~T0 @X0 1 s ]
[i _str00
:U ..
:U ..
"154
-> -> # _str00 `ui `uc
"155
-> . `E249 2 `uc
"157
-> -> 1033 `i `ui
..
..
]
[; ;usb_descriptors.c: 152: static const  struct { uint8_t bLength;uint8_t bDescriptorType; uint16_t lang; } str00 =
[; ;usb_descriptors.c: 153: {
[; ;usb_descriptors.c: 154: sizeof(str00),
[; ;usb_descriptors.c: 155: DESC_STRING,
[; ;usb_descriptors.c: 156: 0x0409
[; ;usb_descriptors.c: 157: };
"159
[v _product_string `CS18 ~T0 @X0 1 s ]
[i _product_string
:U ..
:U ..
"161
-> -> # _product_string `ui `uc
"162
-> . `E249 2 `uc
:U ..
"163
-> 98 `ui
-> 111 `ui
-> 111 `ui
-> 116 `ui
-> 108 `ui
-> 111 `ui
-> 97 `ui
-> 100 `ui
-> 101 `ui
-> 114 `ui
..
..
..
]
[; ;usb_descriptors.c: 159: static const  struct { uint8_t bLength;uint8_t bDescriptorType; uint16_t chars[10]; } product_string =
[; ;usb_descriptors.c: 160: {
[; ;usb_descriptors.c: 161: sizeof(product_string),
[; ;usb_descriptors.c: 162: DESC_STRING,
[; ;usb_descriptors.c: 163: {'b','o','o','t','l','o','a','d','e','r'}
[; ;usb_descriptors.c: 164: };
"166
[v _serialnumber_string `CS19 ~T0 @X0 1 s@3968 ]
[i _serialnumber_string
:U ..
:U ..
"168
-> -> # _serialnumber_string `ui `uc
"169
-> . `E249 2 `uc
:U ..
"176
-> 48 `ui
-> 48 `ui
-> 48 `ui
-> 48 `ui
"179
-> 48 `ui
-> 48 `ui
-> 48 `ui
"184
-> 48 `ui
..
..
..
]
[; ;usb_descriptors.c: 166: static const  struct { uint8_t bLength;uint8_t bDescriptorType; uint16_t chars[8]; } serialnumber_string @ 0xF80 =
[; ;usb_descriptors.c: 167: {
[; ;usb_descriptors.c: 168: sizeof(serialnumber_string),
[; ;usb_descriptors.c: 169: DESC_STRING,
[; ;usb_descriptors.c: 170: {
[; ;usb_descriptors.c: 176: '0','0','0','0',
[; ;usb_descriptors.c: 179: '0','0','0','0'
[; ;usb_descriptors.c: 184: }
[; ;usb_descriptors.c: 185: };
"187
[v _usb_application_get_string `(i ~T0 @X0 1 ef2`uc`**Cv ]
"188
{
[; ;usb_descriptors.c: 187: int16_t usb_application_get_string(uint8_t string_number, const void **ptr)
[; ;usb_descriptors.c: 188: {
[e :U _usb_application_get_string ]
"187
[v _string_number `uc ~T0 @X0 1 r1 ]
[v _ptr `**Cv ~T0 @X0 1 r2 ]
"188
[f ]
[; ;usb_descriptors.c: 189: if (0 == string_number)
"189
[e $ ! == -> 0 `i -> _string_number `i 21  ]
[; ;usb_descriptors.c: 190: {
"190
{
[; ;usb_descriptors.c: 191: *ptr = &str00;
"191
[e = *U _ptr -> &U _str00 `*Cv ]
[; ;usb_descriptors.c: 192: return sizeof(str00);
"192
[e ) -> -> # _str00 `ui `i ]
[e $UE 20  ]
"193
}
[; ;usb_descriptors.c: 193: }
[e $U 22  ]
"194
[e :U 21 ]
[; ;usb_descriptors.c: 194: else if (1 == string_number)
[e $ ! == -> 1 `i -> _string_number `i 23  ]
[; ;usb_descriptors.c: 195: {
"195
{
[; ;usb_descriptors.c: 196: *ptr = &product_string;
"196
[e = *U _ptr -> &U _product_string `*Cv ]
[; ;usb_descriptors.c: 197: return sizeof(product_string);
"197
[e ) -> -> # _product_string `ui `i ]
[e $UE 20  ]
"198
}
[; ;usb_descriptors.c: 198: }
[e $U 24  ]
"199
[e :U 23 ]
[; ;usb_descriptors.c: 199: else if (2 == string_number)
[e $ ! == -> 2 `i -> _string_number `i 25  ]
[; ;usb_descriptors.c: 200: {
"200
{
[; ;usb_descriptors.c: 201: *ptr = &serialnumber_string;
"201
[e = *U _ptr -> &U _serialnumber_string `*Cv ]
[; ;usb_descriptors.c: 202: return sizeof(serialnumber_string);
"202
[e ) -> -> # _serialnumber_string `ui `i ]
[e $UE 20  ]
"203
}
[e :U 25 ]
"205
[e :U 24 ]
[e :U 22 ]
[; ;usb_descriptors.c: 203: }
[; ;usb_descriptors.c: 205: return -1;
[e ) -U -> 1 `i ]
[e $UE 20  ]
[; ;usb_descriptors.c: 206: }
"206
[e :UE 20 ]
}
"208
[v _usb_application_config_descs `*CS7 ~T0 @X0 -> 0 `x e ]
[i _usb_application_config_descs
:U ..
"210
-> -> &U _configuration_1 `*S7 `*CS7
..
]
[; ;usb_descriptors.c: 208: const struct configuration_descriptor *usb_application_config_descs[] =
[; ;usb_descriptors.c: 209: {
[; ;usb_descriptors.c: 210: (struct configuration_descriptor*) &configuration_1,
[; ;usb_descriptors.c: 211: };
[; ;usb_descriptors.c: 214: typedef char STATIC_SIZE_CHECK_LINE_214 [((sizeof(usb_application_config_descs)/sizeof(*usb_application_config_descs))==1)?1:-1];
[; ;usb_descriptors.c: 215: typedef char STATIC_SIZE_CHECK_LINE_215 [(sizeof(this_device_descriptor)==18)?1:-1];
"217
[v _usb_application_get_hid_descriptor `(i ~T0 @X0 1 ef2`uc`**Cv ]
"218
{
[; ;usb_descriptors.c: 217: int16_t usb_application_get_hid_descriptor(uint8_t interface, const void **ptr)
[; ;usb_descriptors.c: 218: {
[e :U _usb_application_get_hid_descriptor ]
"217
[v _interface `uc ~T0 @X0 1 r1 ]
[v _ptr `**Cv ~T0 @X0 1 r2 ]
"218
[f ]
"221
[v _p `*Cv ~T0 @X0 1 a ]
[; ;usb_descriptors.c: 221: const void *p = &configuration_1.hid;
[e = _p -> &U . _configuration_1 2 `*Cv ]
[; ;usb_descriptors.c: 222: *ptr = p;
"222
[e = *U _ptr _p ]
[; ;usb_descriptors.c: 223: return sizeof(configuration_1.hid);
"223
[e ) -> -> # . _configuration_1 2 `ui `i ]
[e $UE 26  ]
[; ;usb_descriptors.c: 224: }
"224
[e :UE 26 ]
}
"226
[v _usb_application_get_hid_report_descriptor `(i ~T0 @X0 1 ef2`uc`**Cv ]
"227
{
[; ;usb_descriptors.c: 226: int16_t usb_application_get_hid_report_descriptor(uint8_t interface, const void **ptr)
[; ;usb_descriptors.c: 227: {
[e :U _usb_application_get_hid_report_descriptor ]
"226
[v _interface `uc ~T0 @X0 1 r1 ]
[v _ptr `**Cv ~T0 @X0 1 r2 ]
"227
[f ]
[; ;usb_descriptors.c: 228: *ptr = hid_report_descriptor;
"228
[e = *U _ptr -> &U _hid_report_descriptor `*Cv ]
[; ;usb_descriptors.c: 229: return sizeof(hid_report_descriptor);
"229
[e ) -> -> # _hid_report_descriptor `ui `i ]
[e $UE 27  ]
[; ;usb_descriptors.c: 230: }
"230
[e :UE 27 ]
}
[; ;usb_descriptors.c: 232: struct bootloader_struct_type
[; ;usb_descriptors.c: 233: {
[; ;usb_descriptors.c: 234: uint16_t ptr;
[; ;usb_descriptors.c: 235: uint16_t size;
[; ;usb_descriptors.c: 236: };
"255
[v _bootloader_table `CS28 ~T0 @X0 -> 0 `x e@4088 ]
[i _bootloader_table
:U ..
:U ..
"257
-> -> 0 `i `ui
-> -> 0 `i `ui
..
:U ..
"258
| -> 32768 `ui -> &U _serialnumber_string `ui
-> # _serialnumber_string `ui
..
..
]
[; ;usb_descriptors.c: 255: const  struct bootloader_struct_type bootloader_table[] @ 0xFF8 =
[; ;usb_descriptors.c: 256: {
[; ;usb_descriptors.c: 257: { 0, 0 },
[; ;usb_descriptors.c: 258: { 0x8000 | (uint16_t)&serialnumber_string, sizeof(serialnumber_string) },
[; ;usb_descriptors.c: 259: };
[; ;usb_descriptors.c: 261: typedef char STATIC_SIZE_CHECK_LINE_261 [(0x1000==(uint16_t)&bootloader_table + sizeof(bootloader_table))?1:-1];
