
# 1 "../usb.c"

# 26 "C:\Program Files (x86)\Microchip\xc8\v1.44\include\htc.h"
extern const char __xc8_OPTIM_SPEED;

extern double __fpnormalize(double);


# 13 "C:\Program Files (x86)\Microchip\xc8\v1.44\include\xc8debug.h"
#pragma intrinsic(__builtin_software_breakpoint)
extern void __builtin_software_breakpoint(void);

# 50 "C:\Program Files (x86)\Microchip\xc8\v1.44\include\pic16f1454.h"
extern volatile unsigned char INDF0 @ 0x000;

asm("INDF0 equ 00h");


typedef union {
struct {
unsigned INDF0 :8;
};
} INDF0bits_t;
extern volatile INDF0bits_t INDF0bits @ 0x000;

# 70
extern volatile unsigned char INDF1 @ 0x001;

asm("INDF1 equ 01h");


typedef union {
struct {
unsigned INDF1 :8;
};
} INDF1bits_t;
extern volatile INDF1bits_t INDF1bits @ 0x001;

# 90
extern volatile unsigned char PCL @ 0x002;

asm("PCL equ 02h");


typedef union {
struct {
unsigned PCL :8;
};
} PCLbits_t;
extern volatile PCLbits_t PCLbits @ 0x002;

# 110
extern volatile unsigned char STATUS @ 0x003;

asm("STATUS equ 03h");


typedef union {
struct {
unsigned C :1;
unsigned DC :1;
unsigned Z :1;
unsigned nPD :1;
unsigned nTO :1;
};
struct {
unsigned CARRY :1;
unsigned :1;
unsigned ZERO :1;
};
} STATUSbits_t;
extern volatile STATUSbits_t STATUSbits @ 0x003;

# 169
extern volatile unsigned short FSR0 @ 0x004;



extern volatile unsigned char FSR0L @ 0x004;

asm("FSR0L equ 04h");


typedef union {
struct {
unsigned FSR0L :8;
};
} FSR0Lbits_t;
extern volatile FSR0Lbits_t FSR0Lbits @ 0x004;

# 193
extern volatile unsigned char FSR0H @ 0x005;

asm("FSR0H equ 05h");


typedef union {
struct {
unsigned FSR0H :8;
};
} FSR0Hbits_t;
extern volatile FSR0Hbits_t FSR0Hbits @ 0x005;

# 213
extern volatile unsigned short FSR1 @ 0x006;



extern volatile unsigned char FSR1L @ 0x006;

asm("FSR1L equ 06h");


typedef union {
struct {
unsigned FSR1L :8;
};
} FSR1Lbits_t;
extern volatile FSR1Lbits_t FSR1Lbits @ 0x006;

# 237
extern volatile unsigned char FSR1H @ 0x007;

asm("FSR1H equ 07h");


typedef union {
struct {
unsigned FSR1H :8;
};
} FSR1Hbits_t;
extern volatile FSR1Hbits_t FSR1Hbits @ 0x007;

# 257
extern volatile unsigned char BSR @ 0x008;

asm("BSR equ 08h");


typedef union {
struct {
unsigned BSR :5;
};
struct {
unsigned BSR0 :1;
unsigned BSR1 :1;
unsigned BSR2 :1;
unsigned BSR3 :1;
unsigned BSR4 :1;
};
} BSRbits_t;
extern volatile BSRbits_t BSRbits @ 0x008;

# 309
extern volatile unsigned char WREG @ 0x009;

asm("WREG equ 09h");


typedef union {
struct {
unsigned WREG0 :8;
};
} WREGbits_t;
extern volatile WREGbits_t WREGbits @ 0x009;

# 329
extern volatile unsigned char PCLATH @ 0x00A;

asm("PCLATH equ 0Ah");


typedef union {
struct {
unsigned PCLATH :7;
};
} PCLATHbits_t;
extern volatile PCLATHbits_t PCLATHbits @ 0x00A;

# 349
extern volatile unsigned char INTCON @ 0x00B;

asm("INTCON equ 0Bh");


typedef union {
struct {
unsigned IOCIF :1;
unsigned INTF :1;
unsigned TMR0IF :1;
unsigned IOCIE :1;
unsigned INTE :1;
unsigned TMR0IE :1;
unsigned PEIE :1;
unsigned GIE :1;
};
struct {
unsigned :2;
unsigned T0IF :1;
unsigned :2;
unsigned T0IE :1;
};
} INTCONbits_t;
extern volatile INTCONbits_t INTCONbits @ 0x00B;

# 427
extern volatile unsigned char PORTA @ 0x00C;

asm("PORTA equ 0Ch");


typedef union {
struct {
unsigned RA0 :1;
unsigned RA1 :1;
unsigned :1;
unsigned RA3 :1;
unsigned RA4 :1;
unsigned RA5 :1;
};
} PORTAbits_t;
extern volatile PORTAbits_t PORTAbits @ 0x00C;

# 472
extern volatile unsigned char PORTC @ 0x00E;

asm("PORTC equ 0Eh");


typedef union {
struct {
unsigned RC0 :1;
unsigned RC1 :1;
unsigned RC2 :1;
unsigned RC3 :1;
unsigned RC4 :1;
unsigned RC5 :1;
};
} PORTCbits_t;
extern volatile PORTCbits_t PORTCbits @ 0x00E;

# 522
extern volatile unsigned char PIR1 @ 0x011;

asm("PIR1 equ 011h");


typedef union {
struct {
unsigned TMR1IF :1;
unsigned TMR2IF :1;
unsigned :1;
unsigned SSP1IF :1;
unsigned TXIF :1;
unsigned RCIF :1;
unsigned :1;
unsigned TMR1GIF :1;
};
} PIR1bits_t;
extern volatile PIR1bits_t PIR1bits @ 0x011;

# 574
extern volatile unsigned char PIR2 @ 0x012;

asm("PIR2 equ 012h");


typedef union {
struct {
unsigned :1;
unsigned ACTIF :1;
unsigned USBIF :1;
unsigned BCL1IF :1;
unsigned :3;
unsigned OSFIF :1;
};
} PIR2bits_t;
extern volatile PIR2bits_t PIR2bits @ 0x012;

# 614
extern volatile unsigned char TMR0 @ 0x015;

asm("TMR0 equ 015h");


typedef union {
struct {
unsigned TMR0 :8;
};
} TMR0bits_t;
extern volatile TMR0bits_t TMR0bits @ 0x015;

# 634
extern volatile unsigned short TMR1 @ 0x016;

asm("TMR1 equ 016h");




extern volatile unsigned char TMR1L @ 0x016;

asm("TMR1L equ 016h");


typedef union {
struct {
unsigned TMR1L :8;
};
} TMR1Lbits_t;
extern volatile TMR1Lbits_t TMR1Lbits @ 0x016;

# 661
extern volatile unsigned char TMR1H @ 0x017;

asm("TMR1H equ 017h");


typedef union {
struct {
unsigned TMR1H :8;
};
} TMR1Hbits_t;
extern volatile TMR1Hbits_t TMR1Hbits @ 0x017;

# 681
extern volatile unsigned char T1CON @ 0x018;

asm("T1CON equ 018h");


typedef union {
struct {
unsigned TMR1ON :1;
unsigned :1;
unsigned nT1SYNC :1;
unsigned T1OSCEN :1;
unsigned T1CKPS :2;
unsigned TMR1CS :2;
};
struct {
unsigned :4;
unsigned T1CKPS0 :1;
unsigned T1CKPS1 :1;
unsigned TMR1CS0 :1;
unsigned TMR1CS1 :1;
};
} T1CONbits_t;
extern volatile T1CONbits_t T1CONbits @ 0x018;

# 753
extern volatile unsigned char T1GCON @ 0x019;

asm("T1GCON equ 019h");


typedef union {
struct {
unsigned T1GSS :2;
unsigned T1GVAL :1;
unsigned T1GGO_nDONE :1;
unsigned T1GSPM :1;
unsigned T1GTM :1;
unsigned T1GPOL :1;
unsigned TMR1GE :1;
};
struct {
unsigned T1GSS0 :1;
unsigned T1GSS1 :1;
};
} T1GCONbits_t;
extern volatile T1GCONbits_t T1GCONbits @ 0x019;

# 823
extern volatile unsigned char TMR2 @ 0x01A;

asm("TMR2 equ 01Ah");


typedef union {
struct {
unsigned TMR2 :8;
};
} TMR2bits_t;
extern volatile TMR2bits_t TMR2bits @ 0x01A;

# 843
extern volatile unsigned char PR2 @ 0x01B;

asm("PR2 equ 01Bh");


typedef union {
struct {
unsigned PR2 :8;
};
} PR2bits_t;
extern volatile PR2bits_t PR2bits @ 0x01B;

# 863
extern volatile unsigned char T2CON @ 0x01C;

asm("T2CON equ 01Ch");


typedef union {
struct {
unsigned T2CKPS :2;
unsigned TMR2ON :1;
unsigned T2OUTPS :4;
};
struct {
unsigned T2CKPS0 :1;
unsigned T2CKPS1 :1;
unsigned :1;
unsigned T2OUTPS0 :1;
unsigned T2OUTPS1 :1;
unsigned T2OUTPS2 :1;
unsigned T2OUTPS3 :1;
};
} T2CONbits_t;
extern volatile T2CONbits_t T2CONbits @ 0x01C;

# 934
extern volatile unsigned char TRISA @ 0x08C;

asm("TRISA equ 08Ch");


typedef union {
struct {
unsigned :4;
unsigned TRISA4 :1;
unsigned TRISA5 :1;
};
} TRISAbits_t;
extern volatile TRISAbits_t TRISAbits @ 0x08C;

# 961
extern volatile unsigned char TRISC @ 0x08E;

asm("TRISC equ 08Eh");


typedef union {
struct {
unsigned TRISC0 :1;
unsigned TRISC1 :1;
unsigned TRISC2 :1;
unsigned TRISC3 :1;
unsigned TRISC4 :1;
unsigned TRISC5 :1;
};
} TRISCbits_t;
extern volatile TRISCbits_t TRISCbits @ 0x08E;

# 1011
extern volatile unsigned char PIE1 @ 0x091;

asm("PIE1 equ 091h");


typedef union {
struct {
unsigned TMR1IE :1;
unsigned TMR2IE :1;
unsigned :1;
unsigned SSP1IE :1;
unsigned TXIE :1;
unsigned RCIE :1;
unsigned :1;
unsigned TMR1GIE :1;
};
} PIE1bits_t;
extern volatile PIE1bits_t PIE1bits @ 0x091;

# 1063
extern volatile unsigned char PIE2 @ 0x092;

asm("PIE2 equ 092h");


typedef union {
struct {
unsigned :1;
unsigned ACTIE :1;
unsigned USBIE :1;
unsigned BCL1IE :1;
unsigned :3;
unsigned OSFIE :1;
};
} PIE2bits_t;
extern volatile PIE2bits_t PIE2bits @ 0x092;

# 1103
extern volatile unsigned char OPTION_REG @ 0x095;

asm("OPTION_REG equ 095h");


typedef union {
struct {
unsigned PS :3;
unsigned PSA :1;
unsigned TMR0SE :1;
unsigned TMR0CS :1;
unsigned INTEDG :1;
unsigned nWPUEN :1;
};
struct {
unsigned PS0 :1;
unsigned PS1 :1;
unsigned PS2 :1;
unsigned :1;
unsigned T0SE :1;
unsigned T0CS :1;
};
} OPTION_REGbits_t;
extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x095;

# 1186
extern volatile unsigned char PCON @ 0x096;

asm("PCON equ 096h");


typedef union {
struct {
unsigned nBOR :1;
unsigned nPOR :1;
unsigned nRI :1;
unsigned nRMCLR :1;
unsigned nRWDT :1;
unsigned :1;
unsigned STKUNF :1;
unsigned STKOVF :1;
};
} PCONbits_t;
extern volatile PCONbits_t PCONbits @ 0x096;

# 1243
extern volatile unsigned char WDTCON @ 0x097;

asm("WDTCON equ 097h");


typedef union {
struct {
unsigned SWDTEN :1;
unsigned WDTPS :5;
};
struct {
unsigned :1;
unsigned WDTPS0 :1;
unsigned WDTPS1 :1;
unsigned WDTPS2 :1;
unsigned WDTPS3 :1;
unsigned WDTPS4 :1;
};
} WDTCONbits_t;
extern volatile WDTCONbits_t WDTCONbits @ 0x097;

# 1302
extern volatile unsigned char OSCTUNE @ 0x098;

asm("OSCTUNE equ 098h");


typedef union {
struct {
unsigned TUN :7;
};
struct {
unsigned TUN0 :1;
unsigned TUN1 :1;
unsigned TUN2 :1;
unsigned TUN3 :1;
unsigned TUN4 :1;
unsigned TUN5 :1;
unsigned TUN6 :1;
};
} OSCTUNEbits_t;
extern volatile OSCTUNEbits_t OSCTUNEbits @ 0x098;

# 1366
extern volatile unsigned char OSCCON @ 0x099;

asm("OSCCON equ 099h");


typedef union {
struct {
unsigned SCS :2;
unsigned IRCF :4;
unsigned SPLLMULT :1;
unsigned SPLLEN :1;
};
struct {
unsigned SCS0 :1;
unsigned SCS1 :1;
unsigned IRCF0 :1;
unsigned IRCF1 :1;
unsigned IRCF2 :1;
unsigned IRCF3 :1;
};
} OSCCONbits_t;
extern volatile OSCCONbits_t OSCCONbits @ 0x099;

# 1442
extern volatile unsigned char OSCSTAT @ 0x09A;

asm("OSCSTAT equ 09Ah");


typedef union {
struct {
unsigned HFIOFS :1;
unsigned LFIOFR :1;
unsigned :2;
unsigned HFIOFR :1;
unsigned OSTS :1;
unsigned PLLRDY :1;
unsigned SOSCR :1;
};
} OSCSTATbits_t;
extern volatile OSCSTATbits_t OSCSTATbits @ 0x09A;

# 1493
extern volatile unsigned char LATA @ 0x10C;

asm("LATA equ 010Ch");


typedef union {
struct {
unsigned :4;
unsigned LATA4 :1;
unsigned LATA5 :1;
};
} LATAbits_t;
extern volatile LATAbits_t LATAbits @ 0x10C;

# 1520
extern volatile unsigned char LATC @ 0x10E;

asm("LATC equ 010Eh");


typedef union {
struct {
unsigned LATC0 :1;
unsigned LATC1 :1;
unsigned LATC2 :1;
unsigned LATC3 :1;
unsigned LATC4 :1;
unsigned LATC5 :1;
};
} LATCbits_t;
extern volatile LATCbits_t LATCbits @ 0x10E;

# 1570
extern volatile unsigned char BORCON @ 0x116;

asm("BORCON equ 0116h");


typedef union {
struct {
unsigned BORRDY :1;
unsigned :5;
unsigned BORFS :1;
unsigned SBOREN :1;
};
} BORCONbits_t;
extern volatile BORCONbits_t BORCONbits @ 0x116;

# 1603
extern volatile unsigned char FVRCON @ 0x117;

asm("FVRCON equ 0117h");


typedef union {
struct {
unsigned :6;
unsigned FVRRDY :1;
unsigned FVREN :1;
};
} FVRCONbits_t;
extern volatile FVRCONbits_t FVRCONbits @ 0x117;

# 1630
extern volatile unsigned char APFCON @ 0x11D;

asm("APFCON equ 011Dh");


typedef union {
struct {
unsigned :2;
unsigned P2SEL :1;
unsigned T1GSEL :1;
unsigned :1;
unsigned SSSEL :1;
unsigned SDOSEL :1;
unsigned CLKRSEL :1;
};
} APFCONbits_t;
extern volatile APFCONbits_t APFCONbits @ 0x11D;

# 1676
extern volatile unsigned char ANSELA @ 0x18C;

asm("ANSELA equ 018Ch");


typedef union {
struct {
unsigned ANSELA :8;
};
} ANSELAbits_t;
extern volatile ANSELAbits_t ANSELAbits @ 0x18C;

# 1696
extern volatile unsigned char ANSELC @ 0x18E;

asm("ANSELC equ 018Eh");


typedef union {
struct {
unsigned ANSC0 :1;
unsigned ANSC1 :1;
unsigned ANSC2 :1;
unsigned ANSC3 :1;
};
struct {
unsigned ANSELC :8;
};
} ANSELCbits_t;
extern volatile ANSELCbits_t ANSELCbits @ 0x18E;

# 1742
extern volatile unsigned short PMADR @ 0x191;

asm("PMADR equ 0191h");




extern volatile unsigned char PMADRL @ 0x191;

asm("PMADRL equ 0191h");


typedef union {
struct {
unsigned PMADRL :8;
};
} PMADRLbits_t;
extern volatile PMADRLbits_t PMADRLbits @ 0x191;

# 1769
extern volatile unsigned char PMADRH @ 0x192;

asm("PMADRH equ 0192h");


typedef union {
struct {
unsigned PMADRH :7;
};
} PMADRHbits_t;
extern volatile PMADRHbits_t PMADRHbits @ 0x192;

# 1789
extern volatile unsigned short PMDAT @ 0x193;

asm("PMDAT equ 0193h");




extern volatile unsigned char PMDATL @ 0x193;

asm("PMDATL equ 0193h");


typedef union {
struct {
unsigned PMDATL :8;
};
} PMDATLbits_t;
extern volatile PMDATLbits_t PMDATLbits @ 0x193;

# 1816
extern volatile unsigned char PMDATH @ 0x194;

asm("PMDATH equ 0194h");


typedef union {
struct {
unsigned PMDATH :6;
};
} PMDATHbits_t;
extern volatile PMDATHbits_t PMDATHbits @ 0x194;

# 1836
extern volatile unsigned char PMCON1 @ 0x195;

asm("PMCON1 equ 0195h");


typedef union {
struct {
unsigned RD :1;
unsigned WR :1;
unsigned WREN :1;
unsigned WRERR :1;
unsigned FREE :1;
unsigned LWLO :1;
unsigned CFGS :1;
};
} PMCON1bits_t;
extern volatile PMCON1bits_t PMCON1bits @ 0x195;

# 1892
extern volatile unsigned char PMCON2 @ 0x196;

asm("PMCON2 equ 0196h");


typedef union {
struct {
unsigned PMCON2 :8;
};
} PMCON2bits_t;
extern volatile PMCON2bits_t PMCON2bits @ 0x196;

# 1912
extern volatile unsigned char VREGCON @ 0x197;

asm("VREGCON equ 0197h");


typedef union {
struct {
unsigned VREGPM :2;
};
struct {
unsigned VREGPM0 :1;
unsigned VREGPM1 :1;
};
} VREGCONbits_t;
extern volatile VREGCONbits_t VREGCONbits @ 0x197;

# 1946
extern volatile unsigned char RCREG @ 0x199;

asm("RCREG equ 0199h");


typedef union {
struct {
unsigned RCREG :8;
};
} RCREGbits_t;
extern volatile RCREGbits_t RCREGbits @ 0x199;

# 1966
extern volatile unsigned char TXREG @ 0x19A;

asm("TXREG equ 019Ah");


typedef union {
struct {
unsigned TXREG :8;
};
} TXREGbits_t;
extern volatile TXREGbits_t TXREGbits @ 0x19A;

# 1986
extern volatile unsigned short SPBRG @ 0x19B;

asm("SPBRG equ 019Bh");




extern volatile unsigned char SPBRGL @ 0x19B;

asm("SPBRGL equ 019Bh");


typedef union {
struct {
unsigned SPBRGL :8;
};
} SPBRGLbits_t;
extern volatile SPBRGLbits_t SPBRGLbits @ 0x19B;

# 2013
extern volatile unsigned char SPBRGH @ 0x19C;

asm("SPBRGH equ 019Ch");


typedef union {
struct {
unsigned SPBRGH :8;
};
} SPBRGHbits_t;
extern volatile SPBRGHbits_t SPBRGHbits @ 0x19C;

# 2033
extern volatile unsigned char RCSTA @ 0x19D;

asm("RCSTA equ 019Dh");


typedef union {
struct {
unsigned RX9D :1;
unsigned OERR :1;
unsigned FERR :1;
unsigned ADDEN :1;
unsigned CREN :1;
unsigned SREN :1;
unsigned RX9 :1;
unsigned SPEN :1;
};
} RCSTAbits_t;
extern volatile RCSTAbits_t RCSTAbits @ 0x19D;

# 2095
extern volatile unsigned char TXSTA @ 0x19E;

asm("TXSTA equ 019Eh");


typedef union {
struct {
unsigned TX9D :1;
unsigned TRMT :1;
unsigned BRGH :1;
unsigned SENDB :1;
unsigned SYNC :1;
unsigned TXEN :1;
unsigned TX9 :1;
unsigned CSRC :1;
};
} TXSTAbits_t;
extern volatile TXSTAbits_t TXSTAbits @ 0x19E;

# 2157
extern volatile unsigned char BAUDCON @ 0x19F;

asm("BAUDCON equ 019Fh");


typedef union {
struct {
unsigned ABDEN :1;
unsigned WUE :1;
unsigned :1;
unsigned BRG16 :1;
unsigned SCKP :1;
unsigned :1;
unsigned RCIDL :1;
unsigned ABDOVF :1;
};
} BAUDCONbits_t;
extern volatile BAUDCONbits_t BAUDCONbits @ 0x19F;

# 2209
extern volatile unsigned char WPUA @ 0x20C;

asm("WPUA equ 020Ch");


typedef union {
struct {
unsigned :3;
unsigned WPUA3 :1;
unsigned WPUA4 :1;
unsigned WPUA5 :1;
};
struct {
unsigned WPUA :6;
};
} WPUAbits_t;
extern volatile WPUAbits_t WPUAbits @ 0x20C;

# 2250
extern volatile unsigned char SSP1BUF @ 0x211;

asm("SSP1BUF equ 0211h");


extern volatile unsigned char SSPBUF @ 0x211;

asm("SSPBUF equ 0211h");


typedef union {
struct {
unsigned SSPBUF :8;
};
} SSP1BUFbits_t;
extern volatile SSP1BUFbits_t SSP1BUFbits @ 0x211;

# 2273
typedef union {
struct {
unsigned SSPBUF :8;
};
} SSPBUFbits_t;
extern volatile SSPBUFbits_t SSPBUFbits @ 0x211;

# 2288
extern volatile unsigned char SSP1ADD @ 0x212;

asm("SSP1ADD equ 0212h");


extern volatile unsigned char SSPADD @ 0x212;

asm("SSPADD equ 0212h");


typedef union {
struct {
unsigned SSPADD :8;
};
} SSP1ADDbits_t;
extern volatile SSP1ADDbits_t SSP1ADDbits @ 0x212;

# 2311
typedef union {
struct {
unsigned SSPADD :8;
};
} SSPADDbits_t;
extern volatile SSPADDbits_t SSPADDbits @ 0x212;

# 2326
extern volatile unsigned char SSP1MSK @ 0x213;

asm("SSP1MSK equ 0213h");


extern volatile unsigned char SSPMSK @ 0x213;

asm("SSPMSK equ 0213h");


typedef union {
struct {
unsigned SSPMSK :8;
};
} SSP1MSKbits_t;
extern volatile SSP1MSKbits_t SSP1MSKbits @ 0x213;

# 2349
typedef union {
struct {
unsigned SSPMSK :8;
};
} SSPMSKbits_t;
extern volatile SSPMSKbits_t SSPMSKbits @ 0x213;

# 2364
extern volatile unsigned char SSP1STAT @ 0x214;

asm("SSP1STAT equ 0214h");


extern volatile unsigned char SSPSTAT @ 0x214;

asm("SSPSTAT equ 0214h");


typedef union {
struct {
unsigned BF :1;
unsigned UA :1;
unsigned R_nW :1;
unsigned S :1;
unsigned P :1;
unsigned D_nA :1;
unsigned CKE :1;
unsigned SMP :1;
};
} SSP1STATbits_t;
extern volatile SSP1STATbits_t SSP1STATbits @ 0x214;

# 2429
typedef union {
struct {
unsigned BF :1;
unsigned UA :1;
unsigned R_nW :1;
unsigned S :1;
unsigned P :1;
unsigned D_nA :1;
unsigned CKE :1;
unsigned SMP :1;
};
} SSPSTATbits_t;
extern volatile SSPSTATbits_t SSPSTATbits @ 0x214;

# 2486
extern volatile unsigned char SSP1CON1 @ 0x215;

asm("SSP1CON1 equ 0215h");


extern volatile unsigned char SSPCON @ 0x215;

asm("SSPCON equ 0215h");

extern volatile unsigned char SSPCON1 @ 0x215;

asm("SSPCON1 equ 0215h");


typedef union {
struct {
unsigned SSP1M0 :1;
unsigned SSP1M1 :1;
unsigned SSP1M2 :1;
unsigned SSP1M3 :1;
unsigned CKP :1;
unsigned SSPEN :1;
unsigned SSPOV :1;
unsigned WCOL :1;
};
struct {
unsigned SSPM :4;
unsigned :1;
unsigned SSP1EN :1;
unsigned SSP1OV :1;
};
} SSP1CON1bits_t;
extern volatile SSP1CON1bits_t SSP1CON1bits @ 0x215;

# 2576
typedef union {
struct {
unsigned SSP1M0 :1;
unsigned SSP1M1 :1;
unsigned SSP1M2 :1;
unsigned SSP1M3 :1;
unsigned CKP :1;
unsigned SSPEN :1;
unsigned SSPOV :1;
unsigned WCOL :1;
};
struct {
unsigned SSPM :4;
unsigned :1;
unsigned SSP1EN :1;
unsigned SSP1OV :1;
};
} SSPCONbits_t;
extern volatile SSPCONbits_t SSPCONbits @ 0x215;

# 2651
typedef union {
struct {
unsigned SSP1M0 :1;
unsigned SSP1M1 :1;
unsigned SSP1M2 :1;
unsigned SSP1M3 :1;
unsigned CKP :1;
unsigned SSPEN :1;
unsigned SSPOV :1;
unsigned WCOL :1;
};
struct {
unsigned SSPM :4;
unsigned :1;
unsigned SSP1EN :1;
unsigned SSP1OV :1;
};
} SSPCON1bits_t;
extern volatile SSPCON1bits_t SSPCON1bits @ 0x215;

# 2729
extern volatile unsigned char SSP1CON2 @ 0x216;

asm("SSP1CON2 equ 0216h");


extern volatile unsigned char SSPCON2 @ 0x216;

asm("SSPCON2 equ 0216h");


typedef union {
struct {
unsigned SEN :1;
unsigned RSEN :1;
unsigned PEN :1;
unsigned RCEN :1;
unsigned ACKEN :1;
unsigned ACKDT :1;
unsigned ACKSTAT :1;
unsigned GCEN :1;
};
} SSP1CON2bits_t;
extern volatile SSP1CON2bits_t SSP1CON2bits @ 0x216;

# 2794
typedef union {
struct {
unsigned SEN :1;
unsigned RSEN :1;
unsigned PEN :1;
unsigned RCEN :1;
unsigned ACKEN :1;
unsigned ACKDT :1;
unsigned ACKSTAT :1;
unsigned GCEN :1;
};
} SSPCON2bits_t;
extern volatile SSPCON2bits_t SSPCON2bits @ 0x216;

# 2851
extern volatile unsigned char SSP1CON3 @ 0x217;

asm("SSP1CON3 equ 0217h");


extern volatile unsigned char SSPCON3 @ 0x217;

asm("SSPCON3 equ 0217h");


typedef union {
struct {
unsigned DHEN :1;
unsigned AHEN :1;
unsigned SBCDE :1;
unsigned SDAHT :1;
unsigned BOEN :1;
unsigned SCIE :1;
unsigned PCIE :1;
unsigned ACKTIM :1;
};
} SSP1CON3bits_t;
extern volatile SSP1CON3bits_t SSP1CON3bits @ 0x217;

# 2916
typedef union {
struct {
unsigned DHEN :1;
unsigned AHEN :1;
unsigned SBCDE :1;
unsigned SDAHT :1;
unsigned BOEN :1;
unsigned SCIE :1;
unsigned PCIE :1;
unsigned ACKTIM :1;
};
} SSPCON3bits_t;
extern volatile SSPCON3bits_t SSPCON3bits @ 0x217;

# 2973
extern volatile unsigned char IOCAP @ 0x391;

asm("IOCAP equ 0391h");


typedef union {
struct {
unsigned IOCAP0 :1;
unsigned IOCAP1 :1;
unsigned :1;
unsigned IOCAP3 :1;
unsigned IOCAP4 :1;
unsigned IOCAP5 :1;
};
struct {
unsigned IOCAP :6;
};
} IOCAPbits_t;
extern volatile IOCAPbits_t IOCAPbits @ 0x391;

# 3026
extern volatile unsigned char IOCAN @ 0x392;

asm("IOCAN equ 0392h");


typedef union {
struct {
unsigned IOCAN0 :1;
unsigned IOCAN1 :1;
unsigned :1;
unsigned IOCAN3 :1;
unsigned IOCAN4 :1;
unsigned IOCAN5 :1;
};
struct {
unsigned IOCAN :6;
};
} IOCANbits_t;
extern volatile IOCANbits_t IOCANbits @ 0x392;

# 3079
extern volatile unsigned char IOCAF @ 0x393;

asm("IOCAF equ 0393h");


typedef union {
struct {
unsigned IOCAF0 :1;
unsigned IOCAF1 :1;
unsigned :1;
unsigned IOCAF3 :1;
unsigned IOCAF4 :1;
unsigned IOCAF5 :1;
};
struct {
unsigned IOCAF :6;
};
} IOCAFbits_t;
extern volatile IOCAFbits_t IOCAFbits @ 0x393;

# 3132
extern volatile unsigned char CLKRCON @ 0x39A;

asm("CLKRCON equ 039Ah");


typedef union {
struct {
unsigned CLKRDIV :3;
unsigned CLKRCD :2;
unsigned CLKRSLR :1;
unsigned CLKROE :1;
unsigned CLKREN :1;
};
struct {
unsigned CLKRDIV0 :1;
unsigned CLKRDIV1 :1;
unsigned CLKRDIV2 :1;
unsigned CLKRCD0 :1;
unsigned CLKRCD1 :1;
};
} CLKRCONbits_t;
extern volatile CLKRCONbits_t CLKRCONbits @ 0x39A;

# 3208
extern volatile unsigned char ACTCON @ 0x39B;

asm("ACTCON equ 039Bh");


typedef union {
struct {
unsigned :1;
unsigned ACTORS :1;
unsigned :1;
unsigned ACTLOCK :1;
unsigned ACTSRC :1;
unsigned :1;
unsigned ACTUD :1;
unsigned ACTEN :1;
};
} ACTCONbits_t;
extern volatile ACTCONbits_t ACTCONbits @ 0x39B;

# 3255
extern volatile unsigned char PWM1DCL @ 0x611;

asm("PWM1DCL equ 0611h");


typedef union {
struct {
unsigned :6;
unsigned PWM1DCL :2;
};
struct {
unsigned :6;
unsigned PWM1DCL0 :1;
unsigned PWM1DCL1 :1;
};
} PWM1DCLbits_t;
extern volatile PWM1DCLbits_t PWM1DCLbits @ 0x611;

# 3291
extern volatile unsigned char PWM1DCH @ 0x612;

asm("PWM1DCH equ 0612h");


typedef union {
struct {
unsigned PWM1DCH :8;
};
struct {
unsigned PWM1DCH0 :1;
unsigned PWM1DCH1 :1;
unsigned PWM1DCH2 :1;
unsigned PWM1DCH3 :1;
unsigned PWM1DCH4 :1;
unsigned PWM1DCH5 :1;
unsigned PWM1DCH6 :1;
unsigned PWM1DCH7 :1;
};
} PWM1DCHbits_t;
extern volatile PWM1DCHbits_t PWM1DCHbits @ 0x612;

# 3361
extern volatile unsigned char PWM1CON @ 0x613;

asm("PWM1CON equ 0613h");


extern volatile unsigned char PWM1CON0 @ 0x613;

asm("PWM1CON0 equ 0613h");


typedef union {
struct {
unsigned :4;
unsigned PWM1POL :1;
unsigned PWM1OUT :1;
unsigned PWM1OE :1;
unsigned PWM1EN :1;
};
} PWM1CONbits_t;
extern volatile PWM1CONbits_t PWM1CONbits @ 0x613;

# 3403
typedef union {
struct {
unsigned :4;
unsigned PWM1POL :1;
unsigned PWM1OUT :1;
unsigned PWM1OE :1;
unsigned PWM1EN :1;
};
} PWM1CON0bits_t;
extern volatile PWM1CON0bits_t PWM1CON0bits @ 0x613;

# 3437
extern volatile unsigned char PWM2DCL @ 0x614;

asm("PWM2DCL equ 0614h");


typedef union {
struct {
unsigned :6;
unsigned PWM2DCL :2;
};
struct {
unsigned :6;
unsigned PWM2DCL0 :1;
unsigned PWM2DCL1 :1;
};
} PWM2DCLbits_t;
extern volatile PWM2DCLbits_t PWM2DCLbits @ 0x614;

# 3473
extern volatile unsigned char PWM2DCH @ 0x615;

asm("PWM2DCH equ 0615h");


typedef union {
struct {
unsigned PWM2DCH :8;
};
struct {
unsigned PWM2DCH0 :1;
unsigned PWM2DCH1 :1;
unsigned PWM2DCH2 :1;
unsigned PWM2DCH3 :1;
unsigned PWM2DCH4 :1;
unsigned PWM2DCH5 :1;
unsigned PWM2DCH6 :1;
unsigned PWM2DCH7 :1;
};
} PWM2DCHbits_t;
extern volatile PWM2DCHbits_t PWM2DCHbits @ 0x615;

# 3543
extern volatile unsigned char PWM2CON @ 0x616;

asm("PWM2CON equ 0616h");


extern volatile unsigned char PWM2CON0 @ 0x616;

asm("PWM2CON0 equ 0616h");


typedef union {
struct {
unsigned :4;
unsigned PWM2POL :1;
unsigned PWM2OUT :1;
unsigned PWM2OE :1;
unsigned PWM2EN :1;
};
} PWM2CONbits_t;
extern volatile PWM2CONbits_t PWM2CONbits @ 0x616;

# 3585
typedef union {
struct {
unsigned :4;
unsigned PWM2POL :1;
unsigned PWM2OUT :1;
unsigned PWM2OE :1;
unsigned PWM2EN :1;
};
} PWM2CON0bits_t;
extern volatile PWM2CON0bits_t PWM2CON0bits @ 0x616;

# 3619
extern volatile unsigned char UCON @ 0xE8E;

asm("UCON equ 0E8Eh");


typedef union {
struct {
unsigned :1;
unsigned SUSPND :1;
unsigned RESUME :1;
unsigned USBEN :1;
unsigned PKTDIS :1;
unsigned SE0 :1;
unsigned PPBRST :1;
};
} UCONbits_t;
extern volatile UCONbits_t UCONbits @ 0xE8E;

# 3670
extern volatile unsigned char USTAT @ 0xE8F;

asm("USTAT equ 0E8Fh");


typedef union {
struct {
unsigned :1;
unsigned PPBI :1;
unsigned DIR :1;
unsigned ENDP :4;
};
struct {
unsigned :3;
unsigned ENDP0 :1;
unsigned ENDP1 :1;
unsigned ENDP2 :1;
unsigned ENDP3 :1;
};
} USTATbits_t;
extern volatile USTATbits_t USTATbits @ 0xE8F;

# 3730
extern volatile unsigned char UIR @ 0xE90;

asm("UIR equ 0E90h");


typedef union {
struct {
unsigned URSTIF :1;
unsigned UERRIF :1;
unsigned ACTVIF :1;
unsigned TRNIF :1;
unsigned IDLEIF :1;
unsigned STALLIF :1;
unsigned SOFIF :1;
};
} UIRbits_t;
extern volatile UIRbits_t UIRbits @ 0xE90;

# 3786
extern volatile unsigned char UCFG @ 0xE91;

asm("UCFG equ 0E91h");


typedef union {
struct {
unsigned PPB :2;
unsigned FSEN :1;
unsigned :1;
unsigned UPUEN :1;
unsigned :2;
unsigned UTEYE :1;
};
struct {
unsigned PPB0 :1;
unsigned PPB1 :1;
};
} UCFGbits_t;
extern volatile UCFGbits_t UCFGbits @ 0xE91;

# 3840
extern volatile unsigned char UIE @ 0xE92;

asm("UIE equ 0E92h");


typedef union {
struct {
unsigned URSTIE :1;
unsigned UERRIE :1;
unsigned ACTVIE :1;
unsigned TRNIE :1;
unsigned IDLEIE :1;
unsigned STALLIE :1;
unsigned SOFIE :1;
};
} UIEbits_t;
extern volatile UIEbits_t UIEbits @ 0xE92;

# 3896
extern volatile unsigned char UEIR @ 0xE93;

asm("UEIR equ 0E93h");


typedef union {
struct {
unsigned PIDEF :1;
unsigned CRC5EF :1;
unsigned CRC16EF :1;
unsigned DFN8EF :1;
unsigned BTOEF :1;
unsigned :2;
unsigned BTSEF :1;
};
} UEIRbits_t;
extern volatile UEIRbits_t UEIRbits @ 0xE93;

# 3947
extern volatile unsigned short UFRM @ 0xE94;

asm("UFRM equ 0E94h");




extern volatile unsigned char UFRMH @ 0xE94;

asm("UFRMH equ 0E94h");


typedef union {
struct {
unsigned FRM8 :1;
unsigned FRM9 :1;
unsigned FRM10 :1;
};
} UFRMHbits_t;
extern volatile UFRMHbits_t UFRMHbits @ 0xE94;

# 3986
extern volatile unsigned char UFRML @ 0xE95;

asm("UFRML equ 0E95h");


typedef union {
struct {
unsigned FRM0 :1;
unsigned FRM1 :1;
unsigned FRM2 :1;
unsigned FRM3 :1;
unsigned FRM4 :1;
unsigned FRM5 :1;
unsigned FRM6 :1;
unsigned FRM7 :1;
};
} UFRMLbits_t;
extern volatile UFRMLbits_t UFRMLbits @ 0xE95;

# 4048
extern volatile unsigned char UADDR @ 0xE96;

asm("UADDR equ 0E96h");


typedef union {
struct {
unsigned ADDR0 :1;
unsigned ADDR1 :1;
unsigned ADDR2 :1;
unsigned ADDR3 :1;
unsigned ADDR4 :1;
unsigned ADDR5 :1;
unsigned ADDR6 :1;
};
} UADDRbits_t;
extern volatile UADDRbits_t UADDRbits @ 0xE96;

# 4104
extern volatile unsigned char UEIE @ 0xE97;

asm("UEIE equ 0E97h");


typedef union {
struct {
unsigned PIDEE :1;
unsigned CRC5EE :1;
unsigned CRC16EE :1;
unsigned DFN8EE :1;
unsigned BTOEE :1;
unsigned :2;
unsigned BTSEE :1;
};
} UEIEbits_t;
extern volatile UEIEbits_t UEIEbits @ 0xE97;

# 4155
extern volatile unsigned char UEP0 @ 0xE98;

asm("UEP0 equ 0E98h");


typedef union {
struct {
unsigned EPSTALL :1;
unsigned EPINEN :1;
unsigned EPOUTEN :1;
unsigned EPCONDIS :1;
unsigned EPHSHK :1;
};
} UEP0bits_t;
extern volatile UEP0bits_t UEP0bits @ 0xE98;

# 4199
extern volatile unsigned char UEP1 @ 0xE99;

asm("UEP1 equ 0E99h");


typedef union {
struct {
unsigned EPSTALL :1;
unsigned EPINEN :1;
unsigned EPOUTEN :1;
unsigned EPCONDIS :1;
unsigned EPHSHK :1;
};
} UEP1bits_t;
extern volatile UEP1bits_t UEP1bits @ 0xE99;

# 4243
extern volatile unsigned char UEP2 @ 0xE9A;

asm("UEP2 equ 0E9Ah");


typedef union {
struct {
unsigned EPSTALL :1;
unsigned EPINEN :1;
unsigned EPOUTEN :1;
unsigned EPCONDIS :1;
unsigned EPHSHK :1;
};
} UEP2bits_t;
extern volatile UEP2bits_t UEP2bits @ 0xE9A;

# 4287
extern volatile unsigned char UEP3 @ 0xE9B;

asm("UEP3 equ 0E9Bh");


typedef union {
struct {
unsigned EPSTALL :1;
unsigned EPINEN :1;
unsigned EPOUTEN :1;
unsigned EPCONDIS :1;
unsigned EPHSHK :1;
};
} UEP3bits_t;
extern volatile UEP3bits_t UEP3bits @ 0xE9B;

# 4331
extern volatile unsigned char UEP4 @ 0xE9C;

asm("UEP4 equ 0E9Ch");


typedef union {
struct {
unsigned EPSTALL :1;
unsigned EPINEN :1;
unsigned EPOUTEN :1;
unsigned EPCONDIS :1;
unsigned EPHSHK :1;
};
} UEP4bits_t;
extern volatile UEP4bits_t UEP4bits @ 0xE9C;

# 4375
extern volatile unsigned char UEP5 @ 0xE9D;

asm("UEP5 equ 0E9Dh");


typedef union {
struct {
unsigned EPSTALL :1;
unsigned EPINEN :1;
unsigned EPOUTEN :1;
unsigned EPCONDIS :1;
unsigned EPHSHK :1;
};
} UEP5bits_t;
extern volatile UEP5bits_t UEP5bits @ 0xE9D;

# 4419
extern volatile unsigned char UEP6 @ 0xE9E;

asm("UEP6 equ 0E9Eh");


typedef union {
struct {
unsigned EPSTALL :1;
unsigned EPINEN :1;
unsigned EPOUTEN :1;
unsigned EPCONDIS :1;
unsigned EPHSHK :1;
};
} UEP6bits_t;
extern volatile UEP6bits_t UEP6bits @ 0xE9E;

# 4463
extern volatile unsigned char UEP7 @ 0xE9F;

asm("UEP7 equ 0E9Fh");


typedef union {
struct {
unsigned EPSTALL :1;
unsigned EPINEN :1;
unsigned EPOUTEN :1;
unsigned EPCONDIS :1;
unsigned EPHSHK :1;
};
} UEP7bits_t;
extern volatile UEP7bits_t UEP7bits @ 0xE9F;

# 4507
extern volatile unsigned char STATUS_SHAD @ 0xFE4;

asm("STATUS_SHAD equ 0FE4h");


typedef union {
struct {
unsigned C :1;
unsigned DC :1;
unsigned Z :1;
};
} STATUS_SHADbits_t;
extern volatile STATUS_SHADbits_t STATUS_SHADbits @ 0xFE4;

# 4539
extern volatile unsigned char WREG_SHAD @ 0xFE5;

asm("WREG_SHAD equ 0FE5h");


typedef union {
struct {
unsigned WREG_SHAD :8;
};
} WREG_SHADbits_t;
extern volatile WREG_SHADbits_t WREG_SHADbits @ 0xFE5;

# 4559
extern volatile unsigned char BSR_SHAD @ 0xFE6;

asm("BSR_SHAD equ 0FE6h");


typedef union {
struct {
unsigned BSR_SHAD :5;
};
} BSR_SHADbits_t;
extern volatile BSR_SHADbits_t BSR_SHADbits @ 0xFE6;

# 4579
extern volatile unsigned char PCLATH_SHAD @ 0xFE7;

asm("PCLATH_SHAD equ 0FE7h");


typedef union {
struct {
unsigned PCLATH_SHAD :7;
};
} PCLATH_SHADbits_t;
extern volatile PCLATH_SHADbits_t PCLATH_SHADbits @ 0xFE7;

# 4599
extern volatile unsigned char FSR0L_SHAD @ 0xFE8;

asm("FSR0L_SHAD equ 0FE8h");


typedef union {
struct {
unsigned FSR0L_SHAD :8;
};
} FSR0L_SHADbits_t;
extern volatile FSR0L_SHADbits_t FSR0L_SHADbits @ 0xFE8;

# 4619
extern volatile unsigned char FSR0H_SHAD @ 0xFE9;

asm("FSR0H_SHAD equ 0FE9h");


typedef union {
struct {
unsigned FSR0H_SHAD :8;
};
} FSR0H_SHADbits_t;
extern volatile FSR0H_SHADbits_t FSR0H_SHADbits @ 0xFE9;

# 4639
extern volatile unsigned char FSR1L_SHAD @ 0xFEA;

asm("FSR1L_SHAD equ 0FEAh");


typedef union {
struct {
unsigned FSR1L_SHAD :8;
};
} FSR1L_SHADbits_t;
extern volatile FSR1L_SHADbits_t FSR1L_SHADbits @ 0xFEA;

# 4659
extern volatile unsigned char FSR1H_SHAD @ 0xFEB;

asm("FSR1H_SHAD equ 0FEBh");


typedef union {
struct {
unsigned FSR1H_SHAD :8;
};
} FSR1H_SHADbits_t;
extern volatile FSR1H_SHADbits_t FSR1H_SHADbits @ 0xFEB;

# 4679
extern volatile unsigned char STKPTR @ 0xFED;

asm("STKPTR equ 0FEDh");


typedef union {
struct {
unsigned STKPTR :5;
};
} STKPTRbits_t;
extern volatile STKPTRbits_t STKPTRbits @ 0xFED;

# 4699
extern volatile unsigned char TOSL @ 0xFEE;

asm("TOSL equ 0FEEh");


typedef union {
struct {
unsigned TOSL :8;
};
} TOSLbits_t;
extern volatile TOSLbits_t TOSLbits @ 0xFEE;

# 4719
extern volatile unsigned char TOSH @ 0xFEF;

asm("TOSH equ 0FEFh");


typedef union {
struct {
unsigned TOSH :7;
};
} TOSHbits_t;
extern volatile TOSHbits_t TOSHbits @ 0xFEF;

# 4744
extern volatile __bit ABDEN @ (((unsigned) &BAUDCON)*8) + 0;

extern volatile __bit ABDOVF @ (((unsigned) &BAUDCON)*8) + 7;

extern volatile __bit ACKDT @ (((unsigned) &SSP1CON2)*8) + 5;

extern volatile __bit ACKEN @ (((unsigned) &SSP1CON2)*8) + 4;

extern volatile __bit ACKSTAT @ (((unsigned) &SSP1CON2)*8) + 6;

extern volatile __bit ACKTIM @ (((unsigned) &SSP1CON3)*8) + 7;

extern volatile __bit ACTEN @ (((unsigned) &ACTCON)*8) + 7;

extern volatile __bit ACTIE @ (((unsigned) &PIE2)*8) + 1;

extern volatile __bit ACTIF @ (((unsigned) &PIR2)*8) + 1;

extern volatile __bit ACTLOCK @ (((unsigned) &ACTCON)*8) + 3;

extern volatile __bit ACTORS @ (((unsigned) &ACTCON)*8) + 1;

extern volatile __bit ACTSRC @ (((unsigned) &ACTCON)*8) + 4;

extern volatile __bit ACTUD @ (((unsigned) &ACTCON)*8) + 6;

extern volatile __bit ACTVIE @ (((unsigned) &UIE)*8) + 2;

extern volatile __bit ACTVIF @ (((unsigned) &UIR)*8) + 2;

extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;

extern volatile __bit ADDR0 @ (((unsigned) &UADDR)*8) + 0;

extern volatile __bit ADDR1 @ (((unsigned) &UADDR)*8) + 1;

extern volatile __bit ADDR2 @ (((unsigned) &UADDR)*8) + 2;

extern volatile __bit ADDR3 @ (((unsigned) &UADDR)*8) + 3;

extern volatile __bit ADDR4 @ (((unsigned) &UADDR)*8) + 4;

extern volatile __bit ADDR5 @ (((unsigned) &UADDR)*8) + 5;

extern volatile __bit ADDR6 @ (((unsigned) &UADDR)*8) + 6;

extern volatile __bit AHEN @ (((unsigned) &SSP1CON3)*8) + 1;

extern volatile __bit ANSC0 @ (((unsigned) &ANSELC)*8) + 0;

extern volatile __bit ANSC1 @ (((unsigned) &ANSELC)*8) + 1;

extern volatile __bit ANSC2 @ (((unsigned) &ANSELC)*8) + 2;

extern volatile __bit ANSC3 @ (((unsigned) &ANSELC)*8) + 3;

extern volatile __bit BCL1IE @ (((unsigned) &PIE2)*8) + 3;

extern volatile __bit BCL1IF @ (((unsigned) &PIR2)*8) + 3;

extern volatile __bit BF @ (((unsigned) &SSP1STAT)*8) + 0;

extern volatile __bit BOEN @ (((unsigned) &SSP1CON3)*8) + 4;

extern volatile __bit BORFS @ (((unsigned) &BORCON)*8) + 6;

extern volatile __bit BORRDY @ (((unsigned) &BORCON)*8) + 0;

extern volatile __bit BRG16 @ (((unsigned) &BAUDCON)*8) + 3;

extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;

extern volatile __bit BSR0 @ (((unsigned) &BSR)*8) + 0;

extern volatile __bit BSR1 @ (((unsigned) &BSR)*8) + 1;

extern volatile __bit BSR2 @ (((unsigned) &BSR)*8) + 2;

extern volatile __bit BSR3 @ (((unsigned) &BSR)*8) + 3;

extern volatile __bit BSR4 @ (((unsigned) &BSR)*8) + 4;

extern volatile __bit BTOEE @ (((unsigned) &UEIE)*8) + 4;

extern volatile __bit BTOEF @ (((unsigned) &UEIR)*8) + 4;

extern volatile __bit BTSEE @ (((unsigned) &UEIE)*8) + 7;

extern volatile __bit BTSEF @ (((unsigned) &UEIR)*8) + 7;

extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;

extern volatile __bit CFGS @ (((unsigned) &PMCON1)*8) + 6;

extern volatile __bit CKE @ (((unsigned) &SSP1STAT)*8) + 6;

extern volatile __bit CKP @ (((unsigned) &SSP1CON1)*8) + 4;

extern volatile __bit CLKRCD0 @ (((unsigned) &CLKRCON)*8) + 3;

extern volatile __bit CLKRCD1 @ (((unsigned) &CLKRCON)*8) + 4;

extern volatile __bit CLKRDIV0 @ (((unsigned) &CLKRCON)*8) + 0;

extern volatile __bit CLKRDIV1 @ (((unsigned) &CLKRCON)*8) + 1;

extern volatile __bit CLKRDIV2 @ (((unsigned) &CLKRCON)*8) + 2;

extern volatile __bit CLKREN @ (((unsigned) &CLKRCON)*8) + 7;

extern volatile __bit CLKROE @ (((unsigned) &CLKRCON)*8) + 6;

extern volatile __bit CLKRSEL @ (((unsigned) &APFCON)*8) + 7;

extern volatile __bit CLKRSLR @ (((unsigned) &CLKRCON)*8) + 5;

extern volatile __bit CRC16EE @ (((unsigned) &UEIE)*8) + 2;

extern volatile __bit CRC16EF @ (((unsigned) &UEIR)*8) + 2;

extern volatile __bit CRC5EE @ (((unsigned) &UEIE)*8) + 1;

extern volatile __bit CRC5EF @ (((unsigned) &UEIR)*8) + 1;

extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;

extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;

extern volatile __bit DFN8EE @ (((unsigned) &UEIE)*8) + 3;

extern volatile __bit DFN8EF @ (((unsigned) &UEIR)*8) + 3;

extern volatile __bit DHEN @ (((unsigned) &SSP1CON3)*8) + 0;

extern volatile __bit DIR @ (((unsigned) &USTAT)*8) + 2;

extern volatile __bit D_nA @ (((unsigned) &SSP1STAT)*8) + 5;

extern volatile __bit ENDP0 @ (((unsigned) &USTAT)*8) + 3;

extern volatile __bit ENDP1 @ (((unsigned) &USTAT)*8) + 4;

extern volatile __bit ENDP2 @ (((unsigned) &USTAT)*8) + 5;

extern volatile __bit ENDP3 @ (((unsigned) &USTAT)*8) + 6;

extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;

extern volatile __bit FREE @ (((unsigned) &PMCON1)*8) + 4;

extern volatile __bit FRM0 @ (((unsigned) &UFRML)*8) + 0;

extern volatile __bit FRM1 @ (((unsigned) &UFRML)*8) + 1;

extern volatile __bit FRM10 @ (((unsigned) &UFRMH)*8) + 2;

extern volatile __bit FRM2 @ (((unsigned) &UFRML)*8) + 2;

extern volatile __bit FRM3 @ (((unsigned) &UFRML)*8) + 3;

extern volatile __bit FRM4 @ (((unsigned) &UFRML)*8) + 4;

extern volatile __bit FRM5 @ (((unsigned) &UFRML)*8) + 5;

extern volatile __bit FRM6 @ (((unsigned) &UFRML)*8) + 6;

extern volatile __bit FRM7 @ (((unsigned) &UFRML)*8) + 7;

extern volatile __bit FRM8 @ (((unsigned) &UFRMH)*8) + 0;

extern volatile __bit FRM9 @ (((unsigned) &UFRMH)*8) + 1;

extern volatile __bit FSEN @ (((unsigned) &UCFG)*8) + 2;

extern volatile __bit FVREN @ (((unsigned) &FVRCON)*8) + 7;

extern volatile __bit FVRRDY @ (((unsigned) &FVRCON)*8) + 6;

extern volatile __bit GCEN @ (((unsigned) &SSP1CON2)*8) + 7;

extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;

extern volatile __bit HFIOFR @ (((unsigned) &OSCSTAT)*8) + 4;

extern volatile __bit HFIOFS @ (((unsigned) &OSCSTAT)*8) + 0;

extern volatile __bit IDLEIE @ (((unsigned) &UIE)*8) + 4;

extern volatile __bit IDLEIF @ (((unsigned) &UIR)*8) + 4;

extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;

extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;

extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;

extern volatile __bit IOCAF0 @ (((unsigned) &IOCAF)*8) + 0;

extern volatile __bit IOCAF1 @ (((unsigned) &IOCAF)*8) + 1;

extern volatile __bit IOCAF3 @ (((unsigned) &IOCAF)*8) + 3;

extern volatile __bit IOCAF4 @ (((unsigned) &IOCAF)*8) + 4;

extern volatile __bit IOCAF5 @ (((unsigned) &IOCAF)*8) + 5;

extern volatile __bit IOCAN0 @ (((unsigned) &IOCAN)*8) + 0;

extern volatile __bit IOCAN1 @ (((unsigned) &IOCAN)*8) + 1;

extern volatile __bit IOCAN3 @ (((unsigned) &IOCAN)*8) + 3;

extern volatile __bit IOCAN4 @ (((unsigned) &IOCAN)*8) + 4;

extern volatile __bit IOCAN5 @ (((unsigned) &IOCAN)*8) + 5;

extern volatile __bit IOCAP0 @ (((unsigned) &IOCAP)*8) + 0;

extern volatile __bit IOCAP1 @ (((unsigned) &IOCAP)*8) + 1;

extern volatile __bit IOCAP3 @ (((unsigned) &IOCAP)*8) + 3;

extern volatile __bit IOCAP4 @ (((unsigned) &IOCAP)*8) + 4;

extern volatile __bit IOCAP5 @ (((unsigned) &IOCAP)*8) + 5;

extern volatile __bit IOCIE @ (((unsigned) &INTCON)*8) + 3;

extern volatile __bit IOCIF @ (((unsigned) &INTCON)*8) + 0;

extern volatile __bit IRCF0 @ (((unsigned) &OSCCON)*8) + 2;

extern volatile __bit IRCF1 @ (((unsigned) &OSCCON)*8) + 3;

extern volatile __bit IRCF2 @ (((unsigned) &OSCCON)*8) + 4;

extern volatile __bit IRCF3 @ (((unsigned) &OSCCON)*8) + 5;

extern volatile __bit LATA4 @ (((unsigned) &LATA)*8) + 4;

extern volatile __bit LATA5 @ (((unsigned) &LATA)*8) + 5;

extern volatile __bit LATC0 @ (((unsigned) &LATC)*8) + 0;

extern volatile __bit LATC1 @ (((unsigned) &LATC)*8) + 1;

extern volatile __bit LATC2 @ (((unsigned) &LATC)*8) + 2;

extern volatile __bit LATC3 @ (((unsigned) &LATC)*8) + 3;

extern volatile __bit LATC4 @ (((unsigned) &LATC)*8) + 4;

extern volatile __bit LATC5 @ (((unsigned) &LATC)*8) + 5;

extern volatile __bit LFIOFR @ (((unsigned) &OSCSTAT)*8) + 1;

extern volatile __bit LWLO @ (((unsigned) &PMCON1)*8) + 5;

extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;

extern volatile __bit OSFIE @ (((unsigned) &PIE2)*8) + 7;

extern volatile __bit OSFIF @ (((unsigned) &PIR2)*8) + 7;

extern volatile __bit OSTS @ (((unsigned) &OSCSTAT)*8) + 5;

extern volatile __bit P2SEL @ (((unsigned) &APFCON)*8) + 2;

extern volatile __bit PCIE @ (((unsigned) &SSP1CON3)*8) + 6;

extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;

extern volatile __bit PEN @ (((unsigned) &SSP1CON2)*8) + 2;

extern volatile __bit PIDEE @ (((unsigned) &UEIE)*8) + 0;

extern volatile __bit PIDEF @ (((unsigned) &UEIR)*8) + 0;

extern volatile __bit PKTDIS @ (((unsigned) &UCON)*8) + 4;

extern volatile __bit PLLRDY @ (((unsigned) &OSCSTAT)*8) + 6;

extern volatile __bit PPB0 @ (((unsigned) &UCFG)*8) + 0;

extern volatile __bit PPB1 @ (((unsigned) &UCFG)*8) + 1;

extern volatile __bit PPBI @ (((unsigned) &USTAT)*8) + 1;

extern volatile __bit PPBRST @ (((unsigned) &UCON)*8) + 6;

extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;

extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;

extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;

extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;

extern volatile __bit PWM1DCH0 @ (((unsigned) &PWM1DCH)*8) + 0;

extern volatile __bit PWM1DCH1 @ (((unsigned) &PWM1DCH)*8) + 1;

extern volatile __bit PWM1DCH2 @ (((unsigned) &PWM1DCH)*8) + 2;

extern volatile __bit PWM1DCH3 @ (((unsigned) &PWM1DCH)*8) + 3;

extern volatile __bit PWM1DCH4 @ (((unsigned) &PWM1DCH)*8) + 4;

extern volatile __bit PWM1DCH5 @ (((unsigned) &PWM1DCH)*8) + 5;

extern volatile __bit PWM1DCH6 @ (((unsigned) &PWM1DCH)*8) + 6;

extern volatile __bit PWM1DCH7 @ (((unsigned) &PWM1DCH)*8) + 7;

extern volatile __bit PWM1DCL0 @ (((unsigned) &PWM1DCL)*8) + 6;

extern volatile __bit PWM1DCL1 @ (((unsigned) &PWM1DCL)*8) + 7;

extern volatile __bit PWM1EN @ (((unsigned) &PWM1CON)*8) + 7;

extern volatile __bit PWM1OE @ (((unsigned) &PWM1CON)*8) + 6;

extern volatile __bit PWM1OUT @ (((unsigned) &PWM1CON)*8) + 5;

extern volatile __bit PWM1POL @ (((unsigned) &PWM1CON)*8) + 4;

extern volatile __bit PWM2DCH0 @ (((unsigned) &PWM2DCH)*8) + 0;

extern volatile __bit PWM2DCH1 @ (((unsigned) &PWM2DCH)*8) + 1;

extern volatile __bit PWM2DCH2 @ (((unsigned) &PWM2DCH)*8) + 2;

extern volatile __bit PWM2DCH3 @ (((unsigned) &PWM2DCH)*8) + 3;

extern volatile __bit PWM2DCH4 @ (((unsigned) &PWM2DCH)*8) + 4;

extern volatile __bit PWM2DCH5 @ (((unsigned) &PWM2DCH)*8) + 5;

extern volatile __bit PWM2DCH6 @ (((unsigned) &PWM2DCH)*8) + 6;

extern volatile __bit PWM2DCH7 @ (((unsigned) &PWM2DCH)*8) + 7;

extern volatile __bit PWM2DCL0 @ (((unsigned) &PWM2DCL)*8) + 6;

extern volatile __bit PWM2DCL1 @ (((unsigned) &PWM2DCL)*8) + 7;

extern volatile __bit PWM2EN @ (((unsigned) &PWM2CON)*8) + 7;

extern volatile __bit PWM2OE @ (((unsigned) &PWM2CON)*8) + 6;

extern volatile __bit PWM2OUT @ (((unsigned) &PWM2CON)*8) + 5;

extern volatile __bit PWM2POL @ (((unsigned) &PWM2CON)*8) + 4;

extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;

extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;

extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;

extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;

extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;

extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;

extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;

extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;

extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;

extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;

extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;

extern volatile __bit RCEN @ (((unsigned) &SSP1CON2)*8) + 3;

extern volatile __bit RCIDL @ (((unsigned) &BAUDCON)*8) + 6;

extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;

extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;

extern volatile __bit RD @ (((unsigned) &PMCON1)*8) + 0;

extern volatile __bit RESUME @ (((unsigned) &UCON)*8) + 2;

extern volatile __bit RSEN @ (((unsigned) &SSP1CON2)*8) + 1;

extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;

extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;

extern volatile __bit R_nW @ (((unsigned) &SSP1STAT)*8) + 2;

extern volatile __bit SBCDE @ (((unsigned) &SSP1CON3)*8) + 2;

extern volatile __bit SBOREN @ (((unsigned) &BORCON)*8) + 7;

extern volatile __bit SCIE @ (((unsigned) &SSP1CON3)*8) + 5;

extern volatile __bit SCKP @ (((unsigned) &BAUDCON)*8) + 4;

extern volatile __bit SCS0 @ (((unsigned) &OSCCON)*8) + 0;

extern volatile __bit SCS1 @ (((unsigned) &OSCCON)*8) + 1;

extern volatile __bit SDAHT @ (((unsigned) &SSP1CON3)*8) + 3;

extern volatile __bit SDOSEL @ (((unsigned) &APFCON)*8) + 6;

extern volatile __bit SE0 @ (((unsigned) &UCON)*8) + 5;

extern volatile __bit SEN @ (((unsigned) &SSP1CON2)*8) + 0;

extern volatile __bit SENDB @ (((unsigned) &TXSTA)*8) + 3;

extern volatile __bit SMP @ (((unsigned) &SSP1STAT)*8) + 7;

extern volatile __bit SOFIE @ (((unsigned) &UIE)*8) + 6;

extern volatile __bit SOFIF @ (((unsigned) &UIR)*8) + 6;

extern volatile __bit SOSCR @ (((unsigned) &OSCSTAT)*8) + 7;

extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;

extern volatile __bit SPLLEN @ (((unsigned) &OSCCON)*8) + 7;

extern volatile __bit SPLLMULT @ (((unsigned) &OSCCON)*8) + 6;

extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;

extern volatile __bit SSP1EN @ (((unsigned) &SSP1CON1)*8) + 5;

extern volatile __bit SSP1IE @ (((unsigned) &PIE1)*8) + 3;

extern volatile __bit SSP1IF @ (((unsigned) &PIR1)*8) + 3;

extern volatile __bit SSP1M0 @ (((unsigned) &SSP1CON1)*8) + 0;

extern volatile __bit SSP1M1 @ (((unsigned) &SSP1CON1)*8) + 1;

extern volatile __bit SSP1M2 @ (((unsigned) &SSP1CON1)*8) + 2;

extern volatile __bit SSP1M3 @ (((unsigned) &SSP1CON1)*8) + 3;

extern volatile __bit SSP1OV @ (((unsigned) &SSP1CON1)*8) + 6;

extern volatile __bit SSPEN @ (((unsigned) &SSP1CON1)*8) + 5;

extern volatile __bit SSPOV @ (((unsigned) &SSP1CON1)*8) + 6;

extern volatile __bit SSSEL @ (((unsigned) &APFCON)*8) + 5;

extern volatile __bit STALLIE @ (((unsigned) &UIE)*8) + 5;

extern volatile __bit STALLIF @ (((unsigned) &UIR)*8) + 5;

extern volatile __bit STKOVF @ (((unsigned) &PCON)*8) + 7;

extern volatile __bit STKUNF @ (((unsigned) &PCON)*8) + 6;

extern volatile __bit SUSPND @ (((unsigned) &UCON)*8) + 1;

extern volatile __bit SWDTEN @ (((unsigned) &WDTCON)*8) + 0;

extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;

extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;

extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;

extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;

extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;

extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;

extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;

extern volatile __bit T1GGO_nDONE @ (((unsigned) &T1GCON)*8) + 3;

extern volatile __bit T1GPOL @ (((unsigned) &T1GCON)*8) + 6;

extern volatile __bit T1GSEL @ (((unsigned) &APFCON)*8) + 3;

extern volatile __bit T1GSPM @ (((unsigned) &T1GCON)*8) + 4;

extern volatile __bit T1GSS0 @ (((unsigned) &T1GCON)*8) + 0;

extern volatile __bit T1GSS1 @ (((unsigned) &T1GCON)*8) + 1;

extern volatile __bit T1GTM @ (((unsigned) &T1GCON)*8) + 5;

extern volatile __bit T1GVAL @ (((unsigned) &T1GCON)*8) + 2;

extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;

extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;

extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;

extern volatile __bit T2OUTPS0 @ (((unsigned) &T2CON)*8) + 3;

extern volatile __bit T2OUTPS1 @ (((unsigned) &T2CON)*8) + 4;

extern volatile __bit T2OUTPS2 @ (((unsigned) &T2CON)*8) + 5;

extern volatile __bit T2OUTPS3 @ (((unsigned) &T2CON)*8) + 6;

extern volatile __bit TMR0CS @ (((unsigned) &OPTION_REG)*8) + 5;

extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;

extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;

extern volatile __bit TMR0SE @ (((unsigned) &OPTION_REG)*8) + 4;

extern volatile __bit TMR1CS0 @ (((unsigned) &T1CON)*8) + 6;

extern volatile __bit TMR1CS1 @ (((unsigned) &T1CON)*8) + 7;

extern volatile __bit TMR1GE @ (((unsigned) &T1GCON)*8) + 7;

extern volatile __bit TMR1GIE @ (((unsigned) &PIE1)*8) + 7;

extern volatile __bit TMR1GIF @ (((unsigned) &PIR1)*8) + 7;

extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;

extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;

extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;

extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;

extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;

extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;

extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;

extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;

extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;

extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;

extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;

extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;

extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;

extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;

extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;

extern volatile __bit TRNIE @ (((unsigned) &UIE)*8) + 3;

extern volatile __bit TRNIF @ (((unsigned) &UIR)*8) + 3;

extern volatile __bit TUN0 @ (((unsigned) &OSCTUNE)*8) + 0;

extern volatile __bit TUN1 @ (((unsigned) &OSCTUNE)*8) + 1;

extern volatile __bit TUN2 @ (((unsigned) &OSCTUNE)*8) + 2;

extern volatile __bit TUN3 @ (((unsigned) &OSCTUNE)*8) + 3;

extern volatile __bit TUN4 @ (((unsigned) &OSCTUNE)*8) + 4;

extern volatile __bit TUN5 @ (((unsigned) &OSCTUNE)*8) + 5;

extern volatile __bit TUN6 @ (((unsigned) &OSCTUNE)*8) + 6;

extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;

extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;

extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;

extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;

extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;

extern volatile __bit UA @ (((unsigned) &SSP1STAT)*8) + 1;

extern volatile __bit UERRIE @ (((unsigned) &UIE)*8) + 1;

extern volatile __bit UERRIF @ (((unsigned) &UIR)*8) + 1;

extern volatile __bit UPUEN @ (((unsigned) &UCFG)*8) + 4;

extern volatile __bit URSTIE @ (((unsigned) &UIE)*8) + 0;

extern volatile __bit URSTIF @ (((unsigned) &UIR)*8) + 0;

extern volatile __bit USBEN @ (((unsigned) &UCON)*8) + 3;

extern volatile __bit USBIE @ (((unsigned) &PIE2)*8) + 2;

extern volatile __bit USBIF @ (((unsigned) &PIR2)*8) + 2;

extern volatile __bit UTEYE @ (((unsigned) &UCFG)*8) + 7;

extern volatile __bit VREGPM0 @ (((unsigned) &VREGCON)*8) + 0;

extern volatile __bit VREGPM1 @ (((unsigned) &VREGCON)*8) + 1;

extern volatile __bit WCOL @ (((unsigned) &SSP1CON1)*8) + 7;

extern volatile __bit WDTPS0 @ (((unsigned) &WDTCON)*8) + 1;

extern volatile __bit WDTPS1 @ (((unsigned) &WDTCON)*8) + 2;

extern volatile __bit WDTPS2 @ (((unsigned) &WDTCON)*8) + 3;

extern volatile __bit WDTPS3 @ (((unsigned) &WDTCON)*8) + 4;

extern volatile __bit WDTPS4 @ (((unsigned) &WDTCON)*8) + 5;

extern volatile __bit WPUA3 @ (((unsigned) &WPUA)*8) + 3;

extern volatile __bit WPUA4 @ (((unsigned) &WPUA)*8) + 4;

extern volatile __bit WPUA5 @ (((unsigned) &WPUA)*8) + 5;

extern volatile __bit WR @ (((unsigned) &PMCON1)*8) + 1;

extern volatile __bit WREN @ (((unsigned) &PMCON1)*8) + 2;

extern volatile __bit WRERR @ (((unsigned) &PMCON1)*8) + 3;

extern volatile __bit WUE @ (((unsigned) &BAUDCON)*8) + 1;

extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;

extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;

extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;

extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;

extern volatile __bit nRI @ (((unsigned) &PCON)*8) + 2;

extern volatile __bit nRMCLR @ (((unsigned) &PCON)*8) + 3;

extern volatile __bit nRWDT @ (((unsigned) &PCON)*8) + 4;

extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;

extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;

extern volatile __bit nWPUEN @ (((unsigned) &OPTION_REG)*8) + 7;


# 28 "C:\Program Files (x86)\Microchip\xc8\v1.44\include\pic.h"
#pragma intrinsic(__nop)
extern void __nop(void);

# 78
extern unsigned int flash_read(unsigned short addr);


# 152
#pragma intrinsic(_delay)
extern __nonreentrant void _delay(unsigned long);
#pragma intrinsic(_delaywdt)
extern __nonreentrant void _delaywdt(unsigned long);

#pragma intrinsic(_delay3)
extern __nonreentrant void _delay3(unsigned char);

# 193
extern __bank0 unsigned char __resetbits;
extern __bank0 __bit __powerdown;
extern __bank0 __bit __timeout;

# 4 "C:\Program Files (x86)\Microchip\xc8\v1.44\include\__size_t.h"
typedef unsigned size_t;

# 14 "C:\Program Files (x86)\Microchip\xc8\v1.44\include\string.h"
extern void * memcpy(void *, const void *, size_t);
extern void * memmove(void *, const void *, size_t);
extern void * memset(void *, int, size_t);




extern void * __builtin_memcpy(void *, const void *, size_t);
#pragma intrinsic(__builtin_memcpy)

# 36
extern char * strcat(char *, const char *);
extern char * strcpy(char *, const char *);
extern char * strncat(char *, const char *, size_t);
extern char * strncpy(char *, const char *, size_t);
extern char * strdup(const char *);
extern char * strtok(char *, const char *);


extern int memcmp(const void *, const void *, size_t);
extern int strcmp(const char *, const char *);
extern int stricmp(const char *, const char *);
extern int strncmp(const char *, const char *, size_t);
extern int strnicmp(const char *, const char *, size_t);
extern void * memchr(const void *, int, size_t);
extern size_t strcspn(const char *, const char *);
extern char * strpbrk(const char *, const char *);
extern size_t strspn(const char *, const char *);
extern char * strstr(const char *, const char *);
extern char * stristr(const char *, const char *);
extern char * strerror(int);
extern size_t strlen(const char *);
extern char * strchr(const char *, int);
extern char * strichr(const char *, int);
extern char * strrchr(const char *, int);
extern char * strrichr(const char *, int);

# 13 "C:\Program Files (x86)\Microchip\xc8\v1.44\include\stdint.h"
typedef signed char int8_t;

# 20
typedef signed int int16_t;

# 28
typedef signed short long int int24_t;

# 36
typedef signed long int int32_t;

# 43
typedef unsigned char uint8_t;

# 49
typedef unsigned int uint16_t;

# 56
typedef unsigned short long int uint24_t;

# 63
typedef unsigned long int uint32_t;

# 71
typedef signed char int_least8_t;

# 78
typedef signed int int_least16_t;

# 90
typedef signed short long int int_least24_t;

# 98
typedef signed long int int_least32_t;

# 105
typedef unsigned char uint_least8_t;

# 111
typedef unsigned int uint_least16_t;

# 121
typedef unsigned short long int uint_least24_t;

# 128
typedef unsigned long int uint_least32_t;

# 137
typedef signed char int_fast8_t;

# 144
typedef signed int int_fast16_t;

# 156
typedef signed short long int int_fast24_t;

# 164
typedef signed long int int_fast32_t;

# 171
typedef unsigned char uint_fast8_t;

# 177
typedef unsigned int uint_fast16_t;

# 187
typedef unsigned short long int uint_fast24_t;

# 194
typedef unsigned long int uint_fast32_t;

# 200
typedef int32_t intmax_t;




typedef uint32_t uintmax_t;




typedef int16_t intptr_t;




typedef uint16_t uintptr_t;

# 12 "C:\Program Files (x86)\Microchip\xc8\v1.44\include\stdbool.h"
typedef unsigned char bool;

# 7 "C:\Program Files (x86)\Microchip\xc8\v1.44\include\stdlib.h"
typedef unsigned short wchar_t;

# 15
typedef struct {
int rem;
int quot;
} div_t;
typedef struct {
unsigned rem;
unsigned quot;
} udiv_t;
typedef struct {
long quot;
long rem;
} ldiv_t;
typedef struct {
unsigned long quot;
unsigned long rem;
} uldiv_t;

# 53
extern double atof(const char *);
extern double strtod(const char *, const char **);
extern int atoi(const char *);
extern unsigned xtoi(const char *);
extern long atol(const char *);
extern long strtol(const char *, char **, int);

extern int rand(void);
extern void srand(unsigned int);
extern void * calloc(size_t, size_t);
extern div_t div(int numer, int denom);
extern udiv_t udiv(unsigned numer, unsigned denom);
extern ldiv_t ldiv(long numer, long denom);
extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
extern unsigned long _lrotl(unsigned long value, unsigned int shift);
extern unsigned long _lrotr(unsigned long value, unsigned int shift);
extern unsigned int _rotl(unsigned int value, unsigned int shift);
extern unsigned int _rotr(unsigned int value, unsigned int shift);




extern void * malloc(size_t);
extern void free(void *);
extern void * realloc(void *, size_t);

# 86
extern int atexit(void (*)(void));
extern char * getenv(const char *);
extern char ** environ;
extern int system(char *);
extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
extern int abs(int);
extern long labs(long);

extern char * itoa(char * buf, int val, int base);
extern char * utoa(char * buf, unsigned val, int base);




extern char * ltoa(char * buf, long val, int base);
extern char * ultoa(char * buf, unsigned long val, int base);

extern char * ftoa(float f, int * status);

# 46 "../include\usb.h"
struct setup_packet;

# 83
extern int16_t usb_application_get_string(uint8_t string_number, const void **ptr);

# 92
extern const struct device_descriptor this_device_descriptor;

# 110
extern const struct configuration_descriptor *usb_application_config_descs[];

# 144
void app_set_configuration_callback(uint8_t configuration);

# 158
uint16_t app_get_device_status_callback();

# 172
void app_endpoint_halt_callback(uint8_t endpoint, bool halted);

# 191
int8_t app_set_interface_callback(uint8_t interface, uint8_t alt_setting);

# 209
int8_t app_get_interface_callback(uint8_t interface);

# 226
void app_out_transaction_callback(uint8_t endpoint);

# 243
void app_in_transaction_complete_callback(uint8_t endpoint);

# 290
int8_t app_unknown_setup_request_callback(const struct setup_packet *pkt);

# 316
int16_t app_unknown_get_descriptor_callback(const struct setup_packet *pkt, const void **descriptor);

# 327
void app_start_of_frame_callback(void);

# 337
void app_usb_reset_callback(void);

# 350
void usb_init(void);

# 364
void usb_service(void);

# 375
uint8_t usb_get_configuration(void);

# 402
unsigned char *usb_get_in_buffer(uint8_t endpoint);

# 416
void usb_send_in_buffer(uint8_t endpoint, size_t len);

# 428
bool usb_in_endpoint_busy(uint8_t endpoint);

# 441
bool usb_in_endpoint_halted(uint8_t endpoint);

# 454
bool usb_out_endpoint_has_data(uint8_t endpoint);

# 466
void usb_arm_out_endpoint(uint8_t endpoint);

# 480
bool usb_out_endpoint_halted(uint8_t endpoint);

# 495
uint8_t usb_get_out_buffer(uint8_t endpoint, const unsigned char **buffer);

# 508
typedef void (*usb_ep0_data_stage_callback)(bool transfer_ok, void *context);

# 533
void usb_start_receive_ep0_data_stage(char *buffer, size_t len,
usb_ep0_data_stage_callback callback, void *context);

# 562
void usb_send_data_stage(char *buffer, size_t len,
usb_ep0_data_stage_callback callback, void *context);

# 109 "../usb_hal.h"
struct buffer_descriptor {
union {
struct {

uint8_t BC8 : 1;
uint8_t BC9 : 1;
uint8_t PID : 4;
uint8_t reserved: 1;
uint8_t UOWN : 1;
};
struct {

uint8_t : 1;
uint8_t : 1;
uint8_t BSTALL : 1;
uint8_t DTSEN : 1;
uint8_t INCDIS : 1;
uint8_t KEN : 1;
uint8_t DTS : 1;
uint8_t : 1;
};
uint8_t BDnSTAT;
} STAT;
uint8_t BDnCNT;
uint16_t BDnADR;
};

# 59 "../include\usb_ch9.h"
enum PID {
PID_OUT = 0x01,
PID_IN = 0x09,
PID_SOF = 0x05,
PID_SETUP = 0x0D,
PID_DATA0 = 0x03,
PID_DATA1 = 0x0B,
PID_DATA2 = 0x07,
PID_MDATA = 0x0F,
PID_ACK = 0x02,
PID_NAK = 0x0A,
PID_STALL = 0x0E,
PID_NYET = 0x06,
PID_PRE = 0x0C,
PID_ERR = 0x0C,
PID_SPLIT = 0x08,
PID_PING = 0x04,
PID_RESERVED = 0x00,
};

# 83
enum DestinationType {
DEST_DEVICE = 0,
DEST_INTERFACE = 1,
DEST_ENDPOINT = 2,
DEST_OTHER_ELEMENT = 3,
};

# 94
enum RequestType {
REQUEST_TYPE_STANDARD = 0,
REQUEST_TYPE_CLASS = 1,
REQUEST_TYPE_VENDOR = 2,
REQUEST_TYPE_RESERVED = 3,
};

# 105
enum StandardControlRequest {
GET_STATUS = 0x0,
CLEAR_FEATURE = 0x1,
SET_FEATURE = 0x3,
SET_ADDRESS = 0x5,
GET_DESCRIPTOR = 0x6,
SET_DESCRIPTOR = 0x7,
GET_CONFIGURATION = 0x8,
SET_CONFIGURATION = 0x9,
GET_INTERFACE = 0xA,
SET_INTERFACE = 0xB,
SYNCH_FRAME = 0xC,
};


enum DescriptorTypes {
DESC_DEVICE = 0x1,
DESC_CONFIGURATION = 0x2,
DESC_STRING = 0x3,
DESC_INTERFACE = 0x4,
DESC_ENDPOINT = 0x5,
DESC_DEVICE_QUALIFIER = 0x6,
DESC_OTHER_SPEED_CONFIGURATION = 0x7,
DESC_INTERFACE_POWER = 0x8,
DESC_OTG = 0x9,
DESC_DEBUG = 0xA,
DESC_INTERFACE_ASSOCIATION = 0xB,
};

# 143
enum DeviceClassCodes {
DEVICE_CLASS_DEFINED_AT_INTERFACE_LEVEL = 0x0,
DEVICE_CLASS_MISC = 0xef,
DEVICE_CLASS_APPLICATION_SPECIFIC = 0xfe,
DEVICE_CLASS_VENDOR_SPECIFIC = 0xff,
};


enum EndpointAttributes {
EP_CONTROL = 0x0,
EP_ISOCHRONOUS = 0x1,
EP_BULK = 0x2,
EP_INTERRUPT = 0x3,


};

# 165
struct setup_packet {
union {
struct {
uint8_t destination : 5;
uint8_t type : 2;
uint8_t direction : 1;
};
uint8_t bmRequestType;
} REQUEST;
uint8_t bRequest;
uint16_t wValue;
uint16_t wIndex;
uint16_t wLength;
};


struct device_descriptor {
uint8_t bLength;
uint8_t bDescriptorType;
uint16_t bcdUSB;
uint8_t bDeviceClass;
uint8_t bDeviceSubclass;
uint8_t bDeviceProtocol;
uint8_t bMaxPacketSize0;
uint16_t idVendor;
uint16_t idProduct;
uint16_t bcdDevice;
uint8_t iManufacturer;
uint8_t iProduct;
uint8_t iSerialNumber;
uint8_t bNumConfigurations;
};


struct configuration_descriptor {
uint8_t bLength;
uint8_t bDescriptorType;
uint16_t wTotalLength;
uint8_t bNumInterfaces;
uint8_t bConfigurationValue;
uint8_t iConfiguration;
uint8_t bmAttributes;
uint8_t bMaxPower;
};


struct interface_descriptor {
uint8_t bLength;
uint8_t bDescriptorType;
uint8_t bInterfaceNumber;
uint8_t bAlternateSetting;
uint8_t bNumEndpoints;
uint8_t bInterfaceClass;
uint8_t bInterfaceSubclass;
uint8_t bInterfaceProtocol;
uint8_t iInterface;
};


struct endpoint_descriptor {

uint8_t bLength;
uint8_t bDescriptorType;
uint8_t bEndpointAddress;
uint8_t bmAttributes;
uint16_t wMaxPacketSize;
uint8_t bInterval;
};


struct string_descriptor {
uint8_t bLength;
uint8_t bDescriptorType;
uint16_t chars[];
};

# 246
struct interface_association_descriptor {
uint8_t bLength;
uint8_t bDescriptorType;
uint8_t bFirstInterface;
uint8_t bInterfaceCount;
uint8_t bFunctionClass;
uint8_t bFunctionSubClass;
uint8_t bFunctionProtocol;
uint8_t iFunction;
};

# 65 "../include\usb_microsoft.h"
struct microsoft_os_descriptor {
uint8_t bLength;
uint8_t bDescriptorType;
uint16_t qwSignature[7];
uint8_t bMS_VendorCode;

# 72
uint8_t bPad;
};

# 79
struct microsoft_extended_compat_header {
uint32_t dwLength;
uint16_t bcdVersion;
uint16_t wIndex;
uint8_t bCount;
uint8_t reserved[7];
};

# 91
struct microsoft_extended_compat_function {
uint8_t bFirstInterfaceNumber;
uint8_t reserved;
uint8_t compatibleID[8];
uint8_t subCompatibleID[8];
uint8_t reserved2[6];
};

# 103
struct microsoft_extended_properties_header {
uint32_t dwLength;
uint16_t bcdVersion;
uint16_t wIndex;
uint16_t bCount;
};

# 117
struct microsoft_extended_property_section_header {
uint32_t dwSize;
uint32_t dwPropertyDataType;

# 127
};

# 34 "../usb_winusb.h"
uint16_t m_stack_winusb_get_microsoft_compat(uint8_t interface,
const void **descriptor);

uint16_t m_stack_winusb_get_microsoft_property(uint8_t interface,
const void **descriptor);


# 59 "../usb.c"
#pragma warning disable 1088

# 101
typedef char STATIC_SIZE_CHECK_LINE_101 [(sizeof(struct endpoint_descriptor)==7)?1:-1];
typedef char STATIC_SIZE_CHECK_LINE_102 [(sizeof(struct interface_descriptor)==9)?1:-1];
typedef char STATIC_SIZE_CHECK_LINE_103 [(sizeof(struct configuration_descriptor)==9)?1:-1];
typedef char STATIC_SIZE_CHECK_LINE_104 [(sizeof(struct device_descriptor)==18)?1:-1];
typedef char STATIC_SIZE_CHECK_LINE_105 [(sizeof(struct interface_association_descriptor)==8)?1:-1];
typedef char STATIC_SIZE_CHECK_LINE_106 [(sizeof(struct setup_packet)==8)?1:-1];
typedef char STATIC_SIZE_CHECK_LINE_107 [(sizeof(struct microsoft_os_descriptor)==18)?1:-1];
typedef char STATIC_SIZE_CHECK_LINE_108 [(sizeof(struct microsoft_extended_compat_header)==16)?1:-1];
typedef char STATIC_SIZE_CHECK_LINE_109 [(sizeof(struct microsoft_extended_compat_function)==24)?1:-1];
typedef char STATIC_SIZE_CHECK_LINE_110 [(sizeof(struct microsoft_extended_properties_header)==10)?1:-1];
typedef char STATIC_SIZE_CHECK_LINE_111 [(sizeof(struct microsoft_extended_property_section_header)==8)?1:-1];



typedef char STATIC_SIZE_CHECK_LINE_115 [(sizeof(struct buffer_descriptor)==4)?1:-1];

# 193
static struct buffer_descriptor bds[(2 * (1) + 2)] @0x2000;

# 210
static struct {

# 229
unsigned char ep_0_out_buf[1][8]; unsigned char ep_0_in_buf[1][8];

# 245
unsigned char ep_1_out_buf[1][8]; unsigned char ep_1_in_buf[1][8];

# 291
} ep_buffers @0x2080;

struct ep_buf {
unsigned char * const out;
unsigned char * const in;

# 300
const uint8_t out_len;
const uint8_t in_len;

# 310
uint8_t flags;
};

struct ep0_buf {
unsigned char * const out;
unsigned char * const in;

# 324
uint8_t flags;
};

# 365
static struct ep0_buf ep0_buf = { ep_buffers.ep_0_out_buf[0], ep_buffers.ep_0_in_buf[0] };

static struct ep_buf ep_buf[1+1] = {

{ (0), (0) },



{ ep_buffers.ep_1_out_buf[0], ep_buffers.ep_1_in_buf[0], 8, 8 },

# 418
};




static bool addr_pending;
static uint8_t addr;
static uint8_t g_configuration;
static bool control_need_zlp;
static bool returning_short;


static usb_ep0_data_stage_callback ep0_data_stage_callback;
static char *ep0_data_stage_in_buffer;
static char *ep0_data_stage_out_buffer;
static size_t ep0_data_stage_buf_remaining;
static void *ep0_data_stage_context;
static uint8_t ep0_data_stage_direc;

# 449
static uint16_t pic16_linear_addr(void *ptr)
{
uint8_t high, low;
uint16_t addr = (uint16_t) ptr;


if (addr >= 0x2000)
return addr;

high = (addr & 0xff00) >> 8;
low = addr & 0x00ff;

return 0x2000 +
(low & 0x7f) - 0x20 +
((high << 1) + (low & 0x80)? 1: 0) * 0x50;
}


static void reset_ep0_data_stage()
{
ep0_data_stage_in_buffer = (0);
ep0_data_stage_out_buffer = (0);
ep0_data_stage_buf_remaining = 0;
ep0_data_stage_callback = (0);

# 479
}

# 487
void usb_init(void)
{
uint8_t i;



do { UCFGbits.PPB0 = 0 & 1; UCFGbits.PPB1 = (0 & 2)? 1: 0; } while (0);

# 499
UIE = 0x0;
UEIE = 0x0;

UCONbits.USBEN = 1;

# 510
UCFGbits.UPUEN = 1;

# 518
UCFGbits.FSEN = 1;


UIRbits.TRNIF = 0;
UIRbits.TRNIF = 0;
UIRbits.TRNIF = 0;
UIRbits.TRNIF = 0;

UIR = 0;


UIEbits.TRNIE = 1;
UIEbits.STALLIE = 1;
UIEbits.URSTIE = 1;

UIEbits.SOFIE = 1;

# 576
memset(((UEP1bits_t*) (&UEP0 + 1 * (0))), 0x0, sizeof(*((UEP1bits_t*) (&UEP0 + 1 * (0)))) * 16);


((UEP1bits_t*) (&UEP0 + 1 * (0)))->EPHSHK = 1;
((UEP1bits_t*) (&UEP0 + 1 * (0)))->EPCONDIS = 0;
((UEP1bits_t*) (&UEP0 + 1 * (0)))->EPOUTEN = 1;
((UEP1bits_t*) (&UEP0 + 1 * (0)))->EPINEN = 1;
((UEP1bits_t*) (&UEP0 + 1 * (0)))->EPSTALL = 0;

for (i = 1; i <= 1; i++) {
volatile UEP1bits_t *ep = ((UEP1bits_t*) (&UEP0 + 1 * (i)));
ep->EPHSHK = 1;
ep->EPCONDIS = 1;
ep->EPOUTEN = 1;
ep->EPINEN = 1;
ep->EPSTALL = 0;
}


UADDR = 0x0;
addr_pending = 0;
g_configuration = 0;
ep0_buf.flags = 0;
for (i = 0; i <= 1; i++) {



ep_buf[i].flags = 0x4;

}

memset(bds, 0x0, sizeof(bds));

# 611
bds[0].BDnADR = (uint16_t) pic16_linear_addr(ep0_buf.out);
do { (bds[0]).BDnCNT = (8); (bds[0]).STAT.BDnSTAT = (0x80); } while(0);

# 621
bds[1].BDnADR = (uint16_t) pic16_linear_addr(ep0_buf.in);
do { (bds[1]).BDnCNT = (8); (bds[1]).STAT.BDnSTAT = (0); } while(0);

# 628
for (i = 1; i <= 1; i++) {

# 631
bds[(i) * 2].BDnADR = (uint16_t) pic16_linear_addr(ep_buf[i].out);
do { (bds[(i) * 2]).BDnCNT = (ep_buf[i].out_len); (bds[(i) * 2]).STAT.BDnSTAT = (0x80|0x08); } while(0);

# 640
bds[(i) * 2 + 1].BDnADR = (uint16_t) pic16_linear_addr(ep_buf[i].in);
do { (bds[(i) * 2 + 1]).BDnCNT = (ep_buf[i].in_len); (bds[(i) * 2 + 1]).STAT.BDnSTAT = (0); } while(0);

# 647
}

# 657
reset_ep0_data_stage();


PIE2bits.USBIE = 1;



}

static void reset_bd0_out(void)
{

# 674
do { (bds[0]).BDnCNT = (8); (bds[0]).STAT.BDnSTAT = (0x80); } while(0);

}

static void stall_ep0(void)
{

# 686
do { (bds[1]).BDnCNT = (8); (bds[1]).STAT.BDnSTAT = (0x80|0x04); } while(0);

}


static void clear_ep0_stall(void)
{

# 700
do { (bds[1]).BDnCNT = (8); (bds[1]).STAT.BDnSTAT = (0); } while(0);

}


static void stall_ep_in(uint8_t ep)
{

# 710
do { (bds[(ep) * 2 + 1]).BDnCNT = (ep_buf[ep].in_len); (bds[(ep) * 2 + 1]).STAT.BDnSTAT = (0x80|0x04); } while(0);

# 714
}

static void stall_ep_out(uint8_t ep)
{

# 721
do { (bds[(ep) * 2]).BDnCNT = (0); (bds[(ep) * 2]).STAT.BDnSTAT = (0x80|0x04); } while(0);

# 725
}

static void send_zero_length_packet_ep0()
{

# 735
bds[1].STAT.BDnSTAT = 0;
do { (bds[1]).BDnCNT = (0); (bds[1]).STAT.BDnSTAT = (0x80|0x40|0x08); } while(0);

}

static void usb_send_in_buffer_0(size_t len)
{
if (!usb_in_endpoint_halted(0)) {

# 760
uint8_t pid;
pid = (ep0_buf.flags & 0x8)? 1 : 0;
bds[1].STAT.BDnSTAT = 0;

if (pid)
do { (bds[1]).BDnCNT = (len); (bds[1]).STAT.BDnSTAT = (0x80|0x40|0x08); } while(0);

# 767
else
do { (bds[1]).BDnCNT = (len); (bds[1]).STAT.BDnSTAT = (0x80|0x08); } while(0);

# 771
ep0_buf.flags ^= 0x8;

}
}

# 811
static void start_control_return(const void *ptr, size_t len, size_t bytes_asked_for)
{
uint8_t bytes_to_send = (((len)<(8))?(len):(8));
bytes_to_send = (((bytes_to_send)<(bytes_asked_for))?(bytes_to_send):(bytes_asked_for));
returning_short = len < bytes_asked_for;
__builtin_memcpy(ep0_buf.in,ptr,bytes_to_send);;
ep0_data_stage_in_buffer = ((char*)ptr) + bytes_to_send;
ep0_data_stage_buf_remaining = (((bytes_asked_for)<(len))?(bytes_asked_for):(len)) - bytes_to_send;


ep0_buf.flags |= 0x8;
usb_send_in_buffer_0(bytes_to_send);
}

static inline int8_t handle_standard_control_request()
{
 struct setup_packet *setup;
int8_t res = 0;

# 836
setup = (struct setup_packet*) ep0_buf.out;


if (setup->bRequest == GET_DESCRIPTOR &&
setup->REQUEST.bmRequestType == 0x80 ) {
char descriptor = ((setup->wValue >> 8) & 0x00ff);
uint8_t descriptor_index = setup->wValue & 0x00ff;

if (descriptor == DESC_DEVICE) {
;


start_control_return(&this_device_descriptor, this_device_descriptor.bLength, setup->wLength);
}
else if (descriptor == DESC_CONFIGURATION) {
const struct configuration_descriptor *desc;
if (descriptor_index >= 1)
stall_ep0();
else {
desc = usb_application_config_descs[descriptor_index];
start_control_return(desc, desc->wTotalLength, setup->wLength);
}
}
else if (descriptor == DESC_STRING) {

# 881
{

const void *desc;
int16_t len;
{
len = usb_application_get_string(descriptor_index, &desc);
if (len < 0) {
stall_ep0();
;
}
else
start_control_return(desc, len, setup->wLength);
}

# 898
}
}
else {

int16_t len;
const void *desc;
len = app_unknown_get_descriptor_callback(setup, &desc);
if (len < 0) {
stall_ep0();
;
}
else
start_control_return(desc, len, setup->wLength);

# 917
}
}
else if (setup->bRequest == SET_ADDRESS) {

# 922
addr_pending = 1;
addr = setup->wValue;

send_zero_length_packet_ep0();
}
else if (setup->bRequest == SET_CONFIGURATION) {

# 931
uint8_t req = setup->wValue & 0x00ff;

app_set_configuration_callback(req);

send_zero_length_packet_ep0();
g_configuration = req;

;
;
}
else if (setup->bRequest == GET_CONFIGURATION) {

;
;

start_control_return(&g_configuration, 1, setup->wLength);
}
else if (setup->bRequest == GET_STATUS) {

;
;
;

if (setup->REQUEST.destination == 0 ) {

# 957
uint16_t ret;

ret = app_get_device_status_callback();

# 963
start_control_return(&ret, 2, setup->wLength);
}
else if (setup->REQUEST.destination == 2 ) {

uint8_t ep_num = setup->wIndex & 0x0f;
if (ep_num <= 1) {
uint8_t flags = ep_buf[ep_num].flags;
uint8_t ret[2];
ret[0] = ((setup->wIndex & 0x80) ?
flags & 0x2 :
flags & 0x1) != 0;
ret[1] = 0;
start_control_return(ret, 2, setup->wLength);
}
else {

stall_ep0();
}
}
else {
stall_ep0();
;
;
}

}
else if (setup->bRequest == SET_INTERFACE) {

# 994
int8_t res;
res = app_set_interface_callback(setup->wIndex, setup->wValue);
if (res < 0) {
stall_ep0();
}
else
send_zero_length_packet_ep0();

# 1007
}
else if (setup->bRequest == GET_INTERFACE) {
int8_t ret;
;
;
;
;
;

ret = app_get_interface_callback(setup->wIndex);
if (ret < 0)
stall_ep0();
else {

# 1022
start_control_return(&ret, 1, setup->wLength);
}

# 1032
}
else if (setup->bRequest == CLEAR_FEATURE || setup->bRequest == SET_FEATURE) {
uint8_t stall = 1;
if (setup->REQUEST.destination == 0 ) {
;

}

if (setup->REQUEST.destination == 2 ) {
if (setup->wValue == 0 ) {
uint8_t ep_num = setup->wIndex & 0x0f;
uint8_t ep_dir = setup->wIndex & 0x80;
if (ep_num <= 1) {
if (setup->bRequest == SET_FEATURE) {

# 1048
if (ep_dir) {
ep_buf[ep_num].flags |= 0x2;
stall_ep_in(ep_num);
}
else {
ep_buf[ep_num].flags |= 0x1;
stall_ep_out(ep_num);
}
}
else {

# 1060
if (ep_dir) {




do { (bds[(ep_num) * 2 + 1]).BDnCNT = (ep_buf[ep_num].in_len); (bds[(ep_num) * 2 + 1]).STAT.BDnSTAT = (0); } while(0);


ep_buf[ep_num].flags &= ~0x8;

ep_buf[ep_num].flags &= ~(0x2);
}
else {

# 1082
do { (bds[(ep_num) * 2]).BDnCNT = (ep_buf[ep_num].out_len); (bds[(ep_num) * 2]).STAT.BDnSTAT = (0x80|0x08); } while(0);


ep_buf[ep_num].flags |= 0x4;

ep_buf[ep_num].flags &= ~(0x1);
}
}

app_endpoint_halt_callback(setup->wIndex, (setup->bRequest == SET_FEATURE));

stall = 0;
}
}
}

if (!stall) {
send_zero_length_packet_ep0();
}
else
stall_ep0();
}
else {
res = -1;

;
;
;
;
;
}

return res;
}

static inline void handle_ep0_setup()
{
 struct setup_packet *setup;

# 1126
setup = (struct setup_packet*) ep0_buf.out;


ep0_data_stage_direc = setup->REQUEST.direction;
int8_t res;

# 1136
clear_ep0_stall();

if (ep0_data_stage_buf_remaining) {

# 1143
if (ep0_data_stage_callback)
ep0_data_stage_callback(0 , ep0_data_stage_context);

reset_ep0_data_stage();
}

if (setup->REQUEST.type == REQUEST_TYPE_STANDARD) {
res = handle_standard_control_request();
if (res < 0)
goto handle_unknown;
}

# 1178
else
goto handle_unknown;

goto out;

handle_unknown:


res = app_unknown_setup_request_callback(setup);
if (res < 0)
stall_ep0();
else {

# 1193
}

# 1199
out:

# 1204
UCONbits.PKTDIS = 0;
}

static inline void handle_ep0_out()
{



uint8_t pkt_len = (bds[0].BDnCNT);

if (ep0_data_stage_direc == 1 ) {

# 1220
if (ep0_data_stage_callback)
ep0_data_stage_callback(1 , ep0_data_stage_context);
reset_ep0_data_stage();
}
else {

# 1232
if (ep0_data_stage_out_buffer) {
uint8_t bytes_to_copy = (((pkt_len)<(ep0_data_stage_buf_remaining))?(pkt_len):(ep0_data_stage_buf_remaining));

# 1240
__builtin_memcpy(ep0_data_stage_out_buffer,ep0_buf.out,bytes_to_copy);

ep0_data_stage_out_buffer += bytes_to_copy;
ep0_data_stage_buf_remaining -= bytes_to_copy;

# 1248
if (pkt_len < 8 || ep0_data_stage_buf_remaining == 0) {

# 1253
if (bytes_to_copy < pkt_len) {

stall_ep0();
if (ep0_data_stage_callback)
ep0_data_stage_callback(0 , ep0_data_stage_context);
reset_ep0_data_stage();
}
else {

send_zero_length_packet_ep0();
}
}
}
}
}

static inline void handle_ep0_in()
{
if (addr_pending) {
UADDR = addr;
addr_pending = 0;
}

if (ep0_data_stage_buf_remaining) {

uint8_t bytes_to_send = (((ep0_data_stage_buf_remaining)<(8))?(ep0_data_stage_buf_remaining):(8));

__builtin_memcpy(ep0_buf.in,ep0_data_stage_in_buffer,bytes_to_send);;
ep0_data_stage_buf_remaining -= bytes_to_send;
ep0_data_stage_in_buffer += bytes_to_send;

# 1287
if (ep0_data_stage_buf_remaining == 0 &&
bytes_to_send == 8 &&
returning_short)
control_need_zlp = 1;

usb_send_in_buffer_0(bytes_to_send);
}
else if (control_need_zlp) {
usb_send_in_buffer_0(0);
control_need_zlp = 0;
reset_ep0_data_stage();
}
else {
if (ep0_data_stage_direc == 0 ) {

# 1305
if (ep0_data_stage_callback)
ep0_data_stage_callback(1 , ep0_data_stage_context);
reset_ep0_data_stage();
}
}
}

# 1314
void usb_service(void)
{
if (UIRbits.URSTIF) {


app_usb_reset_callback();

usb_init();
UIRbits.URSTIF = 0;
;
}

if (UIRbits.STALLIF) {

# 1332
int i;
for (i = 1; i <= 1; i++) {
volatile UEP1bits_t *ep = ((UEP1bits_t*) (&UEP0 + 1 * (i)));
ep->EPSTALL = 0;
}

UIRbits.STALLIF = 0;
}


if (UIRbits.TRNIF) {



if (USTATbits.ENDP == 0 && USTATbits.DIR == 0 ) {

# 1353
uint8_t pid = bds[0].STAT.PID;

if (pid == PID_SETUP) {
handle_ep0_setup();
}
else if (pid == PID_IN) {

# 1361
}
else if (pid == PID_OUT) {
handle_ep0_out();
}
else {

;
stall_ep0();
}

reset_bd0_out();
}
else if (USTATbits.ENDP == 0 && USTATbits.DIR == 1 ) {

# 1378
handle_ep0_in();
}
else if (USTATbits.ENDP > 0 && USTATbits.ENDP <= 1) {
if (USTATbits.DIR == 1 ) {

;
if (ep_buf[USTATbits.ENDP].flags & 0x2)
stall_ep_in(USTATbits.ENDP);
else {

app_in_transaction_complete_callback(USTATbits.ENDP);

}
}
else {

;
if (ep_buf[USTATbits.ENDP].flags & 0x1)
stall_ep_out(USTATbits.ENDP);
else {

app_out_transaction_callback(USTATbits.ENDP);

}
}
}
else {

# 1407
;
}

UIRbits.TRNIF = 0;
}


if (UIRbits.SOFIF) {

app_start_of_frame_callback();

UIRbits.SOFIF = 0;
}


if (PIR2bits.USBIF) {
PIR2bits.USBIF = 0;
}
}

uint8_t usb_get_configuration(void)
{
return g_configuration;
}

unsigned char *usb_get_in_buffer(uint8_t endpoint)
{

# 1440
return ep_buf[endpoint].in;

}

void usb_send_in_buffer(uint8_t endpoint, size_t len)
{

# 1450
if (g_configuration > 0 && !usb_in_endpoint_halted(endpoint)) {
uint8_t pid;
struct buffer_descriptor *bd;

# 1470
bd = &bds[(endpoint) * 2 + 1];
pid = (ep_buf[endpoint].flags & 0x8)? 1 : 0;
bd->STAT.BDnSTAT = 0;

if (pid)
do { (*bd).BDnCNT = (len); (*bd).STAT.BDnSTAT = (0x80|0x40|0x08); } while(0);

# 1477
else
do { (*bd).BDnCNT = (len); (*bd).STAT.BDnSTAT = (0x80|0x08); } while(0);

# 1481
ep_buf[endpoint].flags ^= 0x8;

}
}

bool usb_in_endpoint_busy(uint8_t endpoint)
{




return bds[(endpoint) * 2 + 1].STAT.UOWN;

}

bool usb_in_endpoint_halted(uint8_t endpoint)
{
return ep_buf[endpoint].flags & 0x2;
}

uint8_t usb_get_out_buffer(uint8_t endpoint, const unsigned char **buf)
{

# 1513
*buf = ep_buf[endpoint].out;
return (bds[(endpoint) * 2].BDnCNT);

}

bool usb_out_endpoint_has_data(uint8_t endpoint)
{




return !bds[(endpoint) * 2].STAT.UOWN;

}

void usb_arm_out_endpoint(uint8_t endpoint)
{

# 1548
uint8_t pid = (ep_buf[endpoint].flags & 0x4)? 1: 0;
if (pid)
do { (bds[(endpoint) * 2]).BDnCNT = (ep_buf[endpoint].out_len); (bds[(endpoint) * 2]).STAT.BDnSTAT = (0x80|0x40|0x08); } while(0);

# 1553
else
do { (bds[(endpoint) * 2]).BDnCNT = (ep_buf[endpoint].out_len); (bds[(endpoint) * 2]).STAT.BDnSTAT = (0x80|0x08); } while(0);

# 1558
ep_buf[endpoint].flags ^= 0x4;


}

bool usb_out_endpoint_halted(uint8_t endpoint)
{
return ep_buf[endpoint].flags & 0x1;
}

void usb_start_receive_ep0_data_stage(char *buffer, size_t len,
usb_ep0_data_stage_callback callback, void *context)
{
reset_ep0_data_stage();

ep0_data_stage_callback = callback;
ep0_data_stage_out_buffer = buffer;
ep0_data_stage_buf_remaining = len;
ep0_data_stage_context = context;
}

void usb_send_data_stage(char *buffer, size_t len,
usb_ep0_data_stage_callback callback, void *context)
{

# 1584
ep0_data_stage_callback = callback;
ep0_data_stage_context = context;
start_control_return(buffer, len, len);
}

