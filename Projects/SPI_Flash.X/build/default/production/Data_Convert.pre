
# 1 "Data_Convert.c"

# 13 "C:\Program Files (x86)\Microchip\xc8\v1.44\include\stdint.h"
typedef signed char int8_t;

# 20
typedef signed int int16_t;

# 28
typedef signed short long int int24_t;

# 36
typedef signed long int int32_t;

# 43
typedef unsigned char uint8_t;

# 49
typedef unsigned int uint16_t;

# 56
typedef unsigned short long int uint24_t;

# 63
typedef unsigned long int uint32_t;

# 71
typedef signed char int_least8_t;

# 78
typedef signed int int_least16_t;

# 90
typedef signed short long int int_least24_t;

# 98
typedef signed long int int_least32_t;

# 105
typedef unsigned char uint_least8_t;

# 111
typedef unsigned int uint_least16_t;

# 121
typedef unsigned short long int uint_least24_t;

# 128
typedef unsigned long int uint_least32_t;

# 137
typedef signed char int_fast8_t;

# 144
typedef signed int int_fast16_t;

# 156
typedef signed short long int int_fast24_t;

# 164
typedef signed long int int_fast32_t;

# 171
typedef unsigned char uint_fast8_t;

# 177
typedef unsigned int uint_fast16_t;

# 187
typedef unsigned short long int uint_fast24_t;

# 194
typedef unsigned long int uint_fast32_t;

# 200
typedef int32_t intmax_t;




typedef uint32_t uintmax_t;




typedef int16_t intptr_t;




typedef uint16_t uintptr_t;

# 12 "C:\Program Files (x86)\Microchip\xc8\v1.44\include\stdbool.h"
typedef unsigned char bool;

# 11 "Data_Convert.h"
uint32_t Make328A(uint8_t *val);
uint32_t Make328B(uint8_t B3, uint8_t B2, uint8_t B1, uint8_t B0);
uint32_t Make328IA(uint8_t *val);
uint32_t Make328IB(uint8_t B3, uint8_t B2, uint8_t B1, uint8_t B0);
uint16_t Make1632DW(uint32_t val, bool idx);
uint16_t Make168A(uint8_t *val);
uint16_t Make168B(uint8_t B1, uint8_t B0);
uint16_t Make168IA(uint8_t *val);
uint16_t Make168IB(uint8_t B1, uint8_t B0);
uint16_t Byte2Hex_Convert(uint8_t *pDatain, uint16_t len, uint8_t *pDataout);
uint16_t Hex2Byte_Convert(uint8_t *pDatain, uint16_t len, uint8_t *pDataout);

# 5 "Data_Convert.c"
uint32_t Make328A(uint8_t *val)
{
uint32_t res=val[0];
res<<=8;
res|=val[1];
res<<=8;
res|=val[2];
res<<=8;
res|=val[3];
return res;
}

uint32_t Make328B(uint8_t B3, uint8_t B2, uint8_t B1, uint8_t B0)
{
uint32_t res=B3;
res<<=8;
res|=B2;
res<<=8;
res|=B1;
res<<=8;
res|=B0;
return res;
}

uint32_t Make328IA(uint8_t *val)
{
uint32_t res=val[3];
res<<=8;
res|=val[2];
res<<=8;
res|=val[1];
res<<=8;
res|=val[0];
return res;
}

uint32_t Make328IB(uint8_t B3, uint8_t B2, uint8_t B1, uint8_t B0)
{
uint32_t res=B0;
res<<=8;
res|=B1;
res<<=8;
res|=B2;
res<<=8;
res|=B3;
return res;
}

uint16_t Make1632DW(uint32_t val, bool idx)
{
if(idx) val>>=16;
return (uint16_t) val;
}

uint16_t Make168A(uint8_t *val)
{
uint16_t res=val[0];
res<<=8;
res|=val[1];
return res;
}

uint16_t Make168B(uint8_t B1, uint8_t B0)
{
uint16_t res=B1;
res<<=8;
res|=B0;
return res;
}

uint16_t Make168IA(uint8_t *val)
{
uint16_t res=val[1];
res<<=8;
res|=val[0];
return res;
}

uint16_t Make168IB(uint8_t B1, uint8_t B0)
{
uint16_t res=B0;
res<<=8;
res|=B1;
return res;
}

uint16_t Byte2Hex_Convert(uint8_t *pDatain, uint16_t len, uint8_t *pDataout)
{
uint16_t newlen=len<<1;
while(len--)
{
uint8_t H, h;
H=*pDatain>>4;
if(H>9) H+='7';
else H+='0';

h=*pDatain&0x0F;
if(h>9) h+='7';
else h+='0';

*pDataout=H;
pDataout++;
*pDataout=h;
pDataout++;
pDatain++;
}
return newlen;
}

uint16_t Hex2Byte_Convert(uint8_t *pDatain, uint16_t len, uint8_t *pDataout)
{
uint16_t newlen=len>>1;
while(len--)
{
uint8_t B, b;
B=*pDatain++;
if(B>='a') B-='Y';
else if(B>='A') B-='7';
else B-='0';

b=*pDatain++;
if(b>='a') b-='Y';
else if(b>='A') b-='7';
else b-='0';

*pDataout=(B<<4)|b;
*pDataout++;
}
return newlen;
}
